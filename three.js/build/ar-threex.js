(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("three"));
	else if(typeof define === 'function' && define.amd)
		define(["three"], factory);
	else if(typeof exports === 'object')
		exports["THREEx"] = factory(require("three"));
	else
		root["THREEx"] = factory(root["THREE"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_three__) {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/artoolkit5-js/dist/ARToolkit.js":
/*!******************************************************!*\
  !*** ./node_modules/artoolkit5-js/dist/ARToolkit.js ***!
  \******************************************************/
/***/ (function(module) {

!function(A,I){ true?module.exports=I():0}("undefined"!=typeof self?self:this,(function(){return function(A){var I={};function g(B){if(I[B])return I[B].exports;var C=I[B]={i:B,l:!1,exports:{}};return A[B].call(C.exports,C,C.exports,g),C.l=!0,C.exports}return g.m=A,g.c=I,g.d=function(A,I,B){g.o(A,I)||Object.defineProperty(A,I,{enumerable:!0,get:B})},g.r=function(A){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(A,"__esModule",{value:!0})},g.t=function(A,I){if(1&I&&(A=g(A)),8&I)return A;if(4&I&&"object"==typeof A&&A&&A.__esModule)return A;var B=Object.create(null);if(g.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:A}),2&I&&"string"!=typeof A)for(var C in A)g.d(B,C,function(I){return A[I]}.bind(null,C));return B},g.n=function(A){var I=A&&A.__esModule?function(){return A.default}:function(){return A};return g.d(I,"a",I),I},g.o=function(A,I){return Object.prototype.hasOwnProperty.call(A,I)},g.p="",g(g.s=197)}([function(A,I){"function"==typeof Object.create?A.exports=function(A,I){I&&(A.super_=I,A.prototype=Object.create(I.prototype,{constructor:{value:A,enumerable:!1,writable:!0,configurable:!0}}))}:A.exports=function(A,I){if(I){A.super_=I;var g=function(){};g.prototype=I.prototype,A.prototype=new g,A.prototype.constructor=A}}},function(A,I,g){var B=g(4),C=B.Buffer;function Q(A,I){for(var g in A)I[g]=A[g]}function E(A,I,g){return C(A,I,g)}C.from&&C.alloc&&C.allocUnsafe&&C.allocUnsafeSlow?A.exports=B:(Q(B,I),I.Buffer=E),Q(C,E),E.from=function(A,I,g){if("number"==typeof A)throw new TypeError("Argument must not be a number");return C(A,I,g)},E.alloc=function(A,I,g){if("number"!=typeof A)throw new TypeError("Argument must be a number");var B=C(A);return void 0!==I?"string"==typeof g?B.fill(I,g):B.fill(I):B.fill(0),B},E.allocUnsafe=function(A){if("number"!=typeof A)throw new TypeError("Argument must be a number");return C(A)},E.allocUnsafeSlow=function(A){if("number"!=typeof A)throw new TypeError("Argument must be a number");return B.SlowBuffer(A)}},function(A,I,g){A.exports=g(98)},function(A,I,g){(function(A){!function(A,I){"use strict";function B(A,I){if(!A)throw new Error(I||"Assertion failed")}function C(A,I){A.super_=I;var g=function(){};g.prototype=I.prototype,A.prototype=new g,A.prototype.constructor=A}function Q(A,I,g){if(Q.isBN(A))return A;this.negative=0,this.words=null,this.length=0,this.red=null,null!==A&&("le"!==I&&"be"!==I||(g=I,I=10),this._init(A||0,I||10,g||"be"))}var E;"object"==typeof A?A.exports=Q:I.BN=Q,Q.BN=Q,Q.wordSize=26;try{E=g(138).Buffer}catch(A){}function i(A,I,g){for(var B=0,C=Math.min(A.length,g),Q=I;Q<C;Q++){var E=A.charCodeAt(Q)-48;B<<=4,B|=E>=49&&E<=54?E-49+10:E>=17&&E<=22?E-17+10:15&E}return B}function o(A,I,g,B){for(var C=0,Q=Math.min(A.length,g),E=I;E<Q;E++){var i=A.charCodeAt(E)-48;C*=B,C+=i>=49?i-49+10:i>=17?i-17+10:i}return C}Q.isBN=function(A){return A instanceof Q||null!==A&&"object"==typeof A&&A.constructor.wordSize===Q.wordSize&&Array.isArray(A.words)},Q.max=function(A,I){return A.cmp(I)>0?A:I},Q.min=function(A,I){return A.cmp(I)<0?A:I},Q.prototype._init=function(A,I,g){if("number"==typeof A)return this._initNumber(A,I,g);if("object"==typeof A)return this._initArray(A,I,g);"hex"===I&&(I=16),B(I===(0|I)&&I>=2&&I<=36);var C=0;"-"===(A=A.toString().replace(/\s+/g,""))[0]&&C++,16===I?this._parseHex(A,C):this._parseBase(A,I,C),"-"===A[0]&&(this.negative=1),this.strip(),"le"===g&&this._initArray(this.toArray(),I,g)},Q.prototype._initNumber=function(A,I,g){A<0&&(this.negative=1,A=-A),A<67108864?(this.words=[67108863&A],this.length=1):A<4503599627370496?(this.words=[67108863&A,A/67108864&67108863],this.length=2):(B(A<9007199254740992),this.words=[67108863&A,A/67108864&67108863,1],this.length=3),"le"===g&&this._initArray(this.toArray(),I,g)},Q.prototype._initArray=function(A,I,g){if(B("number"==typeof A.length),A.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(A.length/3),this.words=new Array(this.length);for(var C=0;C<this.length;C++)this.words[C]=0;var Q,E,i=0;if("be"===g)for(C=A.length-1,Q=0;C>=0;C-=3)E=A[C]|A[C-1]<<8|A[C-2]<<16,this.words[Q]|=E<<i&67108863,this.words[Q+1]=E>>>26-i&67108863,(i+=24)>=26&&(i-=26,Q++);else if("le"===g)for(C=0,Q=0;C<A.length;C+=3)E=A[C]|A[C+1]<<8|A[C+2]<<16,this.words[Q]|=E<<i&67108863,this.words[Q+1]=E>>>26-i&67108863,(i+=24)>=26&&(i-=26,Q++);return this.strip()},Q.prototype._parseHex=function(A,I){this.length=Math.ceil((A.length-I)/6),this.words=new Array(this.length);for(var g=0;g<this.length;g++)this.words[g]=0;var B,C,Q=0;for(g=A.length-6,B=0;g>=I;g-=6)C=i(A,g,g+6),this.words[B]|=C<<Q&67108863,this.words[B+1]|=C>>>26-Q&4194303,(Q+=24)>=26&&(Q-=26,B++);g+6!==I&&(C=i(A,I,g+6),this.words[B]|=C<<Q&67108863,this.words[B+1]|=C>>>26-Q&4194303),this.strip()},Q.prototype._parseBase=function(A,I,g){this.words=[0],this.length=1;for(var B=0,C=1;C<=67108863;C*=I)B++;B--,C=C/I|0;for(var Q=A.length-g,E=Q%B,i=Math.min(Q,Q-E)+g,t=0,e=g;e<i;e+=B)t=o(A,e,e+B,I),this.imuln(C),this.words[0]+t<67108864?this.words[0]+=t:this._iaddn(t);if(0!==E){var a=1;for(t=o(A,e,A.length,I),e=0;e<E;e++)a*=I;this.imuln(a),this.words[0]+t<67108864?this.words[0]+=t:this._iaddn(t)}},Q.prototype.copy=function(A){A.words=new Array(this.length);for(var I=0;I<this.length;I++)A.words[I]=this.words[I];A.length=this.length,A.negative=this.negative,A.red=this.red},Q.prototype.clone=function(){var A=new Q(null);return this.copy(A),A},Q.prototype._expand=function(A){for(;this.length<A;)this.words[this.length++]=0;return this},Q.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},Q.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},Q.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var t=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],e=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],a=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function r(A,I,g){g.negative=I.negative^A.negative;var B=A.length+I.length|0;g.length=B,B=B-1|0;var C=0|A.words[0],Q=0|I.words[0],E=C*Q,i=67108863&E,o=E/67108864|0;g.words[0]=i;for(var t=1;t<B;t++){for(var e=o>>>26,a=67108863&o,r=Math.min(t,I.length-1),n=Math.max(0,t-A.length+1);n<=r;n++){var s=t-n|0;e+=(E=(C=0|A.words[s])*(Q=0|I.words[n])+a)/67108864|0,a=67108863&E}g.words[t]=0|a,o=0|e}return 0!==o?g.words[t]=0|o:g.length--,g.strip()}Q.prototype.toString=function(A,I){var g;if(I=0|I||1,16===(A=A||10)||"hex"===A){g="";for(var C=0,Q=0,E=0;E<this.length;E++){var i=this.words[E],o=(16777215&(i<<C|Q)).toString(16);g=0!==(Q=i>>>24-C&16777215)||E!==this.length-1?t[6-o.length]+o+g:o+g,(C+=2)>=26&&(C-=26,E--)}for(0!==Q&&(g=Q.toString(16)+g);g.length%I!=0;)g="0"+g;return 0!==this.negative&&(g="-"+g),g}if(A===(0|A)&&A>=2&&A<=36){var r=e[A],n=a[A];g="";var s=this.clone();for(s.negative=0;!s.isZero();){var h=s.modn(n).toString(A);g=(s=s.idivn(n)).isZero()?h+g:t[r-h.length]+h+g}for(this.isZero()&&(g="0"+g);g.length%I!=0;)g="0"+g;return 0!==this.negative&&(g="-"+g),g}B(!1,"Base should be between 2 and 36")},Q.prototype.toNumber=function(){var A=this.words[0];return 2===this.length?A+=67108864*this.words[1]:3===this.length&&1===this.words[2]?A+=4503599627370496+67108864*this.words[1]:this.length>2&&B(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-A:A},Q.prototype.toJSON=function(){return this.toString(16)},Q.prototype.toBuffer=function(A,I){return B(void 0!==E),this.toArrayLike(E,A,I)},Q.prototype.toArray=function(A,I){return this.toArrayLike(Array,A,I)},Q.prototype.toArrayLike=function(A,I,g){var C=this.byteLength(),Q=g||Math.max(1,C);B(C<=Q,"byte array longer than desired length"),B(Q>0,"Requested array length <= 0"),this.strip();var E,i,o="le"===I,t=new A(Q),e=this.clone();if(o){for(i=0;!e.isZero();i++)E=e.andln(255),e.iushrn(8),t[i]=E;for(;i<Q;i++)t[i]=0}else{for(i=0;i<Q-C;i++)t[i]=0;for(i=0;!e.isZero();i++)E=e.andln(255),e.iushrn(8),t[Q-i-1]=E}return t},Math.clz32?Q.prototype._countBits=function(A){return 32-Math.clz32(A)}:Q.prototype._countBits=function(A){var I=A,g=0;return I>=4096&&(g+=13,I>>>=13),I>=64&&(g+=7,I>>>=7),I>=8&&(g+=4,I>>>=4),I>=2&&(g+=2,I>>>=2),g+I},Q.prototype._zeroBits=function(A){if(0===A)return 26;var I=A,g=0;return 0==(8191&I)&&(g+=13,I>>>=13),0==(127&I)&&(g+=7,I>>>=7),0==(15&I)&&(g+=4,I>>>=4),0==(3&I)&&(g+=2,I>>>=2),0==(1&I)&&g++,g},Q.prototype.bitLength=function(){var A=this.words[this.length-1],I=this._countBits(A);return 26*(this.length-1)+I},Q.prototype.zeroBits=function(){if(this.isZero())return 0;for(var A=0,I=0;I<this.length;I++){var g=this._zeroBits(this.words[I]);if(A+=g,26!==g)break}return A},Q.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},Q.prototype.toTwos=function(A){return 0!==this.negative?this.abs().inotn(A).iaddn(1):this.clone()},Q.prototype.fromTwos=function(A){return this.testn(A-1)?this.notn(A).iaddn(1).ineg():this.clone()},Q.prototype.isNeg=function(){return 0!==this.negative},Q.prototype.neg=function(){return this.clone().ineg()},Q.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},Q.prototype.iuor=function(A){for(;this.length<A.length;)this.words[this.length++]=0;for(var I=0;I<A.length;I++)this.words[I]=this.words[I]|A.words[I];return this.strip()},Q.prototype.ior=function(A){return B(0==(this.negative|A.negative)),this.iuor(A)},Q.prototype.or=function(A){return this.length>A.length?this.clone().ior(A):A.clone().ior(this)},Q.prototype.uor=function(A){return this.length>A.length?this.clone().iuor(A):A.clone().iuor(this)},Q.prototype.iuand=function(A){var I;I=this.length>A.length?A:this;for(var g=0;g<I.length;g++)this.words[g]=this.words[g]&A.words[g];return this.length=I.length,this.strip()},Q.prototype.iand=function(A){return B(0==(this.negative|A.negative)),this.iuand(A)},Q.prototype.and=function(A){return this.length>A.length?this.clone().iand(A):A.clone().iand(this)},Q.prototype.uand=function(A){return this.length>A.length?this.clone().iuand(A):A.clone().iuand(this)},Q.prototype.iuxor=function(A){var I,g;this.length>A.length?(I=this,g=A):(I=A,g=this);for(var B=0;B<g.length;B++)this.words[B]=I.words[B]^g.words[B];if(this!==I)for(;B<I.length;B++)this.words[B]=I.words[B];return this.length=I.length,this.strip()},Q.prototype.ixor=function(A){return B(0==(this.negative|A.negative)),this.iuxor(A)},Q.prototype.xor=function(A){return this.length>A.length?this.clone().ixor(A):A.clone().ixor(this)},Q.prototype.uxor=function(A){return this.length>A.length?this.clone().iuxor(A):A.clone().iuxor(this)},Q.prototype.inotn=function(A){B("number"==typeof A&&A>=0);var I=0|Math.ceil(A/26),g=A%26;this._expand(I),g>0&&I--;for(var C=0;C<I;C++)this.words[C]=67108863&~this.words[C];return g>0&&(this.words[C]=~this.words[C]&67108863>>26-g),this.strip()},Q.prototype.notn=function(A){return this.clone().inotn(A)},Q.prototype.setn=function(A,I){B("number"==typeof A&&A>=0);var g=A/26|0,C=A%26;return this._expand(g+1),this.words[g]=I?this.words[g]|1<<C:this.words[g]&~(1<<C),this.strip()},Q.prototype.iadd=function(A){var I,g,B;if(0!==this.negative&&0===A.negative)return this.negative=0,I=this.isub(A),this.negative^=1,this._normSign();if(0===this.negative&&0!==A.negative)return A.negative=0,I=this.isub(A),A.negative=1,I._normSign();this.length>A.length?(g=this,B=A):(g=A,B=this);for(var C=0,Q=0;Q<B.length;Q++)I=(0|g.words[Q])+(0|B.words[Q])+C,this.words[Q]=67108863&I,C=I>>>26;for(;0!==C&&Q<g.length;Q++)I=(0|g.words[Q])+C,this.words[Q]=67108863&I,C=I>>>26;if(this.length=g.length,0!==C)this.words[this.length]=C,this.length++;else if(g!==this)for(;Q<g.length;Q++)this.words[Q]=g.words[Q];return this},Q.prototype.add=function(A){var I;return 0!==A.negative&&0===this.negative?(A.negative=0,I=this.sub(A),A.negative^=1,I):0===A.negative&&0!==this.negative?(this.negative=0,I=A.sub(this),this.negative=1,I):this.length>A.length?this.clone().iadd(A):A.clone().iadd(this)},Q.prototype.isub=function(A){if(0!==A.negative){A.negative=0;var I=this.iadd(A);return A.negative=1,I._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(A),this.negative=1,this._normSign();var g,B,C=this.cmp(A);if(0===C)return this.negative=0,this.length=1,this.words[0]=0,this;C>0?(g=this,B=A):(g=A,B=this);for(var Q=0,E=0;E<B.length;E++)Q=(I=(0|g.words[E])-(0|B.words[E])+Q)>>26,this.words[E]=67108863&I;for(;0!==Q&&E<g.length;E++)Q=(I=(0|g.words[E])+Q)>>26,this.words[E]=67108863&I;if(0===Q&&E<g.length&&g!==this)for(;E<g.length;E++)this.words[E]=g.words[E];return this.length=Math.max(this.length,E),g!==this&&(this.negative=1),this.strip()},Q.prototype.sub=function(A){return this.clone().isub(A)};var n=function(A,I,g){var B,C,Q,E=A.words,i=I.words,o=g.words,t=0,e=0|E[0],a=8191&e,r=e>>>13,n=0|E[1],s=8191&n,h=n>>>13,D=0|E[2],c=8191&D,w=D>>>13,f=0|E[3],d=8191&f,F=f>>>13,G=0|E[4],y=8191&G,R=G>>>13,u=0|E[5],U=8191&u,S=u>>>13,M=0|E[6],l=8191&M,k=M>>>13,N=0|E[7],K=8191&N,Y=N>>>13,p=0|E[8],J=8191&p,b=p>>>13,H=0|E[9],L=8191&H,q=H>>>13,m=0|i[0],v=8191&m,x=m>>>13,W=0|i[1],Z=8191&W,X=W>>>13,V=0|i[2],O=8191&V,T=V>>>13,j=0|i[3],P=8191&j,z=j>>>13,_=0|i[4],$=8191&_,AA=_>>>13,IA=0|i[5],gA=8191&IA,BA=IA>>>13,CA=0|i[6],QA=8191&CA,EA=CA>>>13,iA=0|i[7],oA=8191&iA,tA=iA>>>13,eA=0|i[8],aA=8191&eA,rA=eA>>>13,nA=0|i[9],sA=8191&nA,hA=nA>>>13;g.negative=A.negative^I.negative,g.length=19;var DA=(t+(B=Math.imul(a,v))|0)+((8191&(C=(C=Math.imul(a,x))+Math.imul(r,v)|0))<<13)|0;t=((Q=Math.imul(r,x))+(C>>>13)|0)+(DA>>>26)|0,DA&=67108863,B=Math.imul(s,v),C=(C=Math.imul(s,x))+Math.imul(h,v)|0,Q=Math.imul(h,x);var cA=(t+(B=B+Math.imul(a,Z)|0)|0)+((8191&(C=(C=C+Math.imul(a,X)|0)+Math.imul(r,Z)|0))<<13)|0;t=((Q=Q+Math.imul(r,X)|0)+(C>>>13)|0)+(cA>>>26)|0,cA&=67108863,B=Math.imul(c,v),C=(C=Math.imul(c,x))+Math.imul(w,v)|0,Q=Math.imul(w,x),B=B+Math.imul(s,Z)|0,C=(C=C+Math.imul(s,X)|0)+Math.imul(h,Z)|0,Q=Q+Math.imul(h,X)|0;var wA=(t+(B=B+Math.imul(a,O)|0)|0)+((8191&(C=(C=C+Math.imul(a,T)|0)+Math.imul(r,O)|0))<<13)|0;t=((Q=Q+Math.imul(r,T)|0)+(C>>>13)|0)+(wA>>>26)|0,wA&=67108863,B=Math.imul(d,v),C=(C=Math.imul(d,x))+Math.imul(F,v)|0,Q=Math.imul(F,x),B=B+Math.imul(c,Z)|0,C=(C=C+Math.imul(c,X)|0)+Math.imul(w,Z)|0,Q=Q+Math.imul(w,X)|0,B=B+Math.imul(s,O)|0,C=(C=C+Math.imul(s,T)|0)+Math.imul(h,O)|0,Q=Q+Math.imul(h,T)|0;var fA=(t+(B=B+Math.imul(a,P)|0)|0)+((8191&(C=(C=C+Math.imul(a,z)|0)+Math.imul(r,P)|0))<<13)|0;t=((Q=Q+Math.imul(r,z)|0)+(C>>>13)|0)+(fA>>>26)|0,fA&=67108863,B=Math.imul(y,v),C=(C=Math.imul(y,x))+Math.imul(R,v)|0,Q=Math.imul(R,x),B=B+Math.imul(d,Z)|0,C=(C=C+Math.imul(d,X)|0)+Math.imul(F,Z)|0,Q=Q+Math.imul(F,X)|0,B=B+Math.imul(c,O)|0,C=(C=C+Math.imul(c,T)|0)+Math.imul(w,O)|0,Q=Q+Math.imul(w,T)|0,B=B+Math.imul(s,P)|0,C=(C=C+Math.imul(s,z)|0)+Math.imul(h,P)|0,Q=Q+Math.imul(h,z)|0;var dA=(t+(B=B+Math.imul(a,$)|0)|0)+((8191&(C=(C=C+Math.imul(a,AA)|0)+Math.imul(r,$)|0))<<13)|0;t=((Q=Q+Math.imul(r,AA)|0)+(C>>>13)|0)+(dA>>>26)|0,dA&=67108863,B=Math.imul(U,v),C=(C=Math.imul(U,x))+Math.imul(S,v)|0,Q=Math.imul(S,x),B=B+Math.imul(y,Z)|0,C=(C=C+Math.imul(y,X)|0)+Math.imul(R,Z)|0,Q=Q+Math.imul(R,X)|0,B=B+Math.imul(d,O)|0,C=(C=C+Math.imul(d,T)|0)+Math.imul(F,O)|0,Q=Q+Math.imul(F,T)|0,B=B+Math.imul(c,P)|0,C=(C=C+Math.imul(c,z)|0)+Math.imul(w,P)|0,Q=Q+Math.imul(w,z)|0,B=B+Math.imul(s,$)|0,C=(C=C+Math.imul(s,AA)|0)+Math.imul(h,$)|0,Q=Q+Math.imul(h,AA)|0;var FA=(t+(B=B+Math.imul(a,gA)|0)|0)+((8191&(C=(C=C+Math.imul(a,BA)|0)+Math.imul(r,gA)|0))<<13)|0;t=((Q=Q+Math.imul(r,BA)|0)+(C>>>13)|0)+(FA>>>26)|0,FA&=67108863,B=Math.imul(l,v),C=(C=Math.imul(l,x))+Math.imul(k,v)|0,Q=Math.imul(k,x),B=B+Math.imul(U,Z)|0,C=(C=C+Math.imul(U,X)|0)+Math.imul(S,Z)|0,Q=Q+Math.imul(S,X)|0,B=B+Math.imul(y,O)|0,C=(C=C+Math.imul(y,T)|0)+Math.imul(R,O)|0,Q=Q+Math.imul(R,T)|0,B=B+Math.imul(d,P)|0,C=(C=C+Math.imul(d,z)|0)+Math.imul(F,P)|0,Q=Q+Math.imul(F,z)|0,B=B+Math.imul(c,$)|0,C=(C=C+Math.imul(c,AA)|0)+Math.imul(w,$)|0,Q=Q+Math.imul(w,AA)|0,B=B+Math.imul(s,gA)|0,C=(C=C+Math.imul(s,BA)|0)+Math.imul(h,gA)|0,Q=Q+Math.imul(h,BA)|0;var GA=(t+(B=B+Math.imul(a,QA)|0)|0)+((8191&(C=(C=C+Math.imul(a,EA)|0)+Math.imul(r,QA)|0))<<13)|0;t=((Q=Q+Math.imul(r,EA)|0)+(C>>>13)|0)+(GA>>>26)|0,GA&=67108863,B=Math.imul(K,v),C=(C=Math.imul(K,x))+Math.imul(Y,v)|0,Q=Math.imul(Y,x),B=B+Math.imul(l,Z)|0,C=(C=C+Math.imul(l,X)|0)+Math.imul(k,Z)|0,Q=Q+Math.imul(k,X)|0,B=B+Math.imul(U,O)|0,C=(C=C+Math.imul(U,T)|0)+Math.imul(S,O)|0,Q=Q+Math.imul(S,T)|0,B=B+Math.imul(y,P)|0,C=(C=C+Math.imul(y,z)|0)+Math.imul(R,P)|0,Q=Q+Math.imul(R,z)|0,B=B+Math.imul(d,$)|0,C=(C=C+Math.imul(d,AA)|0)+Math.imul(F,$)|0,Q=Q+Math.imul(F,AA)|0,B=B+Math.imul(c,gA)|0,C=(C=C+Math.imul(c,BA)|0)+Math.imul(w,gA)|0,Q=Q+Math.imul(w,BA)|0,B=B+Math.imul(s,QA)|0,C=(C=C+Math.imul(s,EA)|0)+Math.imul(h,QA)|0,Q=Q+Math.imul(h,EA)|0;var yA=(t+(B=B+Math.imul(a,oA)|0)|0)+((8191&(C=(C=C+Math.imul(a,tA)|0)+Math.imul(r,oA)|0))<<13)|0;t=((Q=Q+Math.imul(r,tA)|0)+(C>>>13)|0)+(yA>>>26)|0,yA&=67108863,B=Math.imul(J,v),C=(C=Math.imul(J,x))+Math.imul(b,v)|0,Q=Math.imul(b,x),B=B+Math.imul(K,Z)|0,C=(C=C+Math.imul(K,X)|0)+Math.imul(Y,Z)|0,Q=Q+Math.imul(Y,X)|0,B=B+Math.imul(l,O)|0,C=(C=C+Math.imul(l,T)|0)+Math.imul(k,O)|0,Q=Q+Math.imul(k,T)|0,B=B+Math.imul(U,P)|0,C=(C=C+Math.imul(U,z)|0)+Math.imul(S,P)|0,Q=Q+Math.imul(S,z)|0,B=B+Math.imul(y,$)|0,C=(C=C+Math.imul(y,AA)|0)+Math.imul(R,$)|0,Q=Q+Math.imul(R,AA)|0,B=B+Math.imul(d,gA)|0,C=(C=C+Math.imul(d,BA)|0)+Math.imul(F,gA)|0,Q=Q+Math.imul(F,BA)|0,B=B+Math.imul(c,QA)|0,C=(C=C+Math.imul(c,EA)|0)+Math.imul(w,QA)|0,Q=Q+Math.imul(w,EA)|0,B=B+Math.imul(s,oA)|0,C=(C=C+Math.imul(s,tA)|0)+Math.imul(h,oA)|0,Q=Q+Math.imul(h,tA)|0;var RA=(t+(B=B+Math.imul(a,aA)|0)|0)+((8191&(C=(C=C+Math.imul(a,rA)|0)+Math.imul(r,aA)|0))<<13)|0;t=((Q=Q+Math.imul(r,rA)|0)+(C>>>13)|0)+(RA>>>26)|0,RA&=67108863,B=Math.imul(L,v),C=(C=Math.imul(L,x))+Math.imul(q,v)|0,Q=Math.imul(q,x),B=B+Math.imul(J,Z)|0,C=(C=C+Math.imul(J,X)|0)+Math.imul(b,Z)|0,Q=Q+Math.imul(b,X)|0,B=B+Math.imul(K,O)|0,C=(C=C+Math.imul(K,T)|0)+Math.imul(Y,O)|0,Q=Q+Math.imul(Y,T)|0,B=B+Math.imul(l,P)|0,C=(C=C+Math.imul(l,z)|0)+Math.imul(k,P)|0,Q=Q+Math.imul(k,z)|0,B=B+Math.imul(U,$)|0,C=(C=C+Math.imul(U,AA)|0)+Math.imul(S,$)|0,Q=Q+Math.imul(S,AA)|0,B=B+Math.imul(y,gA)|0,C=(C=C+Math.imul(y,BA)|0)+Math.imul(R,gA)|0,Q=Q+Math.imul(R,BA)|0,B=B+Math.imul(d,QA)|0,C=(C=C+Math.imul(d,EA)|0)+Math.imul(F,QA)|0,Q=Q+Math.imul(F,EA)|0,B=B+Math.imul(c,oA)|0,C=(C=C+Math.imul(c,tA)|0)+Math.imul(w,oA)|0,Q=Q+Math.imul(w,tA)|0,B=B+Math.imul(s,aA)|0,C=(C=C+Math.imul(s,rA)|0)+Math.imul(h,aA)|0,Q=Q+Math.imul(h,rA)|0;var uA=(t+(B=B+Math.imul(a,sA)|0)|0)+((8191&(C=(C=C+Math.imul(a,hA)|0)+Math.imul(r,sA)|0))<<13)|0;t=((Q=Q+Math.imul(r,hA)|0)+(C>>>13)|0)+(uA>>>26)|0,uA&=67108863,B=Math.imul(L,Z),C=(C=Math.imul(L,X))+Math.imul(q,Z)|0,Q=Math.imul(q,X),B=B+Math.imul(J,O)|0,C=(C=C+Math.imul(J,T)|0)+Math.imul(b,O)|0,Q=Q+Math.imul(b,T)|0,B=B+Math.imul(K,P)|0,C=(C=C+Math.imul(K,z)|0)+Math.imul(Y,P)|0,Q=Q+Math.imul(Y,z)|0,B=B+Math.imul(l,$)|0,C=(C=C+Math.imul(l,AA)|0)+Math.imul(k,$)|0,Q=Q+Math.imul(k,AA)|0,B=B+Math.imul(U,gA)|0,C=(C=C+Math.imul(U,BA)|0)+Math.imul(S,gA)|0,Q=Q+Math.imul(S,BA)|0,B=B+Math.imul(y,QA)|0,C=(C=C+Math.imul(y,EA)|0)+Math.imul(R,QA)|0,Q=Q+Math.imul(R,EA)|0,B=B+Math.imul(d,oA)|0,C=(C=C+Math.imul(d,tA)|0)+Math.imul(F,oA)|0,Q=Q+Math.imul(F,tA)|0,B=B+Math.imul(c,aA)|0,C=(C=C+Math.imul(c,rA)|0)+Math.imul(w,aA)|0,Q=Q+Math.imul(w,rA)|0;var UA=(t+(B=B+Math.imul(s,sA)|0)|0)+((8191&(C=(C=C+Math.imul(s,hA)|0)+Math.imul(h,sA)|0))<<13)|0;t=((Q=Q+Math.imul(h,hA)|0)+(C>>>13)|0)+(UA>>>26)|0,UA&=67108863,B=Math.imul(L,O),C=(C=Math.imul(L,T))+Math.imul(q,O)|0,Q=Math.imul(q,T),B=B+Math.imul(J,P)|0,C=(C=C+Math.imul(J,z)|0)+Math.imul(b,P)|0,Q=Q+Math.imul(b,z)|0,B=B+Math.imul(K,$)|0,C=(C=C+Math.imul(K,AA)|0)+Math.imul(Y,$)|0,Q=Q+Math.imul(Y,AA)|0,B=B+Math.imul(l,gA)|0,C=(C=C+Math.imul(l,BA)|0)+Math.imul(k,gA)|0,Q=Q+Math.imul(k,BA)|0,B=B+Math.imul(U,QA)|0,C=(C=C+Math.imul(U,EA)|0)+Math.imul(S,QA)|0,Q=Q+Math.imul(S,EA)|0,B=B+Math.imul(y,oA)|0,C=(C=C+Math.imul(y,tA)|0)+Math.imul(R,oA)|0,Q=Q+Math.imul(R,tA)|0,B=B+Math.imul(d,aA)|0,C=(C=C+Math.imul(d,rA)|0)+Math.imul(F,aA)|0,Q=Q+Math.imul(F,rA)|0;var SA=(t+(B=B+Math.imul(c,sA)|0)|0)+((8191&(C=(C=C+Math.imul(c,hA)|0)+Math.imul(w,sA)|0))<<13)|0;t=((Q=Q+Math.imul(w,hA)|0)+(C>>>13)|0)+(SA>>>26)|0,SA&=67108863,B=Math.imul(L,P),C=(C=Math.imul(L,z))+Math.imul(q,P)|0,Q=Math.imul(q,z),B=B+Math.imul(J,$)|0,C=(C=C+Math.imul(J,AA)|0)+Math.imul(b,$)|0,Q=Q+Math.imul(b,AA)|0,B=B+Math.imul(K,gA)|0,C=(C=C+Math.imul(K,BA)|0)+Math.imul(Y,gA)|0,Q=Q+Math.imul(Y,BA)|0,B=B+Math.imul(l,QA)|0,C=(C=C+Math.imul(l,EA)|0)+Math.imul(k,QA)|0,Q=Q+Math.imul(k,EA)|0,B=B+Math.imul(U,oA)|0,C=(C=C+Math.imul(U,tA)|0)+Math.imul(S,oA)|0,Q=Q+Math.imul(S,tA)|0,B=B+Math.imul(y,aA)|0,C=(C=C+Math.imul(y,rA)|0)+Math.imul(R,aA)|0,Q=Q+Math.imul(R,rA)|0;var MA=(t+(B=B+Math.imul(d,sA)|0)|0)+((8191&(C=(C=C+Math.imul(d,hA)|0)+Math.imul(F,sA)|0))<<13)|0;t=((Q=Q+Math.imul(F,hA)|0)+(C>>>13)|0)+(MA>>>26)|0,MA&=67108863,B=Math.imul(L,$),C=(C=Math.imul(L,AA))+Math.imul(q,$)|0,Q=Math.imul(q,AA),B=B+Math.imul(J,gA)|0,C=(C=C+Math.imul(J,BA)|0)+Math.imul(b,gA)|0,Q=Q+Math.imul(b,BA)|0,B=B+Math.imul(K,QA)|0,C=(C=C+Math.imul(K,EA)|0)+Math.imul(Y,QA)|0,Q=Q+Math.imul(Y,EA)|0,B=B+Math.imul(l,oA)|0,C=(C=C+Math.imul(l,tA)|0)+Math.imul(k,oA)|0,Q=Q+Math.imul(k,tA)|0,B=B+Math.imul(U,aA)|0,C=(C=C+Math.imul(U,rA)|0)+Math.imul(S,aA)|0,Q=Q+Math.imul(S,rA)|0;var lA=(t+(B=B+Math.imul(y,sA)|0)|0)+((8191&(C=(C=C+Math.imul(y,hA)|0)+Math.imul(R,sA)|0))<<13)|0;t=((Q=Q+Math.imul(R,hA)|0)+(C>>>13)|0)+(lA>>>26)|0,lA&=67108863,B=Math.imul(L,gA),C=(C=Math.imul(L,BA))+Math.imul(q,gA)|0,Q=Math.imul(q,BA),B=B+Math.imul(J,QA)|0,C=(C=C+Math.imul(J,EA)|0)+Math.imul(b,QA)|0,Q=Q+Math.imul(b,EA)|0,B=B+Math.imul(K,oA)|0,C=(C=C+Math.imul(K,tA)|0)+Math.imul(Y,oA)|0,Q=Q+Math.imul(Y,tA)|0,B=B+Math.imul(l,aA)|0,C=(C=C+Math.imul(l,rA)|0)+Math.imul(k,aA)|0,Q=Q+Math.imul(k,rA)|0;var kA=(t+(B=B+Math.imul(U,sA)|0)|0)+((8191&(C=(C=C+Math.imul(U,hA)|0)+Math.imul(S,sA)|0))<<13)|0;t=((Q=Q+Math.imul(S,hA)|0)+(C>>>13)|0)+(kA>>>26)|0,kA&=67108863,B=Math.imul(L,QA),C=(C=Math.imul(L,EA))+Math.imul(q,QA)|0,Q=Math.imul(q,EA),B=B+Math.imul(J,oA)|0,C=(C=C+Math.imul(J,tA)|0)+Math.imul(b,oA)|0,Q=Q+Math.imul(b,tA)|0,B=B+Math.imul(K,aA)|0,C=(C=C+Math.imul(K,rA)|0)+Math.imul(Y,aA)|0,Q=Q+Math.imul(Y,rA)|0;var NA=(t+(B=B+Math.imul(l,sA)|0)|0)+((8191&(C=(C=C+Math.imul(l,hA)|0)+Math.imul(k,sA)|0))<<13)|0;t=((Q=Q+Math.imul(k,hA)|0)+(C>>>13)|0)+(NA>>>26)|0,NA&=67108863,B=Math.imul(L,oA),C=(C=Math.imul(L,tA))+Math.imul(q,oA)|0,Q=Math.imul(q,tA),B=B+Math.imul(J,aA)|0,C=(C=C+Math.imul(J,rA)|0)+Math.imul(b,aA)|0,Q=Q+Math.imul(b,rA)|0;var KA=(t+(B=B+Math.imul(K,sA)|0)|0)+((8191&(C=(C=C+Math.imul(K,hA)|0)+Math.imul(Y,sA)|0))<<13)|0;t=((Q=Q+Math.imul(Y,hA)|0)+(C>>>13)|0)+(KA>>>26)|0,KA&=67108863,B=Math.imul(L,aA),C=(C=Math.imul(L,rA))+Math.imul(q,aA)|0,Q=Math.imul(q,rA);var YA=(t+(B=B+Math.imul(J,sA)|0)|0)+((8191&(C=(C=C+Math.imul(J,hA)|0)+Math.imul(b,sA)|0))<<13)|0;t=((Q=Q+Math.imul(b,hA)|0)+(C>>>13)|0)+(YA>>>26)|0,YA&=67108863;var pA=(t+(B=Math.imul(L,sA))|0)+((8191&(C=(C=Math.imul(L,hA))+Math.imul(q,sA)|0))<<13)|0;return t=((Q=Math.imul(q,hA))+(C>>>13)|0)+(pA>>>26)|0,pA&=67108863,o[0]=DA,o[1]=cA,o[2]=wA,o[3]=fA,o[4]=dA,o[5]=FA,o[6]=GA,o[7]=yA,o[8]=RA,o[9]=uA,o[10]=UA,o[11]=SA,o[12]=MA,o[13]=lA,o[14]=kA,o[15]=NA,o[16]=KA,o[17]=YA,o[18]=pA,0!==t&&(o[19]=t,g.length++),g};function s(A,I,g){return(new h).mulp(A,I,g)}function h(A,I){this.x=A,this.y=I}Math.imul||(n=r),Q.prototype.mulTo=function(A,I){var g=this.length+A.length;return 10===this.length&&10===A.length?n(this,A,I):g<63?r(this,A,I):g<1024?function(A,I,g){g.negative=I.negative^A.negative,g.length=A.length+I.length;for(var B=0,C=0,Q=0;Q<g.length-1;Q++){var E=C;C=0;for(var i=67108863&B,o=Math.min(Q,I.length-1),t=Math.max(0,Q-A.length+1);t<=o;t++){var e=Q-t,a=(0|A.words[e])*(0|I.words[t]),r=67108863&a;i=67108863&(r=r+i|0),C+=(E=(E=E+(a/67108864|0)|0)+(r>>>26)|0)>>>26,E&=67108863}g.words[Q]=i,B=E,E=C}return 0!==B?g.words[Q]=B:g.length--,g.strip()}(this,A,I):s(this,A,I)},h.prototype.makeRBT=function(A){for(var I=new Array(A),g=Q.prototype._countBits(A)-1,B=0;B<A;B++)I[B]=this.revBin(B,g,A);return I},h.prototype.revBin=function(A,I,g){if(0===A||A===g-1)return A;for(var B=0,C=0;C<I;C++)B|=(1&A)<<I-C-1,A>>=1;return B},h.prototype.permute=function(A,I,g,B,C,Q){for(var E=0;E<Q;E++)B[E]=I[A[E]],C[E]=g[A[E]]},h.prototype.transform=function(A,I,g,B,C,Q){this.permute(Q,A,I,g,B,C);for(var E=1;E<C;E<<=1)for(var i=E<<1,o=Math.cos(2*Math.PI/i),t=Math.sin(2*Math.PI/i),e=0;e<C;e+=i)for(var a=o,r=t,n=0;n<E;n++){var s=g[e+n],h=B[e+n],D=g[e+n+E],c=B[e+n+E],w=a*D-r*c;c=a*c+r*D,D=w,g[e+n]=s+D,B[e+n]=h+c,g[e+n+E]=s-D,B[e+n+E]=h-c,n!==i&&(w=o*a-t*r,r=o*r+t*a,a=w)}},h.prototype.guessLen13b=function(A,I){var g=1|Math.max(I,A),B=1&g,C=0;for(g=g/2|0;g;g>>>=1)C++;return 1<<C+1+B},h.prototype.conjugate=function(A,I,g){if(!(g<=1))for(var B=0;B<g/2;B++){var C=A[B];A[B]=A[g-B-1],A[g-B-1]=C,C=I[B],I[B]=-I[g-B-1],I[g-B-1]=-C}},h.prototype.normalize13b=function(A,I){for(var g=0,B=0;B<I/2;B++){var C=8192*Math.round(A[2*B+1]/I)+Math.round(A[2*B]/I)+g;A[B]=67108863&C,g=C<67108864?0:C/67108864|0}return A},h.prototype.convert13b=function(A,I,g,C){for(var Q=0,E=0;E<I;E++)Q+=0|A[E],g[2*E]=8191&Q,Q>>>=13,g[2*E+1]=8191&Q,Q>>>=13;for(E=2*I;E<C;++E)g[E]=0;B(0===Q),B(0==(-8192&Q))},h.prototype.stub=function(A){for(var I=new Array(A),g=0;g<A;g++)I[g]=0;return I},h.prototype.mulp=function(A,I,g){var B=2*this.guessLen13b(A.length,I.length),C=this.makeRBT(B),Q=this.stub(B),E=new Array(B),i=new Array(B),o=new Array(B),t=new Array(B),e=new Array(B),a=new Array(B),r=g.words;r.length=B,this.convert13b(A.words,A.length,E,B),this.convert13b(I.words,I.length,t,B),this.transform(E,Q,i,o,B,C),this.transform(t,Q,e,a,B,C);for(var n=0;n<B;n++){var s=i[n]*e[n]-o[n]*a[n];o[n]=i[n]*a[n]+o[n]*e[n],i[n]=s}return this.conjugate(i,o,B),this.transform(i,o,r,Q,B,C),this.conjugate(r,Q,B),this.normalize13b(r,B),g.negative=A.negative^I.negative,g.length=A.length+I.length,g.strip()},Q.prototype.mul=function(A){var I=new Q(null);return I.words=new Array(this.length+A.length),this.mulTo(A,I)},Q.prototype.mulf=function(A){var I=new Q(null);return I.words=new Array(this.length+A.length),s(this,A,I)},Q.prototype.imul=function(A){return this.clone().mulTo(A,this)},Q.prototype.imuln=function(A){B("number"==typeof A),B(A<67108864);for(var I=0,g=0;g<this.length;g++){var C=(0|this.words[g])*A,Q=(67108863&C)+(67108863&I);I>>=26,I+=C/67108864|0,I+=Q>>>26,this.words[g]=67108863&Q}return 0!==I&&(this.words[g]=I,this.length++),this},Q.prototype.muln=function(A){return this.clone().imuln(A)},Q.prototype.sqr=function(){return this.mul(this)},Q.prototype.isqr=function(){return this.imul(this.clone())},Q.prototype.pow=function(A){var I=function(A){for(var I=new Array(A.bitLength()),g=0;g<I.length;g++){var B=g/26|0,C=g%26;I[g]=(A.words[B]&1<<C)>>>C}return I}(A);if(0===I.length)return new Q(1);for(var g=this,B=0;B<I.length&&0===I[B];B++,g=g.sqr());if(++B<I.length)for(var C=g.sqr();B<I.length;B++,C=C.sqr())0!==I[B]&&(g=g.mul(C));return g},Q.prototype.iushln=function(A){B("number"==typeof A&&A>=0);var I,g=A%26,C=(A-g)/26,Q=67108863>>>26-g<<26-g;if(0!==g){var E=0;for(I=0;I<this.length;I++){var i=this.words[I]&Q,o=(0|this.words[I])-i<<g;this.words[I]=o|E,E=i>>>26-g}E&&(this.words[I]=E,this.length++)}if(0!==C){for(I=this.length-1;I>=0;I--)this.words[I+C]=this.words[I];for(I=0;I<C;I++)this.words[I]=0;this.length+=C}return this.strip()},Q.prototype.ishln=function(A){return B(0===this.negative),this.iushln(A)},Q.prototype.iushrn=function(A,I,g){var C;B("number"==typeof A&&A>=0),C=I?(I-I%26)/26:0;var Q=A%26,E=Math.min((A-Q)/26,this.length),i=67108863^67108863>>>Q<<Q,o=g;if(C-=E,C=Math.max(0,C),o){for(var t=0;t<E;t++)o.words[t]=this.words[t];o.length=E}if(0===E);else if(this.length>E)for(this.length-=E,t=0;t<this.length;t++)this.words[t]=this.words[t+E];else this.words[0]=0,this.length=1;var e=0;for(t=this.length-1;t>=0&&(0!==e||t>=C);t--){var a=0|this.words[t];this.words[t]=e<<26-Q|a>>>Q,e=a&i}return o&&0!==e&&(o.words[o.length++]=e),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},Q.prototype.ishrn=function(A,I,g){return B(0===this.negative),this.iushrn(A,I,g)},Q.prototype.shln=function(A){return this.clone().ishln(A)},Q.prototype.ushln=function(A){return this.clone().iushln(A)},Q.prototype.shrn=function(A){return this.clone().ishrn(A)},Q.prototype.ushrn=function(A){return this.clone().iushrn(A)},Q.prototype.testn=function(A){B("number"==typeof A&&A>=0);var I=A%26,g=(A-I)/26,C=1<<I;return!(this.length<=g)&&!!(this.words[g]&C)},Q.prototype.imaskn=function(A){B("number"==typeof A&&A>=0);var I=A%26,g=(A-I)/26;if(B(0===this.negative,"imaskn works only with positive numbers"),this.length<=g)return this;if(0!==I&&g++,this.length=Math.min(g,this.length),0!==I){var C=67108863^67108863>>>I<<I;this.words[this.length-1]&=C}return this.strip()},Q.prototype.maskn=function(A){return this.clone().imaskn(A)},Q.prototype.iaddn=function(A){return B("number"==typeof A),B(A<67108864),A<0?this.isubn(-A):0!==this.negative?1===this.length&&(0|this.words[0])<A?(this.words[0]=A-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(A),this.negative=1,this):this._iaddn(A)},Q.prototype._iaddn=function(A){this.words[0]+=A;for(var I=0;I<this.length&&this.words[I]>=67108864;I++)this.words[I]-=67108864,I===this.length-1?this.words[I+1]=1:this.words[I+1]++;return this.length=Math.max(this.length,I+1),this},Q.prototype.isubn=function(A){if(B("number"==typeof A),B(A<67108864),A<0)return this.iaddn(-A);if(0!==this.negative)return this.negative=0,this.iaddn(A),this.negative=1,this;if(this.words[0]-=A,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var I=0;I<this.length&&this.words[I]<0;I++)this.words[I]+=67108864,this.words[I+1]-=1;return this.strip()},Q.prototype.addn=function(A){return this.clone().iaddn(A)},Q.prototype.subn=function(A){return this.clone().isubn(A)},Q.prototype.iabs=function(){return this.negative=0,this},Q.prototype.abs=function(){return this.clone().iabs()},Q.prototype._ishlnsubmul=function(A,I,g){var C,Q,E=A.length+g;this._expand(E);var i=0;for(C=0;C<A.length;C++){Q=(0|this.words[C+g])+i;var o=(0|A.words[C])*I;i=((Q-=67108863&o)>>26)-(o/67108864|0),this.words[C+g]=67108863&Q}for(;C<this.length-g;C++)i=(Q=(0|this.words[C+g])+i)>>26,this.words[C+g]=67108863&Q;if(0===i)return this.strip();for(B(-1===i),i=0,C=0;C<this.length;C++)i=(Q=-(0|this.words[C])+i)>>26,this.words[C]=67108863&Q;return this.negative=1,this.strip()},Q.prototype._wordDiv=function(A,I){var g=(this.length,A.length),B=this.clone(),C=A,E=0|C.words[C.length-1];0!==(g=26-this._countBits(E))&&(C=C.ushln(g),B.iushln(g),E=0|C.words[C.length-1]);var i,o=B.length-C.length;if("mod"!==I){(i=new Q(null)).length=o+1,i.words=new Array(i.length);for(var t=0;t<i.length;t++)i.words[t]=0}var e=B.clone()._ishlnsubmul(C,1,o);0===e.negative&&(B=e,i&&(i.words[o]=1));for(var a=o-1;a>=0;a--){var r=67108864*(0|B.words[C.length+a])+(0|B.words[C.length+a-1]);for(r=Math.min(r/E|0,67108863),B._ishlnsubmul(C,r,a);0!==B.negative;)r--,B.negative=0,B._ishlnsubmul(C,1,a),B.isZero()||(B.negative^=1);i&&(i.words[a]=r)}return i&&i.strip(),B.strip(),"div"!==I&&0!==g&&B.iushrn(g),{div:i||null,mod:B}},Q.prototype.divmod=function(A,I,g){return B(!A.isZero()),this.isZero()?{div:new Q(0),mod:new Q(0)}:0!==this.negative&&0===A.negative?(i=this.neg().divmod(A,I),"mod"!==I&&(C=i.div.neg()),"div"!==I&&(E=i.mod.neg(),g&&0!==E.negative&&E.iadd(A)),{div:C,mod:E}):0===this.negative&&0!==A.negative?(i=this.divmod(A.neg(),I),"mod"!==I&&(C=i.div.neg()),{div:C,mod:i.mod}):0!=(this.negative&A.negative)?(i=this.neg().divmod(A.neg(),I),"div"!==I&&(E=i.mod.neg(),g&&0!==E.negative&&E.isub(A)),{div:i.div,mod:E}):A.length>this.length||this.cmp(A)<0?{div:new Q(0),mod:this}:1===A.length?"div"===I?{div:this.divn(A.words[0]),mod:null}:"mod"===I?{div:null,mod:new Q(this.modn(A.words[0]))}:{div:this.divn(A.words[0]),mod:new Q(this.modn(A.words[0]))}:this._wordDiv(A,I);var C,E,i},Q.prototype.div=function(A){return this.divmod(A,"div",!1).div},Q.prototype.mod=function(A){return this.divmod(A,"mod",!1).mod},Q.prototype.umod=function(A){return this.divmod(A,"mod",!0).mod},Q.prototype.divRound=function(A){var I=this.divmod(A);if(I.mod.isZero())return I.div;var g=0!==I.div.negative?I.mod.isub(A):I.mod,B=A.ushrn(1),C=A.andln(1),Q=g.cmp(B);return Q<0||1===C&&0===Q?I.div:0!==I.div.negative?I.div.isubn(1):I.div.iaddn(1)},Q.prototype.modn=function(A){B(A<=67108863);for(var I=(1<<26)%A,g=0,C=this.length-1;C>=0;C--)g=(I*g+(0|this.words[C]))%A;return g},Q.prototype.idivn=function(A){B(A<=67108863);for(var I=0,g=this.length-1;g>=0;g--){var C=(0|this.words[g])+67108864*I;this.words[g]=C/A|0,I=C%A}return this.strip()},Q.prototype.divn=function(A){return this.clone().idivn(A)},Q.prototype.egcd=function(A){B(0===A.negative),B(!A.isZero());var I=this,g=A.clone();I=0!==I.negative?I.umod(A):I.clone();for(var C=new Q(1),E=new Q(0),i=new Q(0),o=new Q(1),t=0;I.isEven()&&g.isEven();)I.iushrn(1),g.iushrn(1),++t;for(var e=g.clone(),a=I.clone();!I.isZero();){for(var r=0,n=1;0==(I.words[0]&n)&&r<26;++r,n<<=1);if(r>0)for(I.iushrn(r);r-- >0;)(C.isOdd()||E.isOdd())&&(C.iadd(e),E.isub(a)),C.iushrn(1),E.iushrn(1);for(var s=0,h=1;0==(g.words[0]&h)&&s<26;++s,h<<=1);if(s>0)for(g.iushrn(s);s-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(e),o.isub(a)),i.iushrn(1),o.iushrn(1);I.cmp(g)>=0?(I.isub(g),C.isub(i),E.isub(o)):(g.isub(I),i.isub(C),o.isub(E))}return{a:i,b:o,gcd:g.iushln(t)}},Q.prototype._invmp=function(A){B(0===A.negative),B(!A.isZero());var I=this,g=A.clone();I=0!==I.negative?I.umod(A):I.clone();for(var C,E=new Q(1),i=new Q(0),o=g.clone();I.cmpn(1)>0&&g.cmpn(1)>0;){for(var t=0,e=1;0==(I.words[0]&e)&&t<26;++t,e<<=1);if(t>0)for(I.iushrn(t);t-- >0;)E.isOdd()&&E.iadd(o),E.iushrn(1);for(var a=0,r=1;0==(g.words[0]&r)&&a<26;++a,r<<=1);if(a>0)for(g.iushrn(a);a-- >0;)i.isOdd()&&i.iadd(o),i.iushrn(1);I.cmp(g)>=0?(I.isub(g),E.isub(i)):(g.isub(I),i.isub(E))}return(C=0===I.cmpn(1)?E:i).cmpn(0)<0&&C.iadd(A),C},Q.prototype.gcd=function(A){if(this.isZero())return A.abs();if(A.isZero())return this.abs();var I=this.clone(),g=A.clone();I.negative=0,g.negative=0;for(var B=0;I.isEven()&&g.isEven();B++)I.iushrn(1),g.iushrn(1);for(;;){for(;I.isEven();)I.iushrn(1);for(;g.isEven();)g.iushrn(1);var C=I.cmp(g);if(C<0){var Q=I;I=g,g=Q}else if(0===C||0===g.cmpn(1))break;I.isub(g)}return g.iushln(B)},Q.prototype.invm=function(A){return this.egcd(A).a.umod(A)},Q.prototype.isEven=function(){return 0==(1&this.words[0])},Q.prototype.isOdd=function(){return 1==(1&this.words[0])},Q.prototype.andln=function(A){return this.words[0]&A},Q.prototype.bincn=function(A){B("number"==typeof A);var I=A%26,g=(A-I)/26,C=1<<I;if(this.length<=g)return this._expand(g+1),this.words[g]|=C,this;for(var Q=C,E=g;0!==Q&&E<this.length;E++){var i=0|this.words[E];Q=(i+=Q)>>>26,i&=67108863,this.words[E]=i}return 0!==Q&&(this.words[E]=Q,this.length++),this},Q.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},Q.prototype.cmpn=function(A){var I,g=A<0;if(0!==this.negative&&!g)return-1;if(0===this.negative&&g)return 1;if(this.strip(),this.length>1)I=1;else{g&&(A=-A),B(A<=67108863,"Number is too big");var C=0|this.words[0];I=C===A?0:C<A?-1:1}return 0!==this.negative?0|-I:I},Q.prototype.cmp=function(A){if(0!==this.negative&&0===A.negative)return-1;if(0===this.negative&&0!==A.negative)return 1;var I=this.ucmp(A);return 0!==this.negative?0|-I:I},Q.prototype.ucmp=function(A){if(this.length>A.length)return 1;if(this.length<A.length)return-1;for(var I=0,g=this.length-1;g>=0;g--){var B=0|this.words[g],C=0|A.words[g];if(B!==C){B<C?I=-1:B>C&&(I=1);break}}return I},Q.prototype.gtn=function(A){return 1===this.cmpn(A)},Q.prototype.gt=function(A){return 1===this.cmp(A)},Q.prototype.gten=function(A){return this.cmpn(A)>=0},Q.prototype.gte=function(A){return this.cmp(A)>=0},Q.prototype.ltn=function(A){return-1===this.cmpn(A)},Q.prototype.lt=function(A){return-1===this.cmp(A)},Q.prototype.lten=function(A){return this.cmpn(A)<=0},Q.prototype.lte=function(A){return this.cmp(A)<=0},Q.prototype.eqn=function(A){return 0===this.cmpn(A)},Q.prototype.eq=function(A){return 0===this.cmp(A)},Q.red=function(A){return new G(A)},Q.prototype.toRed=function(A){return B(!this.red,"Already a number in reduction context"),B(0===this.negative,"red works only with positives"),A.convertTo(this)._forceRed(A)},Q.prototype.fromRed=function(){return B(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},Q.prototype._forceRed=function(A){return this.red=A,this},Q.prototype.forceRed=function(A){return B(!this.red,"Already a number in reduction context"),this._forceRed(A)},Q.prototype.redAdd=function(A){return B(this.red,"redAdd works only with red numbers"),this.red.add(this,A)},Q.prototype.redIAdd=function(A){return B(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,A)},Q.prototype.redSub=function(A){return B(this.red,"redSub works only with red numbers"),this.red.sub(this,A)},Q.prototype.redISub=function(A){return B(this.red,"redISub works only with red numbers"),this.red.isub(this,A)},Q.prototype.redShl=function(A){return B(this.red,"redShl works only with red numbers"),this.red.shl(this,A)},Q.prototype.redMul=function(A){return B(this.red,"redMul works only with red numbers"),this.red._verify2(this,A),this.red.mul(this,A)},Q.prototype.redIMul=function(A){return B(this.red,"redMul works only with red numbers"),this.red._verify2(this,A),this.red.imul(this,A)},Q.prototype.redSqr=function(){return B(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},Q.prototype.redISqr=function(){return B(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},Q.prototype.redSqrt=function(){return B(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},Q.prototype.redInvm=function(){return B(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},Q.prototype.redNeg=function(){return B(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},Q.prototype.redPow=function(A){return B(this.red&&!A.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,A)};var D={k256:null,p224:null,p192:null,p25519:null};function c(A,I){this.name=A,this.p=new Q(I,16),this.n=this.p.bitLength(),this.k=new Q(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function w(){c.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function f(){c.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function d(){c.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function F(){c.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function G(A){if("string"==typeof A){var I=Q._prime(A);this.m=I.p,this.prime=I}else B(A.gtn(1),"modulus must be greater than 1"),this.m=A,this.prime=null}function y(A){G.call(this,A),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new Q(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}c.prototype._tmp=function(){var A=new Q(null);return A.words=new Array(Math.ceil(this.n/13)),A},c.prototype.ireduce=function(A){var I,g=A;do{this.split(g,this.tmp),I=(g=(g=this.imulK(g)).iadd(this.tmp)).bitLength()}while(I>this.n);var B=I<this.n?-1:g.ucmp(this.p);return 0===B?(g.words[0]=0,g.length=1):B>0?g.isub(this.p):g.strip(),g},c.prototype.split=function(A,I){A.iushrn(this.n,0,I)},c.prototype.imulK=function(A){return A.imul(this.k)},C(w,c),w.prototype.split=function(A,I){for(var g=Math.min(A.length,9),B=0;B<g;B++)I.words[B]=A.words[B];if(I.length=g,A.length<=9)return A.words[0]=0,void(A.length=1);var C=A.words[9];for(I.words[I.length++]=4194303&C,B=10;B<A.length;B++){var Q=0|A.words[B];A.words[B-10]=(4194303&Q)<<4|C>>>22,C=Q}C>>>=22,A.words[B-10]=C,0===C&&A.length>10?A.length-=10:A.length-=9},w.prototype.imulK=function(A){A.words[A.length]=0,A.words[A.length+1]=0,A.length+=2;for(var I=0,g=0;g<A.length;g++){var B=0|A.words[g];I+=977*B,A.words[g]=67108863&I,I=64*B+(I/67108864|0)}return 0===A.words[A.length-1]&&(A.length--,0===A.words[A.length-1]&&A.length--),A},C(f,c),C(d,c),C(F,c),F.prototype.imulK=function(A){for(var I=0,g=0;g<A.length;g++){var B=19*(0|A.words[g])+I,C=67108863&B;B>>>=26,A.words[g]=C,I=B}return 0!==I&&(A.words[A.length++]=I),A},Q._prime=function(A){if(D[A])return D[A];var I;if("k256"===A)I=new w;else if("p224"===A)I=new f;else if("p192"===A)I=new d;else{if("p25519"!==A)throw new Error("Unknown prime "+A);I=new F}return D[A]=I,I},G.prototype._verify1=function(A){B(0===A.negative,"red works only with positives"),B(A.red,"red works only with red numbers")},G.prototype._verify2=function(A,I){B(0==(A.negative|I.negative),"red works only with positives"),B(A.red&&A.red===I.red,"red works only with red numbers")},G.prototype.imod=function(A){return this.prime?this.prime.ireduce(A)._forceRed(this):A.umod(this.m)._forceRed(this)},G.prototype.neg=function(A){return A.isZero()?A.clone():this.m.sub(A)._forceRed(this)},G.prototype.add=function(A,I){this._verify2(A,I);var g=A.add(I);return g.cmp(this.m)>=0&&g.isub(this.m),g._forceRed(this)},G.prototype.iadd=function(A,I){this._verify2(A,I);var g=A.iadd(I);return g.cmp(this.m)>=0&&g.isub(this.m),g},G.prototype.sub=function(A,I){this._verify2(A,I);var g=A.sub(I);return g.cmpn(0)<0&&g.iadd(this.m),g._forceRed(this)},G.prototype.isub=function(A,I){this._verify2(A,I);var g=A.isub(I);return g.cmpn(0)<0&&g.iadd(this.m),g},G.prototype.shl=function(A,I){return this._verify1(A),this.imod(A.ushln(I))},G.prototype.imul=function(A,I){return this._verify2(A,I),this.imod(A.imul(I))},G.prototype.mul=function(A,I){return this._verify2(A,I),this.imod(A.mul(I))},G.prototype.isqr=function(A){return this.imul(A,A.clone())},G.prototype.sqr=function(A){return this.mul(A,A)},G.prototype.sqrt=function(A){if(A.isZero())return A.clone();var I=this.m.andln(3);if(B(I%2==1),3===I){var g=this.m.add(new Q(1)).iushrn(2);return this.pow(A,g)}for(var C=this.m.subn(1),E=0;!C.isZero()&&0===C.andln(1);)E++,C.iushrn(1);B(!C.isZero());var i=new Q(1).toRed(this),o=i.redNeg(),t=this.m.subn(1).iushrn(1),e=this.m.bitLength();for(e=new Q(2*e*e).toRed(this);0!==this.pow(e,t).cmp(o);)e.redIAdd(o);for(var a=this.pow(e,C),r=this.pow(A,C.addn(1).iushrn(1)),n=this.pow(A,C),s=E;0!==n.cmp(i);){for(var h=n,D=0;0!==h.cmp(i);D++)h=h.redSqr();B(D<s);var c=this.pow(a,new Q(1).iushln(s-D-1));r=r.redMul(c),a=c.redSqr(),n=n.redMul(a),s=D}return r},G.prototype.invm=function(A){var I=A._invmp(this.m);return 0!==I.negative?(I.negative=0,this.imod(I).redNeg()):this.imod(I)},G.prototype.pow=function(A,I){if(I.isZero())return new Q(1).toRed(this);if(0===I.cmpn(1))return A.clone();var g=new Array(16);g[0]=new Q(1).toRed(this),g[1]=A;for(var B=2;B<g.length;B++)g[B]=this.mul(g[B-1],A);var C=g[0],E=0,i=0,o=I.bitLength()%26;for(0===o&&(o=26),B=I.length-1;B>=0;B--){for(var t=I.words[B],e=o-1;e>=0;e--){var a=t>>e&1;C!==g[0]&&(C=this.sqr(C)),0!==a||0!==E?(E<<=1,E|=a,(4===++i||0===B&&0===e)&&(C=this.mul(C,g[E]),i=0,E=0)):i=0}o=26}return C},G.prototype.convertTo=function(A){var I=A.umod(this.m);return I===A?I.clone():I},G.prototype.convertFrom=function(A){var I=A.clone();return I.red=null,I},Q.mont=function(A){return new y(A)},C(y,G),y.prototype.convertTo=function(A){return this.imod(A.ushln(this.shift))},y.prototype.convertFrom=function(A){var I=this.imod(A.mul(this.rinv));return I.red=null,I},y.prototype.imul=function(A,I){if(A.isZero()||I.isZero())return A.words[0]=0,A.length=1,A;var g=A.imul(I),B=g.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),C=g.isub(B).iushrn(this.shift),Q=C;return C.cmp(this.m)>=0?Q=C.isub(this.m):C.cmpn(0)<0&&(Q=C.iadd(this.m)),Q._forceRed(this)},y.prototype.mul=function(A,I){if(A.isZero()||I.isZero())return new Q(0)._forceRed(this);var g=A.mul(I),B=g.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),C=g.isub(B).iushrn(this.shift),E=C;return C.cmp(this.m)>=0?E=C.isub(this.m):C.cmpn(0)<0&&(E=C.iadd(this.m)),E._forceRed(this)},y.prototype.invm=function(A){return this.imod(A._invmp(this.m).mul(this.r2))._forceRed(this)}}(A,this)}).call(this,g(137)(A))},function(A,I,g){"use strict";(function(A){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var B=g(99),C=g(100),Q=g(48);function E(){return o.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(A,I){if(E()<I)throw new RangeError("Invalid typed array length");return o.TYPED_ARRAY_SUPPORT?(A=new Uint8Array(I)).__proto__=o.prototype:(null===A&&(A=new o(I)),A.length=I),A}function o(A,I,g){if(!(o.TYPED_ARRAY_SUPPORT||this instanceof o))return new o(A,I,g);if("number"==typeof A){if("string"==typeof I)throw new Error("If encoding is specified then the first argument must be a string");return a(this,A)}return t(this,A,I,g)}function t(A,I,g,B){if("number"==typeof I)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&I instanceof ArrayBuffer?function(A,I,g,B){if(I.byteLength,g<0||I.byteLength<g)throw new RangeError("'offset' is out of bounds");if(I.byteLength<g+(B||0))throw new RangeError("'length' is out of bounds");I=void 0===g&&void 0===B?new Uint8Array(I):void 0===B?new Uint8Array(I,g):new Uint8Array(I,g,B);o.TYPED_ARRAY_SUPPORT?(A=I).__proto__=o.prototype:A=r(A,I);return A}(A,I,g,B):"string"==typeof I?function(A,I,g){"string"==typeof g&&""!==g||(g="utf8");if(!o.isEncoding(g))throw new TypeError('"encoding" must be a valid string encoding');var B=0|s(I,g),C=(A=i(A,B)).write(I,g);C!==B&&(A=A.slice(0,C));return A}(A,I,g):function(A,I){if(o.isBuffer(I)){var g=0|n(I.length);return 0===(A=i(A,g)).length?A:(I.copy(A,0,0,g),A)}if(I){if("undefined"!=typeof ArrayBuffer&&I.buffer instanceof ArrayBuffer||"length"in I)return"number"!=typeof I.length||(B=I.length)!=B?i(A,0):r(A,I);if("Buffer"===I.type&&Q(I.data))return r(A,I.data)}var B;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(A,I)}function e(A){if("number"!=typeof A)throw new TypeError('"size" argument must be a number');if(A<0)throw new RangeError('"size" argument must not be negative')}function a(A,I){if(e(I),A=i(A,I<0?0:0|n(I)),!o.TYPED_ARRAY_SUPPORT)for(var g=0;g<I;++g)A[g]=0;return A}function r(A,I){var g=I.length<0?0:0|n(I.length);A=i(A,g);for(var B=0;B<g;B+=1)A[B]=255&I[B];return A}function n(A){if(A>=E())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+E().toString(16)+" bytes");return 0|A}function s(A,I){if(o.isBuffer(A))return A.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(A)||A instanceof ArrayBuffer))return A.byteLength;"string"!=typeof A&&(A=""+A);var g=A.length;if(0===g)return 0;for(var B=!1;;)switch(I){case"ascii":case"latin1":case"binary":return g;case"utf8":case"utf-8":case void 0:return m(A).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*g;case"hex":return g>>>1;case"base64":return v(A).length;default:if(B)return m(A).length;I=(""+I).toLowerCase(),B=!0}}function h(A,I,g){var B=!1;if((void 0===I||I<0)&&(I=0),I>this.length)return"";if((void 0===g||g>this.length)&&(g=this.length),g<=0)return"";if((g>>>=0)<=(I>>>=0))return"";for(A||(A="utf8");;)switch(A){case"hex":return l(this,I,g);case"utf8":case"utf-8":return U(this,I,g);case"ascii":return S(this,I,g);case"latin1":case"binary":return M(this,I,g);case"base64":return u(this,I,g);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return k(this,I,g);default:if(B)throw new TypeError("Unknown encoding: "+A);A=(A+"").toLowerCase(),B=!0}}function D(A,I,g){var B=A[I];A[I]=A[g],A[g]=B}function c(A,I,g,B,C){if(0===A.length)return-1;if("string"==typeof g?(B=g,g=0):g>2147483647?g=2147483647:g<-2147483648&&(g=-2147483648),g=+g,isNaN(g)&&(g=C?0:A.length-1),g<0&&(g=A.length+g),g>=A.length){if(C)return-1;g=A.length-1}else if(g<0){if(!C)return-1;g=0}if("string"==typeof I&&(I=o.from(I,B)),o.isBuffer(I))return 0===I.length?-1:w(A,I,g,B,C);if("number"==typeof I)return I&=255,o.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?C?Uint8Array.prototype.indexOf.call(A,I,g):Uint8Array.prototype.lastIndexOf.call(A,I,g):w(A,[I],g,B,C);throw new TypeError("val must be string, number or Buffer")}function w(A,I,g,B,C){var Q,E=1,i=A.length,o=I.length;if(void 0!==B&&("ucs2"===(B=String(B).toLowerCase())||"ucs-2"===B||"utf16le"===B||"utf-16le"===B)){if(A.length<2||I.length<2)return-1;E=2,i/=2,o/=2,g/=2}function t(A,I){return 1===E?A[I]:A.readUInt16BE(I*E)}if(C){var e=-1;for(Q=g;Q<i;Q++)if(t(A,Q)===t(I,-1===e?0:Q-e)){if(-1===e&&(e=Q),Q-e+1===o)return e*E}else-1!==e&&(Q-=Q-e),e=-1}else for(g+o>i&&(g=i-o),Q=g;Q>=0;Q--){for(var a=!0,r=0;r<o;r++)if(t(A,Q+r)!==t(I,r)){a=!1;break}if(a)return Q}return-1}function f(A,I,g,B){g=Number(g)||0;var C=A.length-g;B?(B=Number(B))>C&&(B=C):B=C;var Q=I.length;if(Q%2!=0)throw new TypeError("Invalid hex string");B>Q/2&&(B=Q/2);for(var E=0;E<B;++E){var i=parseInt(I.substr(2*E,2),16);if(isNaN(i))return E;A[g+E]=i}return E}function d(A,I,g,B){return x(m(I,A.length-g),A,g,B)}function F(A,I,g,B){return x(function(A){for(var I=[],g=0;g<A.length;++g)I.push(255&A.charCodeAt(g));return I}(I),A,g,B)}function G(A,I,g,B){return F(A,I,g,B)}function y(A,I,g,B){return x(v(I),A,g,B)}function R(A,I,g,B){return x(function(A,I){for(var g,B,C,Q=[],E=0;E<A.length&&!((I-=2)<0);++E)g=A.charCodeAt(E),B=g>>8,C=g%256,Q.push(C),Q.push(B);return Q}(I,A.length-g),A,g,B)}function u(A,I,g){return 0===I&&g===A.length?B.fromByteArray(A):B.fromByteArray(A.slice(I,g))}function U(A,I,g){g=Math.min(A.length,g);for(var B=[],C=I;C<g;){var Q,E,i,o,t=A[C],e=null,a=t>239?4:t>223?3:t>191?2:1;if(C+a<=g)switch(a){case 1:t<128&&(e=t);break;case 2:128==(192&(Q=A[C+1]))&&(o=(31&t)<<6|63&Q)>127&&(e=o);break;case 3:Q=A[C+1],E=A[C+2],128==(192&Q)&&128==(192&E)&&(o=(15&t)<<12|(63&Q)<<6|63&E)>2047&&(o<55296||o>57343)&&(e=o);break;case 4:Q=A[C+1],E=A[C+2],i=A[C+3],128==(192&Q)&&128==(192&E)&&128==(192&i)&&(o=(15&t)<<18|(63&Q)<<12|(63&E)<<6|63&i)>65535&&o<1114112&&(e=o)}null===e?(e=65533,a=1):e>65535&&(e-=65536,B.push(e>>>10&1023|55296),e=56320|1023&e),B.push(e),C+=a}return function(A){var I=A.length;if(I<=4096)return String.fromCharCode.apply(String,A);var g="",B=0;for(;B<I;)g+=String.fromCharCode.apply(String,A.slice(B,B+=4096));return g}(B)}I.Buffer=o,I.SlowBuffer=function(A){+A!=A&&(A=0);return o.alloc(+A)},I.INSPECT_MAX_BYTES=50,o.TYPED_ARRAY_SUPPORT=void 0!==A.TYPED_ARRAY_SUPPORT?A.TYPED_ARRAY_SUPPORT:function(){try{var A=new Uint8Array(1);return A.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===A.foo()&&"function"==typeof A.subarray&&0===A.subarray(1,1).byteLength}catch(A){return!1}}(),I.kMaxLength=E(),o.poolSize=8192,o._augment=function(A){return A.__proto__=o.prototype,A},o.from=function(A,I,g){return t(null,A,I,g)},o.TYPED_ARRAY_SUPPORT&&(o.prototype.__proto__=Uint8Array.prototype,o.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&o[Symbol.species]===o&&Object.defineProperty(o,Symbol.species,{value:null,configurable:!0})),o.alloc=function(A,I,g){return function(A,I,g,B){return e(I),I<=0?i(A,I):void 0!==g?"string"==typeof B?i(A,I).fill(g,B):i(A,I).fill(g):i(A,I)}(null,A,I,g)},o.allocUnsafe=function(A){return a(null,A)},o.allocUnsafeSlow=function(A){return a(null,A)},o.isBuffer=function(A){return!(null==A||!A._isBuffer)},o.compare=function(A,I){if(!o.isBuffer(A)||!o.isBuffer(I))throw new TypeError("Arguments must be Buffers");if(A===I)return 0;for(var g=A.length,B=I.length,C=0,Q=Math.min(g,B);C<Q;++C)if(A[C]!==I[C]){g=A[C],B=I[C];break}return g<B?-1:B<g?1:0},o.isEncoding=function(A){switch(String(A).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},o.concat=function(A,I){if(!Q(A))throw new TypeError('"list" argument must be an Array of Buffers');if(0===A.length)return o.alloc(0);var g;if(void 0===I)for(I=0,g=0;g<A.length;++g)I+=A[g].length;var B=o.allocUnsafe(I),C=0;for(g=0;g<A.length;++g){var E=A[g];if(!o.isBuffer(E))throw new TypeError('"list" argument must be an Array of Buffers');E.copy(B,C),C+=E.length}return B},o.byteLength=s,o.prototype._isBuffer=!0,o.prototype.swap16=function(){var A=this.length;if(A%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var I=0;I<A;I+=2)D(this,I,I+1);return this},o.prototype.swap32=function(){var A=this.length;if(A%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var I=0;I<A;I+=4)D(this,I,I+3),D(this,I+1,I+2);return this},o.prototype.swap64=function(){var A=this.length;if(A%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var I=0;I<A;I+=8)D(this,I,I+7),D(this,I+1,I+6),D(this,I+2,I+5),D(this,I+3,I+4);return this},o.prototype.toString=function(){var A=0|this.length;return 0===A?"":0===arguments.length?U(this,0,A):h.apply(this,arguments)},o.prototype.equals=function(A){if(!o.isBuffer(A))throw new TypeError("Argument must be a Buffer");return this===A||0===o.compare(this,A)},o.prototype.inspect=function(){var A="",g=I.INSPECT_MAX_BYTES;return this.length>0&&(A=this.toString("hex",0,g).match(/.{2}/g).join(" "),this.length>g&&(A+=" ... ")),"<Buffer "+A+">"},o.prototype.compare=function(A,I,g,B,C){if(!o.isBuffer(A))throw new TypeError("Argument must be a Buffer");if(void 0===I&&(I=0),void 0===g&&(g=A?A.length:0),void 0===B&&(B=0),void 0===C&&(C=this.length),I<0||g>A.length||B<0||C>this.length)throw new RangeError("out of range index");if(B>=C&&I>=g)return 0;if(B>=C)return-1;if(I>=g)return 1;if(this===A)return 0;for(var Q=(C>>>=0)-(B>>>=0),E=(g>>>=0)-(I>>>=0),i=Math.min(Q,E),t=this.slice(B,C),e=A.slice(I,g),a=0;a<i;++a)if(t[a]!==e[a]){Q=t[a],E=e[a];break}return Q<E?-1:E<Q?1:0},o.prototype.includes=function(A,I,g){return-1!==this.indexOf(A,I,g)},o.prototype.indexOf=function(A,I,g){return c(this,A,I,g,!0)},o.prototype.lastIndexOf=function(A,I,g){return c(this,A,I,g,!1)},o.prototype.write=function(A,I,g,B){if(void 0===I)B="utf8",g=this.length,I=0;else if(void 0===g&&"string"==typeof I)B=I,g=this.length,I=0;else{if(!isFinite(I))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");I|=0,isFinite(g)?(g|=0,void 0===B&&(B="utf8")):(B=g,g=void 0)}var C=this.length-I;if((void 0===g||g>C)&&(g=C),A.length>0&&(g<0||I<0)||I>this.length)throw new RangeError("Attempt to write outside buffer bounds");B||(B="utf8");for(var Q=!1;;)switch(B){case"hex":return f(this,A,I,g);case"utf8":case"utf-8":return d(this,A,I,g);case"ascii":return F(this,A,I,g);case"latin1":case"binary":return G(this,A,I,g);case"base64":return y(this,A,I,g);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,A,I,g);default:if(Q)throw new TypeError("Unknown encoding: "+B);B=(""+B).toLowerCase(),Q=!0}},o.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function S(A,I,g){var B="";g=Math.min(A.length,g);for(var C=I;C<g;++C)B+=String.fromCharCode(127&A[C]);return B}function M(A,I,g){var B="";g=Math.min(A.length,g);for(var C=I;C<g;++C)B+=String.fromCharCode(A[C]);return B}function l(A,I,g){var B=A.length;(!I||I<0)&&(I=0),(!g||g<0||g>B)&&(g=B);for(var C="",Q=I;Q<g;++Q)C+=q(A[Q]);return C}function k(A,I,g){for(var B=A.slice(I,g),C="",Q=0;Q<B.length;Q+=2)C+=String.fromCharCode(B[Q]+256*B[Q+1]);return C}function N(A,I,g){if(A%1!=0||A<0)throw new RangeError("offset is not uint");if(A+I>g)throw new RangeError("Trying to access beyond buffer length")}function K(A,I,g,B,C,Q){if(!o.isBuffer(A))throw new TypeError('"buffer" argument must be a Buffer instance');if(I>C||I<Q)throw new RangeError('"value" argument is out of bounds');if(g+B>A.length)throw new RangeError("Index out of range")}function Y(A,I,g,B){I<0&&(I=65535+I+1);for(var C=0,Q=Math.min(A.length-g,2);C<Q;++C)A[g+C]=(I&255<<8*(B?C:1-C))>>>8*(B?C:1-C)}function p(A,I,g,B){I<0&&(I=4294967295+I+1);for(var C=0,Q=Math.min(A.length-g,4);C<Q;++C)A[g+C]=I>>>8*(B?C:3-C)&255}function J(A,I,g,B,C,Q){if(g+B>A.length)throw new RangeError("Index out of range");if(g<0)throw new RangeError("Index out of range")}function b(A,I,g,B,Q){return Q||J(A,0,g,4),C.write(A,I,g,B,23,4),g+4}function H(A,I,g,B,Q){return Q||J(A,0,g,8),C.write(A,I,g,B,52,8),g+8}o.prototype.slice=function(A,I){var g,B=this.length;if((A=~~A)<0?(A+=B)<0&&(A=0):A>B&&(A=B),(I=void 0===I?B:~~I)<0?(I+=B)<0&&(I=0):I>B&&(I=B),I<A&&(I=A),o.TYPED_ARRAY_SUPPORT)(g=this.subarray(A,I)).__proto__=o.prototype;else{var C=I-A;g=new o(C,void 0);for(var Q=0;Q<C;++Q)g[Q]=this[Q+A]}return g},o.prototype.readUIntLE=function(A,I,g){A|=0,I|=0,g||N(A,I,this.length);for(var B=this[A],C=1,Q=0;++Q<I&&(C*=256);)B+=this[A+Q]*C;return B},o.prototype.readUIntBE=function(A,I,g){A|=0,I|=0,g||N(A,I,this.length);for(var B=this[A+--I],C=1;I>0&&(C*=256);)B+=this[A+--I]*C;return B},o.prototype.readUInt8=function(A,I){return I||N(A,1,this.length),this[A]},o.prototype.readUInt16LE=function(A,I){return I||N(A,2,this.length),this[A]|this[A+1]<<8},o.prototype.readUInt16BE=function(A,I){return I||N(A,2,this.length),this[A]<<8|this[A+1]},o.prototype.readUInt32LE=function(A,I){return I||N(A,4,this.length),(this[A]|this[A+1]<<8|this[A+2]<<16)+16777216*this[A+3]},o.prototype.readUInt32BE=function(A,I){return I||N(A,4,this.length),16777216*this[A]+(this[A+1]<<16|this[A+2]<<8|this[A+3])},o.prototype.readIntLE=function(A,I,g){A|=0,I|=0,g||N(A,I,this.length);for(var B=this[A],C=1,Q=0;++Q<I&&(C*=256);)B+=this[A+Q]*C;return B>=(C*=128)&&(B-=Math.pow(2,8*I)),B},o.prototype.readIntBE=function(A,I,g){A|=0,I|=0,g||N(A,I,this.length);for(var B=I,C=1,Q=this[A+--B];B>0&&(C*=256);)Q+=this[A+--B]*C;return Q>=(C*=128)&&(Q-=Math.pow(2,8*I)),Q},o.prototype.readInt8=function(A,I){return I||N(A,1,this.length),128&this[A]?-1*(255-this[A]+1):this[A]},o.prototype.readInt16LE=function(A,I){I||N(A,2,this.length);var g=this[A]|this[A+1]<<8;return 32768&g?4294901760|g:g},o.prototype.readInt16BE=function(A,I){I||N(A,2,this.length);var g=this[A+1]|this[A]<<8;return 32768&g?4294901760|g:g},o.prototype.readInt32LE=function(A,I){return I||N(A,4,this.length),this[A]|this[A+1]<<8|this[A+2]<<16|this[A+3]<<24},o.prototype.readInt32BE=function(A,I){return I||N(A,4,this.length),this[A]<<24|this[A+1]<<16|this[A+2]<<8|this[A+3]},o.prototype.readFloatLE=function(A,I){return I||N(A,4,this.length),C.read(this,A,!0,23,4)},o.prototype.readFloatBE=function(A,I){return I||N(A,4,this.length),C.read(this,A,!1,23,4)},o.prototype.readDoubleLE=function(A,I){return I||N(A,8,this.length),C.read(this,A,!0,52,8)},o.prototype.readDoubleBE=function(A,I){return I||N(A,8,this.length),C.read(this,A,!1,52,8)},o.prototype.writeUIntLE=function(A,I,g,B){(A=+A,I|=0,g|=0,B)||K(this,A,I,g,Math.pow(2,8*g)-1,0);var C=1,Q=0;for(this[I]=255&A;++Q<g&&(C*=256);)this[I+Q]=A/C&255;return I+g},o.prototype.writeUIntBE=function(A,I,g,B){(A=+A,I|=0,g|=0,B)||K(this,A,I,g,Math.pow(2,8*g)-1,0);var C=g-1,Q=1;for(this[I+C]=255&A;--C>=0&&(Q*=256);)this[I+C]=A/Q&255;return I+g},o.prototype.writeUInt8=function(A,I,g){return A=+A,I|=0,g||K(this,A,I,1,255,0),o.TYPED_ARRAY_SUPPORT||(A=Math.floor(A)),this[I]=255&A,I+1},o.prototype.writeUInt16LE=function(A,I,g){return A=+A,I|=0,g||K(this,A,I,2,65535,0),o.TYPED_ARRAY_SUPPORT?(this[I]=255&A,this[I+1]=A>>>8):Y(this,A,I,!0),I+2},o.prototype.writeUInt16BE=function(A,I,g){return A=+A,I|=0,g||K(this,A,I,2,65535,0),o.TYPED_ARRAY_SUPPORT?(this[I]=A>>>8,this[I+1]=255&A):Y(this,A,I,!1),I+2},o.prototype.writeUInt32LE=function(A,I,g){return A=+A,I|=0,g||K(this,A,I,4,4294967295,0),o.TYPED_ARRAY_SUPPORT?(this[I+3]=A>>>24,this[I+2]=A>>>16,this[I+1]=A>>>8,this[I]=255&A):p(this,A,I,!0),I+4},o.prototype.writeUInt32BE=function(A,I,g){return A=+A,I|=0,g||K(this,A,I,4,4294967295,0),o.TYPED_ARRAY_SUPPORT?(this[I]=A>>>24,this[I+1]=A>>>16,this[I+2]=A>>>8,this[I+3]=255&A):p(this,A,I,!1),I+4},o.prototype.writeIntLE=function(A,I,g,B){if(A=+A,I|=0,!B){var C=Math.pow(2,8*g-1);K(this,A,I,g,C-1,-C)}var Q=0,E=1,i=0;for(this[I]=255&A;++Q<g&&(E*=256);)A<0&&0===i&&0!==this[I+Q-1]&&(i=1),this[I+Q]=(A/E>>0)-i&255;return I+g},o.prototype.writeIntBE=function(A,I,g,B){if(A=+A,I|=0,!B){var C=Math.pow(2,8*g-1);K(this,A,I,g,C-1,-C)}var Q=g-1,E=1,i=0;for(this[I+Q]=255&A;--Q>=0&&(E*=256);)A<0&&0===i&&0!==this[I+Q+1]&&(i=1),this[I+Q]=(A/E>>0)-i&255;return I+g},o.prototype.writeInt8=function(A,I,g){return A=+A,I|=0,g||K(this,A,I,1,127,-128),o.TYPED_ARRAY_SUPPORT||(A=Math.floor(A)),A<0&&(A=255+A+1),this[I]=255&A,I+1},o.prototype.writeInt16LE=function(A,I,g){return A=+A,I|=0,g||K(this,A,I,2,32767,-32768),o.TYPED_ARRAY_SUPPORT?(this[I]=255&A,this[I+1]=A>>>8):Y(this,A,I,!0),I+2},o.prototype.writeInt16BE=function(A,I,g){return A=+A,I|=0,g||K(this,A,I,2,32767,-32768),o.TYPED_ARRAY_SUPPORT?(this[I]=A>>>8,this[I+1]=255&A):Y(this,A,I,!1),I+2},o.prototype.writeInt32LE=function(A,I,g){return A=+A,I|=0,g||K(this,A,I,4,2147483647,-2147483648),o.TYPED_ARRAY_SUPPORT?(this[I]=255&A,this[I+1]=A>>>8,this[I+2]=A>>>16,this[I+3]=A>>>24):p(this,A,I,!0),I+4},o.prototype.writeInt32BE=function(A,I,g){return A=+A,I|=0,g||K(this,A,I,4,2147483647,-2147483648),A<0&&(A=4294967295+A+1),o.TYPED_ARRAY_SUPPORT?(this[I]=A>>>24,this[I+1]=A>>>16,this[I+2]=A>>>8,this[I+3]=255&A):p(this,A,I,!1),I+4},o.prototype.writeFloatLE=function(A,I,g){return b(this,A,I,!0,g)},o.prototype.writeFloatBE=function(A,I,g){return b(this,A,I,!1,g)},o.prototype.writeDoubleLE=function(A,I,g){return H(this,A,I,!0,g)},o.prototype.writeDoubleBE=function(A,I,g){return H(this,A,I,!1,g)},o.prototype.copy=function(A,I,g,B){if(g||(g=0),B||0===B||(B=this.length),I>=A.length&&(I=A.length),I||(I=0),B>0&&B<g&&(B=g),B===g)return 0;if(0===A.length||0===this.length)return 0;if(I<0)throw new RangeError("targetStart out of bounds");if(g<0||g>=this.length)throw new RangeError("sourceStart out of bounds");if(B<0)throw new RangeError("sourceEnd out of bounds");B>this.length&&(B=this.length),A.length-I<B-g&&(B=A.length-I+g);var C,Q=B-g;if(this===A&&g<I&&I<B)for(C=Q-1;C>=0;--C)A[C+I]=this[C+g];else if(Q<1e3||!o.TYPED_ARRAY_SUPPORT)for(C=0;C<Q;++C)A[C+I]=this[C+g];else Uint8Array.prototype.set.call(A,this.subarray(g,g+Q),I);return Q},o.prototype.fill=function(A,I,g,B){if("string"==typeof A){if("string"==typeof I?(B=I,I=0,g=this.length):"string"==typeof g&&(B=g,g=this.length),1===A.length){var C=A.charCodeAt(0);C<256&&(A=C)}if(void 0!==B&&"string"!=typeof B)throw new TypeError("encoding must be a string");if("string"==typeof B&&!o.isEncoding(B))throw new TypeError("Unknown encoding: "+B)}else"number"==typeof A&&(A&=255);if(I<0||this.length<I||this.length<g)throw new RangeError("Out of range index");if(g<=I)return this;var Q;if(I>>>=0,g=void 0===g?this.length:g>>>0,A||(A=0),"number"==typeof A)for(Q=I;Q<g;++Q)this[Q]=A;else{var E=o.isBuffer(A)?A:m(new o(A,B).toString()),i=E.length;for(Q=0;Q<g-I;++Q)this[Q+I]=E[Q%i]}return this};var L=/[^+\/0-9A-Za-z-_]/g;function q(A){return A<16?"0"+A.toString(16):A.toString(16)}function m(A,I){var g;I=I||1/0;for(var B=A.length,C=null,Q=[],E=0;E<B;++E){if((g=A.charCodeAt(E))>55295&&g<57344){if(!C){if(g>56319){(I-=3)>-1&&Q.push(239,191,189);continue}if(E+1===B){(I-=3)>-1&&Q.push(239,191,189);continue}C=g;continue}if(g<56320){(I-=3)>-1&&Q.push(239,191,189),C=g;continue}g=65536+(C-55296<<10|g-56320)}else C&&(I-=3)>-1&&Q.push(239,191,189);if(C=null,g<128){if((I-=1)<0)break;Q.push(g)}else if(g<2048){if((I-=2)<0)break;Q.push(g>>6|192,63&g|128)}else if(g<65536){if((I-=3)<0)break;Q.push(g>>12|224,g>>6&63|128,63&g|128)}else{if(!(g<1114112))throw new Error("Invalid code point");if((I-=4)<0)break;Q.push(g>>18|240,g>>12&63|128,g>>6&63|128,63&g|128)}}return Q}function v(A){return B.toByteArray(function(A){if((A=function(A){return A.trim?A.trim():A.replace(/^\s+|\s+$/g,"")}(A).replace(L,"")).length<2)return"";for(;A.length%4!=0;)A+="=";return A}(A))}function x(A,I,g,B){for(var C=0;C<B&&!(C+g>=I.length||C>=A.length);++C)I[C+g]=A[C];return C}}).call(this,g(11))},function(A,I){function g(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}A.exports=function(A){return function(){var I=this,B=arguments;return new Promise((function(C,Q){var E=A.apply(I,B);function i(A){g(E,C,Q,i,o,"next",A)}function o(A){g(E,C,Q,i,o,"throw",A)}i(void 0)}))}}},function(A,I,g){"use strict";var B=g(86),C=Object.prototype.toString;function Q(A){return"[object Array]"===C.call(A)}function E(A){return void 0===A}function i(A){return null!==A&&"object"==typeof A}function o(A){return"[object Function]"===C.call(A)}function t(A,I){if(null!=A)if("object"!=typeof A&&(A=[A]),Q(A))for(var g=0,B=A.length;g<B;g++)I.call(null,A[g],g,A);else for(var C in A)Object.prototype.hasOwnProperty.call(A,C)&&I.call(null,A[C],C,A)}A.exports={isArray:Q,isArrayBuffer:function(A){return"[object ArrayBuffer]"===C.call(A)},isBuffer:function(A){return null!==A&&!E(A)&&null!==A.constructor&&!E(A.constructor)&&"function"==typeof A.constructor.isBuffer&&A.constructor.isBuffer(A)},isFormData:function(A){return"undefined"!=typeof FormData&&A instanceof FormData},isArrayBufferView:function(A){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&A.buffer instanceof ArrayBuffer},isString:function(A){return"string"==typeof A},isNumber:function(A){return"number"==typeof A},isObject:i,isUndefined:E,isDate:function(A){return"[object Date]"===C.call(A)},isFile:function(A){return"[object File]"===C.call(A)},isBlob:function(A){return"[object Blob]"===C.call(A)},isFunction:o,isStream:function(A){return i(A)&&o(A.pipe)},isURLSearchParams:function(A){return"undefined"!=typeof URLSearchParams&&A instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:t,merge:function A(){var I={};function g(g,B){"object"==typeof I[B]&&"object"==typeof g?I[B]=A(I[B],g):I[B]=g}for(var B=0,C=arguments.length;B<C;B++)t(arguments[B],g);return I},deepMerge:function A(){var I={};function g(g,B){"object"==typeof I[B]&&"object"==typeof g?I[B]=A(I[B],g):I[B]="object"==typeof g?A({},g):g}for(var B=0,C=arguments.length;B<C;B++)t(arguments[B],g);return I},extend:function(A,I,g){return t(I,(function(I,C){A[C]=g&&"function"==typeof I?B(I,g):I})),A},trim:function(A){return A.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(A,I){function g(A,I){if(!A)throw new Error(I||"Assertion failed")}A.exports=g,g.equal=function(A,I,g){if(A!=I)throw new Error(g||"Assertion failed: "+A+" != "+I)}},function(A,I,g){"use strict";var B=I,C=g(3),Q=g(7),E=g(73);B.assert=Q,B.toArray=E.toArray,B.zero2=E.zero2,B.toHex=E.toHex,B.encode=E.encode,B.getNAF=function(A,I,g){var B=new Array(Math.max(A.bitLength(),g)+1);B.fill(0);for(var C=1<<I+1,Q=A.clone(),E=0;E<B.length;E++){var i,o=Q.andln(C-1);Q.isOdd()?(i=o>(C>>1)-1?(C>>1)-o:o,Q.isubn(i)):i=0,B[E]=i,Q.iushrn(1)}return B},B.getJSF=function(A,I){var g=[[],[]];A=A.clone(),I=I.clone();for(var B=0,C=0;A.cmpn(-B)>0||I.cmpn(-C)>0;){var Q,E,i,o=A.andln(3)+B&3,t=I.andln(3)+C&3;if(3===o&&(o=-1),3===t&&(t=-1),0==(1&o))Q=0;else Q=3!==(i=A.andln(7)+B&7)&&5!==i||2!==t?o:-o;if(g[0].push(Q),0==(1&t))E=0;else E=3!==(i=I.andln(7)+C&7)&&5!==i||2!==o?t:-t;g[1].push(E),2*B===Q+1&&(B=1-B),2*C===E+1&&(C=1-C),A.iushrn(1),I.iushrn(1)}return g},B.cachedProperty=function(A,I,g){var B="_"+I;A.prototype[I]=function(){return void 0!==this[B]?this[B]:this[B]=g.call(this)}},B.parseBytes=function(A){return"string"==typeof A?B.toArray(A,"hex"):A},B.intFromLE=function(A){return new C(A,"hex","le")}},function(A,I){var g,B,C=A.exports={};function Q(){throw new Error("setTimeout has not been defined")}function E(){throw new Error("clearTimeout has not been defined")}function i(A){if(g===setTimeout)return setTimeout(A,0);if((g===Q||!g)&&setTimeout)return g=setTimeout,setTimeout(A,0);try{return g(A,0)}catch(I){try{return g.call(null,A,0)}catch(I){return g.call(this,A,0)}}}!function(){try{g="function"==typeof setTimeout?setTimeout:Q}catch(A){g=Q}try{B="function"==typeof clearTimeout?clearTimeout:E}catch(A){B=E}}();var o,t=[],e=!1,a=-1;function r(){e&&o&&(e=!1,o.length?t=o.concat(t):a=-1,t.length&&n())}function n(){if(!e){var A=i(r);e=!0;for(var I=t.length;I;){for(o=t,t=[];++a<I;)o&&o[a].run();a=-1,I=t.length}o=null,e=!1,function(A){if(B===clearTimeout)return clearTimeout(A);if((B===E||!B)&&clearTimeout)return B=clearTimeout,clearTimeout(A);try{B(A)}catch(I){try{return B.call(null,A)}catch(I){return B.call(this,A)}}}(A)}}function s(A,I){this.fun=A,this.array=I}function h(){}C.nextTick=function(A){var I=new Array(arguments.length-1);if(arguments.length>1)for(var g=1;g<arguments.length;g++)I[g-1]=arguments[g];t.push(new s(A,I)),1!==t.length||e||i(n)},s.prototype.run=function(){this.fun.apply(null,this.array)},C.title="browser",C.browser=!0,C.env={},C.argv=[],C.version="",C.versions={},C.on=h,C.addListener=h,C.once=h,C.off=h,C.removeListener=h,C.removeAllListeners=h,C.emit=h,C.prependListener=h,C.prependOnceListener=h,C.listeners=function(A){return[]},C.binding=function(A){throw new Error("process.binding is not supported")},C.cwd=function(){return"/"},C.chdir=function(A){throw new Error("process.chdir is not supported")},C.umask=function(){return 0}},function(A,I){function g(I){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?A.exports=g=function(A){return typeof A}:A.exports=g=function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},g(I)}A.exports=g},function(A,I){var g;g=function(){return this}();try{g=g||new Function("return this")()}catch(A){"object"==typeof window&&(g=window)}A.exports=g},function(A,I,g){"use strict";var B=g(7),C=g(0);function Q(A,I){return 55296==(64512&A.charCodeAt(I))&&(!(I<0||I+1>=A.length)&&56320==(64512&A.charCodeAt(I+1)))}function E(A){return(A>>>24|A>>>8&65280|A<<8&16711680|(255&A)<<24)>>>0}function i(A){return 1===A.length?"0"+A:A}function o(A){return 7===A.length?"0"+A:6===A.length?"00"+A:5===A.length?"000"+A:4===A.length?"0000"+A:3===A.length?"00000"+A:2===A.length?"000000"+A:1===A.length?"0000000"+A:A}I.inherits=C,I.toArray=function(A,I){if(Array.isArray(A))return A.slice();if(!A)return[];var g=[];if("string"==typeof A)if(I){if("hex"===I)for((A=A.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(A="0"+A),C=0;C<A.length;C+=2)g.push(parseInt(A[C]+A[C+1],16))}else for(var B=0,C=0;C<A.length;C++){var E=A.charCodeAt(C);E<128?g[B++]=E:E<2048?(g[B++]=E>>6|192,g[B++]=63&E|128):Q(A,C)?(E=65536+((1023&E)<<10)+(1023&A.charCodeAt(++C)),g[B++]=E>>18|240,g[B++]=E>>12&63|128,g[B++]=E>>6&63|128,g[B++]=63&E|128):(g[B++]=E>>12|224,g[B++]=E>>6&63|128,g[B++]=63&E|128)}else for(C=0;C<A.length;C++)g[C]=0|A[C];return g},I.toHex=function(A){for(var I="",g=0;g<A.length;g++)I+=i(A[g].toString(16));return I},I.htonl=E,I.toHex32=function(A,I){for(var g="",B=0;B<A.length;B++){var C=A[B];"little"===I&&(C=E(C)),g+=o(C.toString(16))}return g},I.zero2=i,I.zero8=o,I.join32=function(A,I,g,C){var Q=g-I;B(Q%4==0);for(var E=new Array(Q/4),i=0,o=I;i<E.length;i++,o+=4){var t;t="big"===C?A[o]<<24|A[o+1]<<16|A[o+2]<<8|A[o+3]:A[o+3]<<24|A[o+2]<<16|A[o+1]<<8|A[o],E[i]=t>>>0}return E},I.split32=function(A,I){for(var g=new Array(4*A.length),B=0,C=0;B<A.length;B++,C+=4){var Q=A[B];"big"===I?(g[C]=Q>>>24,g[C+1]=Q>>>16&255,g[C+2]=Q>>>8&255,g[C+3]=255&Q):(g[C+3]=Q>>>24,g[C+2]=Q>>>16&255,g[C+1]=Q>>>8&255,g[C]=255&Q)}return g},I.rotr32=function(A,I){return A>>>I|A<<32-I},I.rotl32=function(A,I){return A<<I|A>>>32-I},I.sum32=function(A,I){return A+I>>>0},I.sum32_3=function(A,I,g){return A+I+g>>>0},I.sum32_4=function(A,I,g,B){return A+I+g+B>>>0},I.sum32_5=function(A,I,g,B,C){return A+I+g+B+C>>>0},I.sum64=function(A,I,g,B){var C=A[I],Q=B+A[I+1]>>>0,E=(Q<B?1:0)+g+C;A[I]=E>>>0,A[I+1]=Q},I.sum64_hi=function(A,I,g,B){return(I+B>>>0<I?1:0)+A+g>>>0},I.sum64_lo=function(A,I,g,B){return I+B>>>0},I.sum64_4_hi=function(A,I,g,B,C,Q,E,i){var o=0,t=I;return o+=(t=t+B>>>0)<I?1:0,o+=(t=t+Q>>>0)<Q?1:0,A+g+C+E+(o+=(t=t+i>>>0)<i?1:0)>>>0},I.sum64_4_lo=function(A,I,g,B,C,Q,E,i){return I+B+Q+i>>>0},I.sum64_5_hi=function(A,I,g,B,C,Q,E,i,o,t){var e=0,a=I;return e+=(a=a+B>>>0)<I?1:0,e+=(a=a+Q>>>0)<Q?1:0,e+=(a=a+i>>>0)<i?1:0,A+g+C+E+o+(e+=(a=a+t>>>0)<t?1:0)>>>0},I.sum64_5_lo=function(A,I,g,B,C,Q,E,i,o,t){return I+B+Q+i+t>>>0},I.rotr64_hi=function(A,I,g){return(I<<32-g|A>>>g)>>>0},I.rotr64_lo=function(A,I,g){return(A<<32-g|I>>>g)>>>0},I.shr64_hi=function(A,I,g){return A>>>g},I.shr64_lo=function(A,I,g){return(A<<32-g|I>>>g)>>>0}},function(A,I,g){"use strict";(function(A){g.d(I,"a",(function(){return n}));var B=g(2),C=g.n(B),Q=g(5),E=g.n(Q),i=g(20),o=g.n(i),t=g(17),e=g.n(t),a=g(94),r=g(15),n=function(){function I(){o()(this,I),this.instance,this.markerCount=0,this.multiMarkerCount=0,this.cameraCount=0}var g,B,Q,i,t;return e()(I,null,[{key:"UNKNOWN_MARKER",get:function(){return-1}},{key:"PATTERN_MARKER",get:function(){return 0}},{key:"BARCODE_MARKER",get:function(){return 1}},{key:"NFT_MARKER",get:function(){return 2}}]),e()(I,[{key:"init",value:(t=E()(C.a.mark((function I(){var g;return C.a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return I.next=2,a.a.init();case 2:return g=I.sent,this.instance=g.instance,this._decorate(),("undefined"!=typeof window?window:A).artoolkit=this,I.abrupt("return",this);case 8:case"end":return I.stop()}}),I,this)}))),function(){return t.apply(this,arguments)})},{key:"_decorate",value:function(){var A=this;for(var I in["setup","teardown","setupAR2","setLogLevel","getLogLevel","setDebugMode","getDebugMode","getProcessingImage","setMarkerInfoDir","setMarkerInfoVertex","getTransMatSquare","getTransMatSquareCont","getTransMatMultiSquare","getTransMatMultiSquareRobust","getMultiMarkerNum","getMultiMarkerCount","detectMarker","getMarkerNum","detectNFTMarker","getNFTMarker","getMarker","getMultiEachMarker","setProjectionNearPlane","getProjectionNearPlane","setProjectionFarPlane","getProjectionFarPlane","setThresholdMode","getThresholdMode","setThreshold","getThreshold","setPatternDetectionMode","getPatternDetectionMode","setMatrixCodeType","getMatrixCodeType","setLabelingMode","getLabelingMode","setPattRatio","getPattRatio","setImageProcMode","getImageProcMode"].forEach((function(I){A[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this[I]=this.instance[I])}},{key:"loadCamera",value:(i=E()(C.a.mark((function A(I){var g,B;return C.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g="/camera_param_"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,r.a.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(B,g),A.abrupt("return",this.instance._loadCamera(g));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A){return i.apply(this,arguments)})},{key:"addMarker",value:(Q=E()(C.a.mark((function A(I,g){var B,Q;return C.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(B="/marker_"+this.markerCount++,-1===g.indexOf("\n")){A.next=5;break}Q=r.a.string2Uint8Data(g),A.next=14;break;case 5:return A.prev=5,A.next=8,r.a.fetchRemoteData(g);case 8:Q=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(Q,B),A.abrupt("return",this.instance._addMarker(I,B));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A,I){return Q.apply(this,arguments)})},{key:"addMultiMarker",value:(B=E()(C.a.mark((function A(I,g){var B,Q,i,o,t,e,a;return C.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return B="/multi_marker_"+this.multiMarkerCount++,A.next=3,r.a.fetchRemoteData(g);case 3:return Q=A.sent,i=r.a.parseMultiFile(Q),o=function(){var A=E()(C.a.mark((function A(I){var B,Q;return C.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return B=new URL(I,g).toString(),A.next=3,r.a.fetchRemoteData(B);case 3:Q=A.sent,this._storeDataFile(Q,I);case 5:case"end":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),t=i.map(o,this),A.next=9,Promise.all(t);case 9:return e=this.instance._addMultiMarker(I,B),a=this.instance.getMultiMarkerNum(I,e),A.abrupt("return",[e,a]);case 12:case"end":return A.stop()}}),A,this)}))),function(A,I){return B.apply(this,arguments)})},{key:"addNFTMarker",value:(g=E()(C.a.mark((function A(I,g){var B,Q,i,o;return C.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return B="/markerNFT_"+this.markerCount++,Q=["fset","iset","fset3"],i=function(){var A=E()(C.a.mark((function A(I){var Q,E,i;return C.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return Q=g+"."+I,E=B+"."+I,A.next=4,r.a.fetchRemoteData(Q);case 4:i=A.sent,this._storeDataFile(i,E);case 6:case"end":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),o=Q.map(i,this),A.next=6,Promise.all(o);case 6:return A.abrupt("return",this.instance._addNFTMarker(I,B));case 7:case"end":return A.stop()}}),A,this)}))),function(A,I){return g.apply(this,arguments)})},{key:"_storeDataFile",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:"binary"})}}]),I}()}).call(this,g(11))},function(A,I,g){var B=g(1).Buffer,C=g(33).Transform,Q=g(37).StringDecoder;function E(A){C.call(this),this.hashMode="string"==typeof A,this.hashMode?this[A]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}g(0)(E,C),E.prototype.update=function(A,I,g){"string"==typeof A&&(A=B.from(A,I));var C=this._update(A);return this.hashMode?this:(g&&(C=this._toString(C,g)),C)},E.prototype.setAutoPadding=function(){},E.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")},E.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")},E.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")},E.prototype._transform=function(A,I,g){var B;try{this.hashMode?this._update(A):this.push(this._update(A))}catch(A){B=A}finally{g(B)}},E.prototype._flush=function(A){var I;try{this.push(this.__final())}catch(A){I=A}A(I)},E.prototype._finalOrDigest=function(A){var I=this.__final()||B.alloc(0);return A&&(I=this._toString(I,A,!0)),I},E.prototype._toString=function(A,I,g){if(this._decoder||(this._decoder=new Q(I),this._encoding=I),this._encoding!==I)throw new Error("can't switch encodings");var B=this._decoder.write(A);return g&&(B+=this._decoder.end()),B},A.exports=E},function(A,I,g){"use strict";g.d(I,"a",(function(){return n}));var B=g(2),C=g.n(B),Q=g(5),E=g.n(Q),i=g(20),o=g.n(i),t=g(17),e=g.n(t),a=g(96),r=g.n(a),n=function(){function A(){o()(this,A)}var I;return e()(A,null,[{key:"fetchRemoteData",value:(I=E()(C.a.mark((function A(I){var g;return C.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,r.a.get(I,{responseType:"arraybuffer"});case 3:return g=A.sent,A.abrupt("return",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A){return I.apply(this,arguments)})},{key:"string2Uint8Data",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}},{key:"uint8Data2String",value:function(A){return String.fromCharCode.apply(String,A)}},{key:"parseMultiFile",value:function(I){var g=A.uint8Data2String(I).split("\n"),B=[],C=0;return g.forEach((function(A){if((A=A.trim())&&!A.startsWith("#"))switch(C){case 0:return+A,void(C=1);case 1:A.match(/^\d+$/)||B.push(A);case 2:case 3:case 4:return void C++;case 5:return void(C=1)}})),B}}]),A}()},function(A,I,g){"use strict";var B=g(27),C=Object.keys||function(A){var I=[];for(var g in A)I.push(g);return I};A.exports=a;var Q=Object.create(g(22));Q.inherits=g(0);var E=g(51),i=g(36);Q.inherits(a,E);for(var o=C(i.prototype),t=0;t<o.length;t++){var e=o[t];a.prototype[e]||(a.prototype[e]=i.prototype[e])}function a(A){if(!(this instanceof a))return new a(A);E.call(this,A),i.call(this,A),A&&!1===A.readable&&(this.readable=!1),A&&!1===A.writable&&(this.writable=!1),this.allowHalfOpen=!0,A&&!1===A.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",r)}function r(){this.allowHalfOpen||this._writableState.ended||B.nextTick(n,this)}function n(A){A.end()}Object.defineProperty(a.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(a.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(A){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=A,this._writableState.destroyed=A)}}),a.prototype._destroy=function(A,I){this.push(null),this.end(),B.nextTick(I,A)}},function(A,I){function g(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(A,B.key,B)}}A.exports=function(A,I,B){return I&&g(A.prototype,I),B&&g(A,B),A}},function(A,I,g){"use strict";(function(I,B){var C=g(1).Buffer,Q=I.crypto||I.msCrypto;Q&&Q.getRandomValues?A.exports=function(A,I){if(A>4294967295)throw new RangeError("requested too many random bytes");var g=C.allocUnsafe(A);if(A>0)if(A>65536)for(var E=0;E<A;E+=65536)Q.getRandomValues(g.slice(E,E+65536));else Q.getRandomValues(g);if("function"==typeof I)return B.nextTick((function(){I(null,g)}));return g}:A.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")}}).call(this,g(11),g(9))},function(A,I,g){var B=g(1).Buffer;function C(A,I){this._block=B.alloc(A),this._finalSize=I,this._blockSize=A,this._len=0}C.prototype.update=function(A,I){"string"==typeof A&&(I=I||"utf8",A=B.from(A,I));for(var g=this._block,C=this._blockSize,Q=A.length,E=this._len,i=0;i<Q;){for(var o=E%C,t=Math.min(Q-i,C-o),e=0;e<t;e++)g[o+e]=A[i+e];i+=t,(E+=t)%C==0&&this._update(g)}return this._len+=Q,this},C.prototype.digest=function(A){var I=this._len%this._blockSize;this._block[I]=128,this._block.fill(0,I+1),I>=this._finalSize&&(this._update(this._block),this._block.fill(0));var g=8*this._len;if(g<=4294967295)this._block.writeUInt32BE(g,this._blockSize-4);else{var B=(4294967295&g)>>>0,C=(g-B)/4294967296;this._block.writeUInt32BE(C,this._blockSize-8),this._block.writeUInt32BE(B,this._blockSize-4)}this._update(this._block);var Q=this._hash();return A?Q.toString(A):Q},C.prototype._update=function(){throw new Error("_update must be implemented by subclass")},A.exports=C},function(A,I){A.exports=function(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}},function(A,I,g){"use strict";var B=g(0),C=g(32),Q=g(38),E=g(39),i=g(14);function o(A){i.call(this,"digest"),this._hash=A}B(o,i),o.prototype._update=function(A){this._hash.update(A)},o.prototype._final=function(){return this._hash.digest()},A.exports=function(A){return"md5"===(A=A.toLowerCase())?new C:"rmd160"===A||"ripemd160"===A?new Q:new o(E(A))}},function(A,I,g){(function(A){function g(A){return Object.prototype.toString.call(A)}I.isArray=function(A){return Array.isArray?Array.isArray(A):"[object Array]"===g(A)},I.isBoolean=function(A){return"boolean"==typeof A},I.isNull=function(A){return null===A},I.isNullOrUndefined=function(A){return null==A},I.isNumber=function(A){return"number"==typeof A},I.isString=function(A){return"string"==typeof A},I.isSymbol=function(A){return"symbol"==typeof A},I.isUndefined=function(A){return void 0===A},I.isRegExp=function(A){return"[object RegExp]"===g(A)},I.isObject=function(A){return"object"==typeof A&&null!==A},I.isDate=function(A){return"[object Date]"===g(A)},I.isError=function(A){return"[object Error]"===g(A)||A instanceof Error},I.isFunction=function(A){return"function"==typeof A},I.isPrimitive=function(A){return null===A||"boolean"==typeof A||"number"==typeof A||"string"==typeof A||"symbol"==typeof A||void 0===A},I.isBuffer=A.isBuffer}).call(this,g(4).Buffer)},function(A,I,g){(function(I){A.exports=function(A,g){for(var B=Math.min(A.length,g.length),C=new I(B),Q=0;Q<B;++Q)C[Q]=A[Q]^g[Q];return C}}).call(this,g(4).Buffer)},function(A,I,g){"use strict";var B=g(12),C=g(7);function Q(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}I.BlockHash=Q,Q.prototype.update=function(A,I){if(A=B.toArray(A,I),this.pending?this.pending=this.pending.concat(A):this.pending=A,this.pendingTotal+=A.length,this.pending.length>=this._delta8){var g=(A=this.pending).length%this._delta8;this.pending=A.slice(A.length-g,A.length),0===this.pending.length&&(this.pending=null),A=B.join32(A,0,A.length-g,this.endian);for(var C=0;C<A.length;C+=this._delta32)this._update(A,C,C+this._delta32)}return this},Q.prototype.digest=function(A){return this.update(this._pad()),C(null===this.pending),this._digest(A)},Q.prototype._pad=function(){var A=this.pendingTotal,I=this._delta8,g=I-(A+this.padLength)%I,B=new Array(g+this.padLength);B[0]=128;for(var C=1;C<g;C++)B[C]=0;if(A<<=3,"big"===this.endian){for(var Q=8;Q<this.padLength;Q++)B[C++]=0;B[C++]=0,B[C++]=0,B[C++]=0,B[C++]=0,B[C++]=A>>>24&255,B[C++]=A>>>16&255,B[C++]=A>>>8&255,B[C++]=255&A}else for(B[C++]=255&A,B[C++]=A>>>8&255,B[C++]=A>>>16&255,B[C++]=A>>>24&255,B[C++]=0,B[C++]=0,B[C++]=0,B[C++]=0,Q=8;Q<this.padLength;Q++)B[C++]=0;return B}},function(A,I,g){var B=I;B.bignum=g(3),B.define=g(163).define,B.base=g(26),B.constants=g(79),B.decoders=g(168),B.encoders=g(170)},function(A,I,g){var B=I;B.Reporter=g(165).Reporter,B.DecoderBuffer=g(78).DecoderBuffer,B.EncoderBuffer=g(78).EncoderBuffer,B.Node=g(166)},function(A,I,g){"use strict";(function(I){void 0===I||!I.version||0===I.version.indexOf("v0.")||0===I.version.indexOf("v1.")&&0!==I.version.indexOf("v1.8.")?A.exports={nextTick:function(A,g,B,C){if("function"!=typeof A)throw new TypeError('"callback" argument must be a function');var Q,E,i=arguments.length;switch(i){case 0:case 1:return I.nextTick(A);case 2:return I.nextTick((function(){A.call(null,g)}));case 3:return I.nextTick((function(){A.call(null,g,B)}));case 4:return I.nextTick((function(){A.call(null,g,B,C)}));default:for(Q=new Array(i-1),E=0;E<Q.length;)Q[E++]=arguments[E];return I.nextTick((function(){A.apply(null,Q)}))}}}:A.exports=I}).call(this,g(9))},function(A,I,g){var B=g(1).Buffer;function C(A){B.isBuffer(A)||(A=B.from(A));for(var I=A.length/4|0,g=new Array(I),C=0;C<I;C++)g[C]=A.readUInt32BE(4*C);return g}function Q(A){for(;0<A.length;A++)A[0]=0}function E(A,I,g,B,C){for(var Q,E,i,o,t=g[0],e=g[1],a=g[2],r=g[3],n=A[0]^I[0],s=A[1]^I[1],h=A[2]^I[2],D=A[3]^I[3],c=4,w=1;w<C;w++)Q=t[n>>>24]^e[s>>>16&255]^a[h>>>8&255]^r[255&D]^I[c++],E=t[s>>>24]^e[h>>>16&255]^a[D>>>8&255]^r[255&n]^I[c++],i=t[h>>>24]^e[D>>>16&255]^a[n>>>8&255]^r[255&s]^I[c++],o=t[D>>>24]^e[n>>>16&255]^a[s>>>8&255]^r[255&h]^I[c++],n=Q,s=E,h=i,D=o;return Q=(B[n>>>24]<<24|B[s>>>16&255]<<16|B[h>>>8&255]<<8|B[255&D])^I[c++],E=(B[s>>>24]<<24|B[h>>>16&255]<<16|B[D>>>8&255]<<8|B[255&n])^I[c++],i=(B[h>>>24]<<24|B[D>>>16&255]<<16|B[n>>>8&255]<<8|B[255&s])^I[c++],o=(B[D>>>24]<<24|B[n>>>16&255]<<16|B[s>>>8&255]<<8|B[255&h])^I[c++],[Q>>>=0,E>>>=0,i>>>=0,o>>>=0]}var i=[0,1,2,4,8,16,32,64,128,27,54],o=function(){for(var A=new Array(256),I=0;I<256;I++)A[I]=I<128?I<<1:I<<1^283;for(var g=[],B=[],C=[[],[],[],[]],Q=[[],[],[],[]],E=0,i=0,o=0;o<256;++o){var t=i^i<<1^i<<2^i<<3^i<<4;t=t>>>8^255&t^99,g[E]=t,B[t]=E;var e=A[E],a=A[e],r=A[a],n=257*A[t]^16843008*t;C[0][E]=n<<24|n>>>8,C[1][E]=n<<16|n>>>16,C[2][E]=n<<8|n>>>24,C[3][E]=n,n=16843009*r^65537*a^257*e^16843008*E,Q[0][t]=n<<24|n>>>8,Q[1][t]=n<<16|n>>>16,Q[2][t]=n<<8|n>>>24,Q[3][t]=n,0===E?E=i=1:(E=e^A[A[A[r^e]]],i^=A[A[i]])}return{SBOX:g,INV_SBOX:B,SUB_MIX:C,INV_SUB_MIX:Q}}();function t(A){this._key=C(A),this._reset()}t.blockSize=16,t.keySize=32,t.prototype.blockSize=t.blockSize,t.prototype.keySize=t.keySize,t.prototype._reset=function(){for(var A=this._key,I=A.length,g=I+6,B=4*(g+1),C=[],Q=0;Q<I;Q++)C[Q]=A[Q];for(Q=I;Q<B;Q++){var E=C[Q-1];Q%I==0?(E=E<<8|E>>>24,E=o.SBOX[E>>>24]<<24|o.SBOX[E>>>16&255]<<16|o.SBOX[E>>>8&255]<<8|o.SBOX[255&E],E^=i[Q/I|0]<<24):I>6&&Q%I==4&&(E=o.SBOX[E>>>24]<<24|o.SBOX[E>>>16&255]<<16|o.SBOX[E>>>8&255]<<8|o.SBOX[255&E]),C[Q]=C[Q-I]^E}for(var t=[],e=0;e<B;e++){var a=B-e,r=C[a-(e%4?0:4)];t[e]=e<4||a<=4?r:o.INV_SUB_MIX[0][o.SBOX[r>>>24]]^o.INV_SUB_MIX[1][o.SBOX[r>>>16&255]]^o.INV_SUB_MIX[2][o.SBOX[r>>>8&255]]^o.INV_SUB_MIX[3][o.SBOX[255&r]]}this._nRounds=g,this._keySchedule=C,this._invKeySchedule=t},t.prototype.encryptBlockRaw=function(A){return E(A=C(A),this._keySchedule,o.SUB_MIX,o.SBOX,this._nRounds)},t.prototype.encryptBlock=function(A){var I=this.encryptBlockRaw(A),g=B.allocUnsafe(16);return g.writeUInt32BE(I[0],0),g.writeUInt32BE(I[1],4),g.writeUInt32BE(I[2],8),g.writeUInt32BE(I[3],12),g},t.prototype.decryptBlock=function(A){var I=(A=C(A))[1];A[1]=A[3],A[3]=I;var g=E(A,this._invKeySchedule,o.INV_SUB_MIX,o.INV_SBOX,this._nRounds),Q=B.allocUnsafe(16);return Q.writeUInt32BE(g[0],0),Q.writeUInt32BE(g[3],4),Q.writeUInt32BE(g[2],8),Q.writeUInt32BE(g[1],12),Q},t.prototype.scrub=function(){Q(this._keySchedule),Q(this._invKeySchedule),Q(this._key)},A.exports.AES=t},function(A,I,g){var B=g(1).Buffer,C=g(32);A.exports=function(A,I,g,Q){if(B.isBuffer(A)||(A=B.from(A,"binary")),I&&(B.isBuffer(I)||(I=B.from(I,"binary")),8!==I.length))throw new RangeError("salt should be Buffer with 8 byte length");for(var E=g/8,i=B.alloc(E),o=B.alloc(Q||0),t=B.alloc(0);E>0||Q>0;){var e=new C;e.update(t),e.update(A),I&&e.update(I),t=e.digest();var a=0;if(E>0){var r=i.length-E;a=Math.min(E,t.length),t.copy(i,r,0,a),E-=a}if(a<t.length&&Q>0){var n=o.length-Q,s=Math.min(Q,t.length-a);t.copy(o,n,a,a+s),Q-=s}}return t.fill(0),{key:i,iv:o}}},function(A,I,g){"use strict";var B=g(3),C=g(8),Q=C.getNAF,E=C.getJSF,i=C.assert;function o(A,I){this.type=A,this.p=new B(I.p,16),this.red=I.prime?B.red(I.prime):B.mont(this.p),this.zero=new B(0).toRed(this.red),this.one=new B(1).toRed(this.red),this.two=new B(2).toRed(this.red),this.n=I.n&&new B(I.n,16),this.g=I.g&&this.pointFromJSON(I.g,I.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var g=this.n&&this.p.div(this.n);!g||g.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function t(A,I){this.curve=A,this.type=I,this.precomputed=null}A.exports=o,o.prototype.point=function(){throw new Error("Not implemented")},o.prototype.validate=function(){throw new Error("Not implemented")},o.prototype._fixedNafMul=function(A,I){i(A.precomputed);var g=A._getDoubles(),B=Q(I,1,this._bitLength),C=(1<<g.step+1)-(g.step%2==0?2:1);C/=3;for(var E=[],o=0;o<B.length;o+=g.step){var t=0;for(I=o+g.step-1;I>=o;I--)t=(t<<1)+B[I];E.push(t)}for(var e=this.jpoint(null,null,null),a=this.jpoint(null,null,null),r=C;r>0;r--){for(o=0;o<E.length;o++){(t=E[o])===r?a=a.mixedAdd(g.points[o]):t===-r&&(a=a.mixedAdd(g.points[o].neg()))}e=e.add(a)}return e.toP()},o.prototype._wnafMul=function(A,I){var g=4,B=A._getNAFPoints(g);g=B.wnd;for(var C=B.points,E=Q(I,g,this._bitLength),o=this.jpoint(null,null,null),t=E.length-1;t>=0;t--){for(I=0;t>=0&&0===E[t];t--)I++;if(t>=0&&I++,o=o.dblp(I),t<0)break;var e=E[t];i(0!==e),o="affine"===A.type?e>0?o.mixedAdd(C[e-1>>1]):o.mixedAdd(C[-e-1>>1].neg()):e>0?o.add(C[e-1>>1]):o.add(C[-e-1>>1].neg())}return"affine"===A.type?o.toP():o},o.prototype._wnafMulAdd=function(A,I,g,B,C){for(var i=this._wnafT1,o=this._wnafT2,t=this._wnafT3,e=0,a=0;a<B;a++){var r=(u=I[a])._getNAFPoints(A);i[a]=r.wnd,o[a]=r.points}for(a=B-1;a>=1;a-=2){var n=a-1,s=a;if(1===i[n]&&1===i[s]){var h=[I[n],null,null,I[s]];0===I[n].y.cmp(I[s].y)?(h[1]=I[n].add(I[s]),h[2]=I[n].toJ().mixedAdd(I[s].neg())):0===I[n].y.cmp(I[s].y.redNeg())?(h[1]=I[n].toJ().mixedAdd(I[s]),h[2]=I[n].add(I[s].neg())):(h[1]=I[n].toJ().mixedAdd(I[s]),h[2]=I[n].toJ().mixedAdd(I[s].neg()));var D=[-3,-1,-5,-7,0,7,5,1,3],c=E(g[n],g[s]);e=Math.max(c[0].length,e),t[n]=new Array(e),t[s]=new Array(e);for(var w=0;w<e;w++){var f=0|c[0][w],d=0|c[1][w];t[n][w]=D[3*(f+1)+(d+1)],t[s][w]=0,o[n]=h}}else t[n]=Q(g[n],i[n],this._bitLength),t[s]=Q(g[s],i[s],this._bitLength),e=Math.max(t[n].length,e),e=Math.max(t[s].length,e)}var F=this.jpoint(null,null,null),G=this._wnafT4;for(a=e;a>=0;a--){for(var y=0;a>=0;){var R=!0;for(w=0;w<B;w++)G[w]=0|t[w][a],0!==G[w]&&(R=!1);if(!R)break;y++,a--}if(a>=0&&y++,F=F.dblp(y),a<0)break;for(w=0;w<B;w++){var u,U=G[w];0!==U&&(U>0?u=o[w][U-1>>1]:U<0&&(u=o[w][-U-1>>1].neg()),F="affine"===u.type?F.mixedAdd(u):F.add(u))}}for(a=0;a<B;a++)o[a]=null;return C?F:F.toP()},o.BasePoint=t,t.prototype.eq=function(){throw new Error("Not implemented")},t.prototype.validate=function(){return this.curve.validate(this)},o.prototype.decodePoint=function(A,I){A=C.toArray(A,I);var g=this.p.byteLength();if((4===A[0]||6===A[0]||7===A[0])&&A.length-1==2*g)return 6===A[0]?i(A[A.length-1]%2==0):7===A[0]&&i(A[A.length-1]%2==1),this.point(A.slice(1,1+g),A.slice(1+g,1+2*g));if((2===A[0]||3===A[0])&&A.length-1===g)return this.pointFromX(A.slice(1,1+g),3===A[0]);throw new Error("Unknown point format")},t.prototype.encodeCompressed=function(A){return this.encode(A,!0)},t.prototype._encode=function(A){var I=this.curve.p.byteLength(),g=this.getX().toArray("be",I);return A?[this.getY().isEven()?2:3].concat(g):[4].concat(g,this.getY().toArray("be",I))},t.prototype.encode=function(A,I){return C.encode(this._encode(I),A)},t.prototype.precompute=function(A){if(this.precomputed)return this;var I={doubles:null,naf:null,beta:null};return I.naf=this._getNAFPoints(8),I.doubles=this._getDoubles(4,A),I.beta=this._getBeta(),this.precomputed=I,this},t.prototype._hasDoubles=function(A){if(!this.precomputed)return!1;var I=this.precomputed.doubles;return!!I&&I.points.length>=Math.ceil((A.bitLength()+1)/I.step)},t.prototype._getDoubles=function(A,I){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var g=[this],B=this,C=0;C<I;C+=A){for(var Q=0;Q<A;Q++)B=B.dbl();g.push(B)}return{step:A,points:g}},t.prototype._getNAFPoints=function(A){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var I=[this],g=(1<<A)-1,B=1===g?null:this.dbl(),C=1;C<g;C++)I[C]=I[C-1].add(B);return{wnd:A,points:I}},t.prototype._getBeta=function(){return null},t.prototype.dblp=function(A){for(var I=this,g=0;g<A;g++)I=I.dbl();return I}},function(A,I,g){var B=g(162),C=g(173),Q=g(174),E=g(41),i=g(60),o=g(1).Buffer;function t(A){var I;"object"!=typeof A||o.isBuffer(A)||(I=A.passphrase,A=A.key),"string"==typeof A&&(A=o.from(A));var g,t,e=Q(A,I),a=e.tag,r=e.data;switch(a){case"CERTIFICATE":t=B.certificate.decode(r,"der").tbsCertificate.subjectPublicKeyInfo;case"PUBLIC KEY":switch(t||(t=B.PublicKey.decode(r,"der")),g=t.algorithm.algorithm.join(".")){case"1.2.840.113549.1.1.1":return B.RSAPublicKey.decode(t.subjectPublicKey.data,"der");case"1.2.840.10045.2.1":return t.subjectPrivateKey=t.subjectPublicKey,{type:"ec",data:t};case"1.2.840.10040.4.1":return t.algorithm.params.pub_key=B.DSAparam.decode(t.subjectPublicKey.data,"der"),{type:"dsa",data:t.algorithm.params};default:throw new Error("unknown key id "+g)}throw new Error("unknown key type "+a);case"ENCRYPTED PRIVATE KEY":r=function(A,I){var g=A.algorithm.decrypt.kde.kdeparams.salt,B=parseInt(A.algorithm.decrypt.kde.kdeparams.iters.toString(),10),Q=C[A.algorithm.decrypt.cipher.algo.join(".")],t=A.algorithm.decrypt.cipher.iv,e=A.subjectPrivateKey,a=parseInt(Q.split("-")[1],10)/8,r=i.pbkdf2Sync(I,g,B,a,"sha1"),n=E.createDecipheriv(Q,r,t),s=[];return s.push(n.update(e)),s.push(n.final()),o.concat(s)}(r=B.EncryptedPrivateKey.decode(r,"der"),I);case"PRIVATE KEY":switch(g=(t=B.PrivateKey.decode(r,"der")).algorithm.algorithm.join(".")){case"1.2.840.113549.1.1.1":return B.RSAPrivateKey.decode(t.subjectPrivateKey,"der");case"1.2.840.10045.2.1":return{curve:t.algorithm.curve,privateKey:B.ECPrivateKey.decode(t.subjectPrivateKey,"der").privateKey};case"1.2.840.10040.4.1":return t.algorithm.params.priv_key=B.DSAparam.decode(t.subjectPrivateKey,"der"),{type:"dsa",params:t.algorithm.params};default:throw new Error("unknown key id "+g)}throw new Error("unknown key type "+a);case"RSA PUBLIC KEY":return B.RSAPublicKey.decode(r,"der");case"RSA PRIVATE KEY":return B.RSAPrivateKey.decode(r,"der");case"DSA PRIVATE KEY":return{type:"dsa",params:B.DSAPrivateKey.decode(r,"der")};case"EC PRIVATE KEY":return{curve:(r=B.ECPrivateKey.decode(r,"der")).parameters.value,privateKey:r.privateKey};default:throw new Error("unknown key type "+a)}}A.exports=t,t.signature=B.signature},function(A,I,g){"use strict";var B=g(0),C=g(50),Q=g(1).Buffer,E=new Array(16);function i(){C.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function o(A,I){return A<<I|A>>>32-I}function t(A,I,g,B,C,Q,E){return o(A+(I&g|~I&B)+C+Q|0,E)+I|0}function e(A,I,g,B,C,Q,E){return o(A+(I&B|g&~B)+C+Q|0,E)+I|0}function a(A,I,g,B,C,Q,E){return o(A+(I^g^B)+C+Q|0,E)+I|0}function r(A,I,g,B,C,Q,E){return o(A+(g^(I|~B))+C+Q|0,E)+I|0}B(i,C),i.prototype._update=function(){for(var A=E,I=0;I<16;++I)A[I]=this._block.readInt32LE(4*I);var g=this._a,B=this._b,C=this._c,Q=this._d;g=t(g,B,C,Q,A[0],3614090360,7),Q=t(Q,g,B,C,A[1],3905402710,12),C=t(C,Q,g,B,A[2],606105819,17),B=t(B,C,Q,g,A[3],3250441966,22),g=t(g,B,C,Q,A[4],4118548399,7),Q=t(Q,g,B,C,A[5],1200080426,12),C=t(C,Q,g,B,A[6],2821735955,17),B=t(B,C,Q,g,A[7],4249261313,22),g=t(g,B,C,Q,A[8],1770035416,7),Q=t(Q,g,B,C,A[9],2336552879,12),C=t(C,Q,g,B,A[10],4294925233,17),B=t(B,C,Q,g,A[11],2304563134,22),g=t(g,B,C,Q,A[12],1804603682,7),Q=t(Q,g,B,C,A[13],4254626195,12),C=t(C,Q,g,B,A[14],2792965006,17),g=e(g,B=t(B,C,Q,g,A[15],1236535329,22),C,Q,A[1],4129170786,5),Q=e(Q,g,B,C,A[6],3225465664,9),C=e(C,Q,g,B,A[11],643717713,14),B=e(B,C,Q,g,A[0],3921069994,20),g=e(g,B,C,Q,A[5],3593408605,5),Q=e(Q,g,B,C,A[10],38016083,9),C=e(C,Q,g,B,A[15],3634488961,14),B=e(B,C,Q,g,A[4],3889429448,20),g=e(g,B,C,Q,A[9],568446438,5),Q=e(Q,g,B,C,A[14],3275163606,9),C=e(C,Q,g,B,A[3],4107603335,14),B=e(B,C,Q,g,A[8],1163531501,20),g=e(g,B,C,Q,A[13],2850285829,5),Q=e(Q,g,B,C,A[2],4243563512,9),C=e(C,Q,g,B,A[7],1735328473,14),g=a(g,B=e(B,C,Q,g,A[12],2368359562,20),C,Q,A[5],4294588738,4),Q=a(Q,g,B,C,A[8],2272392833,11),C=a(C,Q,g,B,A[11],1839030562,16),B=a(B,C,Q,g,A[14],4259657740,23),g=a(g,B,C,Q,A[1],2763975236,4),Q=a(Q,g,B,C,A[4],1272893353,11),C=a(C,Q,g,B,A[7],4139469664,16),B=a(B,C,Q,g,A[10],3200236656,23),g=a(g,B,C,Q,A[13],681279174,4),Q=a(Q,g,B,C,A[0],3936430074,11),C=a(C,Q,g,B,A[3],3572445317,16),B=a(B,C,Q,g,A[6],76029189,23),g=a(g,B,C,Q,A[9],3654602809,4),Q=a(Q,g,B,C,A[12],3873151461,11),C=a(C,Q,g,B,A[15],530742520,16),g=r(g,B=a(B,C,Q,g,A[2],3299628645,23),C,Q,A[0],4096336452,6),Q=r(Q,g,B,C,A[7],1126891415,10),C=r(C,Q,g,B,A[14],2878612391,15),B=r(B,C,Q,g,A[5],4237533241,21),g=r(g,B,C,Q,A[12],1700485571,6),Q=r(Q,g,B,C,A[3],2399980690,10),C=r(C,Q,g,B,A[10],4293915773,15),B=r(B,C,Q,g,A[1],2240044497,21),g=r(g,B,C,Q,A[8],1873313359,6),Q=r(Q,g,B,C,A[15],4264355552,10),C=r(C,Q,g,B,A[6],2734768916,15),B=r(B,C,Q,g,A[13],1309151649,21),g=r(g,B,C,Q,A[4],4149444226,6),Q=r(Q,g,B,C,A[11],3174756917,10),C=r(C,Q,g,B,A[2],718787259,15),B=r(B,C,Q,g,A[9],3951481745,21),this._a=this._a+g|0,this._b=this._b+B|0,this._c=this._c+C|0,this._d=this._d+Q|0},i.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var A=Q.allocUnsafe(16);return A.writeInt32LE(this._a,0),A.writeInt32LE(this._b,4),A.writeInt32LE(this._c,8),A.writeInt32LE(this._d,12),A},A.exports=i},function(A,I,g){A.exports=C;var B=g(34).EventEmitter;function C(){B.call(this)}g(0)(C,B),C.Readable=g(35),C.Writable=g(110),C.Duplex=g(111),C.Transform=g(112),C.PassThrough=g(113),C.Stream=C,C.prototype.pipe=function(A,I){var g=this;function C(I){A.writable&&!1===A.write(I)&&g.pause&&g.pause()}function Q(){g.readable&&g.resume&&g.resume()}g.on("data",C),A.on("drain",Q),A._isStdio||I&&!1===I.end||(g.on("end",i),g.on("close",o));var E=!1;function i(){E||(E=!0,A.end())}function o(){E||(E=!0,"function"==typeof A.destroy&&A.destroy())}function t(A){if(e(),0===B.listenerCount(this,"error"))throw A}function e(){g.removeListener("data",C),A.removeListener("drain",Q),g.removeListener("end",i),g.removeListener("close",o),g.removeListener("error",t),A.removeListener("error",t),g.removeListener("end",e),g.removeListener("close",e),A.removeListener("close",e)}return g.on("error",t),A.on("error",t),g.on("end",e),g.on("close",e),A.on("close",e),A.emit("pipe",g),A}},function(A,I,g){"use strict";var B,C="object"==typeof Reflect?Reflect:null,Q=C&&"function"==typeof C.apply?C.apply:function(A,I,g){return Function.prototype.apply.call(A,I,g)};B=C&&"function"==typeof C.ownKeys?C.ownKeys:Object.getOwnPropertySymbols?function(A){return Object.getOwnPropertyNames(A).concat(Object.getOwnPropertySymbols(A))}:function(A){return Object.getOwnPropertyNames(A)};var E=Number.isNaN||function(A){return A!=A};function i(){i.init.call(this)}A.exports=i,i.EventEmitter=i,i.prototype._events=void 0,i.prototype._eventsCount=0,i.prototype._maxListeners=void 0;var o=10;function t(A){if("function"!=typeof A)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof A)}function e(A){return void 0===A._maxListeners?i.defaultMaxListeners:A._maxListeners}function a(A,I,g,B){var C,Q,E,i;if(t(g),void 0===(Q=A._events)?(Q=A._events=Object.create(null),A._eventsCount=0):(void 0!==Q.newListener&&(A.emit("newListener",I,g.listener?g.listener:g),Q=A._events),E=Q[I]),void 0===E)E=Q[I]=g,++A._eventsCount;else if("function"==typeof E?E=Q[I]=B?[g,E]:[E,g]:B?E.unshift(g):E.push(g),(C=e(A))>0&&E.length>C&&!E.warned){E.warned=!0;var o=new Error("Possible EventEmitter memory leak detected. "+E.length+" "+String(I)+" listeners added. Use emitter.setMaxListeners() to increase limit");o.name="MaxListenersExceededWarning",o.emitter=A,o.type=I,o.count=E.length,i=o,console&&console.warn&&console.warn(i)}return A}function r(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function n(A,I,g){var B={fired:!1,wrapFn:void 0,target:A,type:I,listener:g},C=r.bind(B);return C.listener=g,B.wrapFn=C,C}function s(A,I,g){var B=A._events;if(void 0===B)return[];var C=B[I];return void 0===C?[]:"function"==typeof C?g?[C.listener||C]:[C]:g?function(A){for(var I=new Array(A.length),g=0;g<I.length;++g)I[g]=A[g].listener||A[g];return I}(C):D(C,C.length)}function h(A){var I=this._events;if(void 0!==I){var g=I[A];if("function"==typeof g)return 1;if(void 0!==g)return g.length}return 0}function D(A,I){for(var g=new Array(I),B=0;B<I;++B)g[B]=A[B];return g}Object.defineProperty(i,"defaultMaxListeners",{enumerable:!0,get:function(){return o},set:function(A){if("number"!=typeof A||A<0||E(A))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+A+".");o=A}}),i.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},i.prototype.setMaxListeners=function(A){if("number"!=typeof A||A<0||E(A))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+A+".");return this._maxListeners=A,this},i.prototype.getMaxListeners=function(){return e(this)},i.prototype.emit=function(A){for(var I=[],g=1;g<arguments.length;g++)I.push(arguments[g]);var B="error"===A,C=this._events;if(void 0!==C)B=B&&void 0===C.error;else if(!B)return!1;if(B){var E;if(I.length>0&&(E=I[0]),E instanceof Error)throw E;var i=new Error("Unhandled error."+(E?" ("+E.message+")":""));throw i.context=E,i}var o=C[A];if(void 0===o)return!1;if("function"==typeof o)Q(o,this,I);else{var t=o.length,e=D(o,t);for(g=0;g<t;++g)Q(e[g],this,I)}return!0},i.prototype.addListener=function(A,I){return a(this,A,I,!1)},i.prototype.on=i.prototype.addListener,i.prototype.prependListener=function(A,I){return a(this,A,I,!0)},i.prototype.once=function(A,I){return t(I),this.on(A,n(this,A,I)),this},i.prototype.prependOnceListener=function(A,I){return t(I),this.prependListener(A,n(this,A,I)),this},i.prototype.removeListener=function(A,I){var g,B,C,Q,E;if(t(I),void 0===(B=this._events))return this;if(void 0===(g=B[A]))return this;if(g===I||g.listener===I)0==--this._eventsCount?this._events=Object.create(null):(delete B[A],B.removeListener&&this.emit("removeListener",A,g.listener||I));else if("function"!=typeof g){for(C=-1,Q=g.length-1;Q>=0;Q--)if(g[Q]===I||g[Q].listener===I){E=g[Q].listener,C=Q;break}if(C<0)return this;0===C?g.shift():function(A,I){for(;I+1<A.length;I++)A[I]=A[I+1];A.pop()}(g,C),1===g.length&&(B[A]=g[0]),void 0!==B.removeListener&&this.emit("removeListener",A,E||I)}return this},i.prototype.off=i.prototype.removeListener,i.prototype.removeAllListeners=function(A){var I,g,B;if(void 0===(g=this._events))return this;if(void 0===g.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==g[A]&&(0==--this._eventsCount?this._events=Object.create(null):delete g[A]),this;if(0===arguments.length){var C,Q=Object.keys(g);for(B=0;B<Q.length;++B)"removeListener"!==(C=Q[B])&&this.removeAllListeners(C);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(I=g[A]))this.removeListener(A,I);else if(void 0!==I)for(B=I.length-1;B>=0;B--)this.removeListener(A,I[B]);return this},i.prototype.listeners=function(A){return s(this,A,!0)},i.prototype.rawListeners=function(A){return s(this,A,!1)},i.listenerCount=function(A,I){return"function"==typeof A.listenerCount?A.listenerCount(I):h.call(A,I)},i.prototype.listenerCount=h,i.prototype.eventNames=function(){return this._eventsCount>0?B(this._events):[]}},function(A,I,g){(I=A.exports=g(51)).Stream=I,I.Readable=I,I.Writable=g(36),I.Duplex=g(16),I.Transform=g(54),I.PassThrough=g(109)},function(A,I,g){"use strict";(function(I,B,C){var Q=g(27);function E(A){var I=this;this.next=null,this.entry=null,this.finish=function(){!function(A,I,g){var B=A.entry;A.entry=null;for(;B;){var C=B.callback;I.pendingcb--,C(g),B=B.next}I.corkedRequestsFree?I.corkedRequestsFree.next=A:I.corkedRequestsFree=A}(I,A)}}A.exports=w;var i,o=!I.browser&&["v0.10","v0.9."].indexOf(I.version.slice(0,5))>-1?B:Q.nextTick;w.WritableState=c;var t=Object.create(g(22));t.inherits=g(0);var e={deprecate:g(108)},a=g(52),r=g(1).Buffer,n=C.Uint8Array||function(){};var s,h=g(53);function D(){}function c(A,I){i=i||g(16),A=A||{};var B=I instanceof i;this.objectMode=!!A.objectMode,B&&(this.objectMode=this.objectMode||!!A.writableObjectMode);var C=A.highWaterMark,t=A.writableHighWaterMark,e=this.objectMode?16:16384;this.highWaterMark=C||0===C?C:B&&(t||0===t)?t:e,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var a=!1===A.decodeStrings;this.decodeStrings=!a,this.defaultEncoding=A.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(A){!function(A,I){var g=A._writableState,B=g.sync,C=g.writecb;if(function(A){A.writing=!1,A.writecb=null,A.length-=A.writelen,A.writelen=0}(g),I)!function(A,I,g,B,C){--I.pendingcb,g?(Q.nextTick(C,B),Q.nextTick(R,A,I),A._writableState.errorEmitted=!0,A.emit("error",B)):(C(B),A._writableState.errorEmitted=!0,A.emit("error",B),R(A,I))}(A,g,B,I,C);else{var E=G(g);E||g.corked||g.bufferProcessing||!g.bufferedRequest||F(A,g),B?o(d,A,g,E,C):d(A,g,E,C)}}(I,A)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new E(this)}function w(A){if(i=i||g(16),!(s.call(w,this)||this instanceof i))return new w(A);this._writableState=new c(A,this),this.writable=!0,A&&("function"==typeof A.write&&(this._write=A.write),"function"==typeof A.writev&&(this._writev=A.writev),"function"==typeof A.destroy&&(this._destroy=A.destroy),"function"==typeof A.final&&(this._final=A.final)),a.call(this)}function f(A,I,g,B,C,Q,E){I.writelen=B,I.writecb=E,I.writing=!0,I.sync=!0,g?A._writev(C,I.onwrite):A._write(C,Q,I.onwrite),I.sync=!1}function d(A,I,g,B){g||function(A,I){0===I.length&&I.needDrain&&(I.needDrain=!1,A.emit("drain"))}(A,I),I.pendingcb--,B(),R(A,I)}function F(A,I){I.bufferProcessing=!0;var g=I.bufferedRequest;if(A._writev&&g&&g.next){var B=I.bufferedRequestCount,C=new Array(B),Q=I.corkedRequestsFree;Q.entry=g;for(var i=0,o=!0;g;)C[i]=g,g.isBuf||(o=!1),g=g.next,i+=1;C.allBuffers=o,f(A,I,!0,I.length,C,"",Q.finish),I.pendingcb++,I.lastBufferedRequest=null,Q.next?(I.corkedRequestsFree=Q.next,Q.next=null):I.corkedRequestsFree=new E(I),I.bufferedRequestCount=0}else{for(;g;){var t=g.chunk,e=g.encoding,a=g.callback;if(f(A,I,!1,I.objectMode?1:t.length,t,e,a),g=g.next,I.bufferedRequestCount--,I.writing)break}null===g&&(I.lastBufferedRequest=null)}I.bufferedRequest=g,I.bufferProcessing=!1}function G(A){return A.ending&&0===A.length&&null===A.bufferedRequest&&!A.finished&&!A.writing}function y(A,I){A._final((function(g){I.pendingcb--,g&&A.emit("error",g),I.prefinished=!0,A.emit("prefinish"),R(A,I)}))}function R(A,I){var g=G(I);return g&&(!function(A,I){I.prefinished||I.finalCalled||("function"==typeof A._final?(I.pendingcb++,I.finalCalled=!0,Q.nextTick(y,A,I)):(I.prefinished=!0,A.emit("prefinish")))}(A,I),0===I.pendingcb&&(I.finished=!0,A.emit("finish"))),g}t.inherits(w,a),c.prototype.getBuffer=function(){for(var A=this.bufferedRequest,I=[];A;)I.push(A),A=A.next;return I},function(){try{Object.defineProperty(c.prototype,"buffer",{get:e.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(A){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(s=Function.prototype[Symbol.hasInstance],Object.defineProperty(w,Symbol.hasInstance,{value:function(A){return!!s.call(this,A)||this===w&&(A&&A._writableState instanceof c)}})):s=function(A){return A instanceof this},w.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},w.prototype.write=function(A,I,g){var B,C=this._writableState,E=!1,i=!C.objectMode&&(B=A,r.isBuffer(B)||B instanceof n);return i&&!r.isBuffer(A)&&(A=function(A){return r.from(A)}(A)),"function"==typeof I&&(g=I,I=null),i?I="buffer":I||(I=C.defaultEncoding),"function"!=typeof g&&(g=D),C.ended?function(A,I){var g=new Error("write after end");A.emit("error",g),Q.nextTick(I,g)}(this,g):(i||function(A,I,g,B){var C=!0,E=!1;return null===g?E=new TypeError("May not write null values to stream"):"string"==typeof g||void 0===g||I.objectMode||(E=new TypeError("Invalid non-string/buffer chunk")),E&&(A.emit("error",E),Q.nextTick(B,E),C=!1),C}(this,C,A,g))&&(C.pendingcb++,E=function(A,I,g,B,C,Q){if(!g){var E=function(A,I,g){A.objectMode||!1===A.decodeStrings||"string"!=typeof I||(I=r.from(I,g));return I}(I,B,C);B!==E&&(g=!0,C="buffer",B=E)}var i=I.objectMode?1:B.length;I.length+=i;var o=I.length<I.highWaterMark;o||(I.needDrain=!0);if(I.writing||I.corked){var t=I.lastBufferedRequest;I.lastBufferedRequest={chunk:B,encoding:C,isBuf:g,callback:Q,next:null},t?t.next=I.lastBufferedRequest:I.bufferedRequest=I.lastBufferedRequest,I.bufferedRequestCount+=1}else f(A,I,!1,i,B,C,Q);return o}(this,C,i,A,I,g)),E},w.prototype.cork=function(){this._writableState.corked++},w.prototype.uncork=function(){var A=this._writableState;A.corked&&(A.corked--,A.writing||A.corked||A.finished||A.bufferProcessing||!A.bufferedRequest||F(this,A))},w.prototype.setDefaultEncoding=function(A){if("string"==typeof A&&(A=A.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((A+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+A);return this._writableState.defaultEncoding=A,this},Object.defineProperty(w.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),w.prototype._write=function(A,I,g){g(new Error("_write() is not implemented"))},w.prototype._writev=null,w.prototype.end=function(A,I,g){var B=this._writableState;"function"==typeof A?(g=A,A=null,I=null):"function"==typeof I&&(g=I,I=null),null!=A&&this.write(A,I),B.corked&&(B.corked=1,this.uncork()),B.ending||B.finished||function(A,I,g){I.ending=!0,R(A,I),g&&(I.finished?Q.nextTick(g):A.once("finish",g));I.ended=!0,A.writable=!1}(this,B,g)},Object.defineProperty(w.prototype,"destroyed",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(A){this._writableState&&(this._writableState.destroyed=A)}}),w.prototype.destroy=h.destroy,w.prototype._undestroy=h.undestroy,w.prototype._destroy=function(A,I){this.end(),I(A)}}).call(this,g(9),g(106).setImmediate,g(11))},function(A,I,g){"use strict";var B=g(1).Buffer,C=B.isEncoding||function(A){switch((A=""+A)&&A.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function Q(A){var I;switch(this.encoding=function(A){var I=function(A){if(!A)return"utf8";for(var I;;)switch(A){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return A;default:if(I)return;A=(""+A).toLowerCase(),I=!0}}(A);if("string"!=typeof I&&(B.isEncoding===C||!C(A)))throw new Error("Unknown encoding: "+A);return I||A}(A),this.encoding){case"utf16le":this.text=o,this.end=t,I=4;break;case"utf8":this.fillLast=i,I=4;break;case"base64":this.text=e,this.end=a,I=3;break;default:return this.write=r,void(this.end=n)}this.lastNeed=0,this.lastTotal=0,this.lastChar=B.allocUnsafe(I)}function E(A){return A<=127?0:A>>5==6?2:A>>4==14?3:A>>3==30?4:A>>6==2?-1:-2}function i(A){var I=this.lastTotal-this.lastNeed,g=function(A,I,g){if(128!=(192&I[0]))return A.lastNeed=0,"�";if(A.lastNeed>1&&I.length>1){if(128!=(192&I[1]))return A.lastNeed=1,"�";if(A.lastNeed>2&&I.length>2&&128!=(192&I[2]))return A.lastNeed=2,"�"}}(this,A);return void 0!==g?g:this.lastNeed<=A.length?(A.copy(this.lastChar,I,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(A.copy(this.lastChar,I,0,A.length),void(this.lastNeed-=A.length))}function o(A,I){if((A.length-I)%2==0){var g=A.toString("utf16le",I);if(g){var B=g.charCodeAt(g.length-1);if(B>=55296&&B<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=A[A.length-2],this.lastChar[1]=A[A.length-1],g.slice(0,-1)}return g}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=A[A.length-1],A.toString("utf16le",I,A.length-1)}function t(A){var I=A&&A.length?this.write(A):"";if(this.lastNeed){var g=this.lastTotal-this.lastNeed;return I+this.lastChar.toString("utf16le",0,g)}return I}function e(A,I){var g=(A.length-I)%3;return 0===g?A.toString("base64",I):(this.lastNeed=3-g,this.lastTotal=3,1===g?this.lastChar[0]=A[A.length-1]:(this.lastChar[0]=A[A.length-2],this.lastChar[1]=A[A.length-1]),A.toString("base64",I,A.length-g))}function a(A){var I=A&&A.length?this.write(A):"";return this.lastNeed?I+this.lastChar.toString("base64",0,3-this.lastNeed):I}function r(A){return A.toString(this.encoding)}function n(A){return A&&A.length?this.write(A):""}I.StringDecoder=Q,Q.prototype.write=function(A){if(0===A.length)return"";var I,g;if(this.lastNeed){if(void 0===(I=this.fillLast(A)))return"";g=this.lastNeed,this.lastNeed=0}else g=0;return g<A.length?I?I+this.text(A,g):this.text(A,g):I||""},Q.prototype.end=function(A){var I=A&&A.length?this.write(A):"";return this.lastNeed?I+"�":I},Q.prototype.text=function(A,I){var g=function(A,I,g){var B=I.length-1;if(B<g)return 0;var C=E(I[B]);if(C>=0)return C>0&&(A.lastNeed=C-1),C;if(--B<g||-2===C)return 0;if((C=E(I[B]))>=0)return C>0&&(A.lastNeed=C-2),C;if(--B<g||-2===C)return 0;if((C=E(I[B]))>=0)return C>0&&(2===C?C=0:A.lastNeed=C-3),C;return 0}(this,A,I);if(!this.lastNeed)return A.toString("utf8",I);this.lastTotal=g;var B=A.length-(g-this.lastNeed);return A.copy(this.lastChar,0,B),A.toString("utf8",I,B)},Q.prototype.fillLast=function(A){if(this.lastNeed<=A.length)return A.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);A.copy(this.lastChar,this.lastTotal-this.lastNeed,0,A.length),this.lastNeed-=A.length}},function(A,I,g){"use strict";var B=g(4).Buffer,C=g(0),Q=g(50),E=new Array(16),i=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],o=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],t=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],e=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],a=[0,1518500249,1859775393,2400959708,2840853838],r=[1352829926,1548603684,1836072691,2053994217,0];function n(){Q.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function s(A,I){return A<<I|A>>>32-I}function h(A,I,g,B,C,Q,E,i){return s(A+(I^g^B)+Q+E|0,i)+C|0}function D(A,I,g,B,C,Q,E,i){return s(A+(I&g|~I&B)+Q+E|0,i)+C|0}function c(A,I,g,B,C,Q,E,i){return s(A+((I|~g)^B)+Q+E|0,i)+C|0}function w(A,I,g,B,C,Q,E,i){return s(A+(I&B|g&~B)+Q+E|0,i)+C|0}function f(A,I,g,B,C,Q,E,i){return s(A+(I^(g|~B))+Q+E|0,i)+C|0}C(n,Q),n.prototype._update=function(){for(var A=E,I=0;I<16;++I)A[I]=this._block.readInt32LE(4*I);for(var g=0|this._a,B=0|this._b,C=0|this._c,Q=0|this._d,n=0|this._e,d=0|this._a,F=0|this._b,G=0|this._c,y=0|this._d,R=0|this._e,u=0;u<80;u+=1){var U,S;u<16?(U=h(g,B,C,Q,n,A[i[u]],a[0],t[u]),S=f(d,F,G,y,R,A[o[u]],r[0],e[u])):u<32?(U=D(g,B,C,Q,n,A[i[u]],a[1],t[u]),S=w(d,F,G,y,R,A[o[u]],r[1],e[u])):u<48?(U=c(g,B,C,Q,n,A[i[u]],a[2],t[u]),S=c(d,F,G,y,R,A[o[u]],r[2],e[u])):u<64?(U=w(g,B,C,Q,n,A[i[u]],a[3],t[u]),S=D(d,F,G,y,R,A[o[u]],r[3],e[u])):(U=f(g,B,C,Q,n,A[i[u]],a[4],t[u]),S=h(d,F,G,y,R,A[o[u]],r[4],e[u])),g=n,n=Q,Q=s(C,10),C=B,B=U,d=R,R=y,y=s(G,10),G=F,F=S}var M=this._b+C+y|0;this._b=this._c+Q+R|0,this._c=this._d+n+d|0,this._d=this._e+g+F|0,this._e=this._a+B+G|0,this._a=M},n.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var A=B.alloc?B.alloc(20):new B(20);return A.writeInt32LE(this._a,0),A.writeInt32LE(this._b,4),A.writeInt32LE(this._c,8),A.writeInt32LE(this._d,12),A.writeInt32LE(this._e,16),A},A.exports=n},function(A,I,g){(I=A.exports=function(A){A=A.toLowerCase();var g=I[A];if(!g)throw new Error(A+" is not supported (we accept pull requests)");return new g}).sha=g(114),I.sha1=g(115),I.sha224=g(116),I.sha256=g(55),I.sha384=g(117),I.sha512=g(56)},function(A,I,g){"use strict";var B=g(7);function C(A){this.options=A,this.type=this.options.type,this.blockSize=8,this._init(),this.buffer=new Array(this.blockSize),this.bufferOff=0}A.exports=C,C.prototype._init=function(){},C.prototype.update=function(A){return 0===A.length?[]:"decrypt"===this.type?this._updateDecrypt(A):this._updateEncrypt(A)},C.prototype._buffer=function(A,I){for(var g=Math.min(this.buffer.length-this.bufferOff,A.length-I),B=0;B<g;B++)this.buffer[this.bufferOff+B]=A[I+B];return this.bufferOff+=g,g},C.prototype._flushBuffer=function(A,I){return this._update(this.buffer,0,A,I),this.bufferOff=0,this.blockSize},C.prototype._updateEncrypt=function(A){var I=0,g=0,B=(this.bufferOff+A.length)/this.blockSize|0,C=new Array(B*this.blockSize);0!==this.bufferOff&&(I+=this._buffer(A,I),this.bufferOff===this.buffer.length&&(g+=this._flushBuffer(C,g)));for(var Q=A.length-(A.length-I)%this.blockSize;I<Q;I+=this.blockSize)this._update(A,I,C,g),g+=this.blockSize;for(;I<A.length;I++,this.bufferOff++)this.buffer[this.bufferOff]=A[I];return C},C.prototype._updateDecrypt=function(A){for(var I=0,g=0,B=Math.ceil((this.bufferOff+A.length)/this.blockSize)-1,C=new Array(B*this.blockSize);B>0;B--)I+=this._buffer(A,I),g+=this._flushBuffer(C,g);return I+=this._buffer(A,I),C},C.prototype.final=function(A){var I,g;return A&&(I=this.update(A)),g="encrypt"===this.type?this._finalEncrypt():this._finalDecrypt(),I?I.concat(g):g},C.prototype._pad=function(A,I){if(0===I)return!1;for(;I<A.length;)A[I++]=0;return!0},C.prototype._finalEncrypt=function(){if(!this._pad(this.buffer,this.bufferOff))return[];var A=new Array(this.blockSize);return this._update(this.buffer,0,A,0),A},C.prototype._unpad=function(A){return A},C.prototype._finalDecrypt=function(){B.equal(this.bufferOff,this.blockSize,"Not enough data to decrypt");var A=new Array(this.blockSize);return this._flushBuffer(A,0),this._unpad(A)}},function(A,I,g){var B=g(126),C=g(134),Q=g(68);I.createCipher=I.Cipher=B.createCipher,I.createCipheriv=I.Cipheriv=B.createCipheriv,I.createDecipher=I.Decipher=C.createDecipher,I.createDecipheriv=I.Decipheriv=C.createDecipheriv,I.listCiphers=I.getCiphers=function(){return Object.keys(Q)}},function(A,I,g){var B={ECB:g(127),CBC:g(128),CFB:g(129),CFB8:g(130),CFB1:g(131),OFB:g(132),CTR:g(66),GCM:g(66)},C=g(68);for(var Q in C)C[Q].module=B[C[Q].mode];A.exports=C},function(A,I,g){var B;function C(A){this.rand=A}if(A.exports=function(A){return B||(B=new C(null)),B.generate(A)},A.exports.Rand=C,C.prototype.generate=function(A){return this._rand(A)},C.prototype._rand=function(A){if(this.rand.getBytes)return this.rand.getBytes(A);for(var I=new Uint8Array(A),g=0;g<I.length;g++)I[g]=this.rand.getByte();return I},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?C.prototype._rand=function(A){var I=new Uint8Array(A);return self.crypto.getRandomValues(I),I}:self.msCrypto&&self.msCrypto.getRandomValues?C.prototype._rand=function(A){var I=new Uint8Array(A);return self.msCrypto.getRandomValues(I),I}:"object"==typeof window&&(C.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var Q=g(139);if("function"!=typeof Q.randomBytes)throw new Error("Not supported");C.prototype._rand=function(A){return Q.randomBytes(A)}}catch(A){}},function(A,I,g){(function(I){var B=g(3),C=g(18);function Q(A,g){var C=function(A){var I=E(A);return{blinder:I.toRed(B.mont(A.modulus)).redPow(new B(A.publicExponent)).fromRed(),unblinder:I.invm(A.modulus)}}(g),Q=g.modulus.byteLength(),i=(B.mont(g.modulus),new B(A).mul(C.blinder).umod(g.modulus)),o=i.toRed(B.mont(g.prime1)),t=i.toRed(B.mont(g.prime2)),e=g.coefficient,a=g.prime1,r=g.prime2,n=o.redPow(g.exponent1),s=t.redPow(g.exponent2);n=n.fromRed(),s=s.fromRed();var h=n.isub(s).imul(e).umod(a);return h.imul(r),s.iadd(h),new I(s.imul(C.unblinder).umod(g.modulus).toArray(!1,Q))}function E(A){for(var I=A.modulus.byteLength(),g=new B(C(I));g.cmp(A.modulus)>=0||!g.umod(A.prime1)||!g.umod(A.prime2);)g=new B(C(I));return g}A.exports=Q,Q.getr=E}).call(this,g(4).Buffer)},function(A,I,g){"use strict";var B=I;B.version=g(144).version,B.utils=g(8),B.rand=g(43),B.curve=g(74),B.curves=g(46),B.ec=g(155),B.eddsa=g(159)},function(A,I,g){"use strict";var B,C=I,Q=g(47),E=g(74),i=g(8).assert;function o(A){"short"===A.type?this.curve=new E.short(A):"edwards"===A.type?this.curve=new E.edwards(A):this.curve=new E.mont(A),this.g=this.curve.g,this.n=this.curve.n,this.hash=A.hash,i(this.g.validate(),"Invalid curve"),i(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function t(A,I){Object.defineProperty(C,A,{configurable:!0,enumerable:!0,get:function(){var g=new o(I);return Object.defineProperty(C,A,{configurable:!0,enumerable:!0,value:g}),g}})}C.PresetCurve=o,t("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:Q.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),t("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:Q.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),t("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:Q.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),t("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:Q.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),t("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:Q.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),t("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:Q.sha256,gRed:!1,g:["9"]}),t("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:Q.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{B=g(154)}catch(A){B=void 0}t("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:Q.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",B]})},function(A,I,g){var B=I;B.utils=g(12),B.common=g(24),B.sha=g(148),B.ripemd=g(152),B.hmac=g(153),B.sha1=B.sha.sha1,B.sha256=B.sha.sha256,B.sha224=B.sha.sha224,B.sha384=B.sha.sha384,B.sha512=B.sha.sha512,B.ripemd160=B.ripemd.ripemd160},function(A,I){var g={}.toString;A.exports=Array.isArray||function(A){return"[object Array]"==g.call(A)}},function(A,I,g){(function(A){function g(A,I){for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];"."===C?A.splice(B,1):".."===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g--;g)A.unshift("..");return A}function B(A,I){if(A.filter)return A.filter(I);for(var g=[],B=0;B<A.length;B++)I(A[B],B,A)&&g.push(A[B]);return g}I.resolve=function(){for(var I="",C=!1,Q=arguments.length-1;Q>=-1&&!C;Q--){var E=Q>=0?arguments[Q]:A.cwd();if("string"!=typeof E)throw new TypeError("Arguments to path.resolve must be strings");E&&(I=E+"/"+I,C="/"===E.charAt(0))}return(C?"/":"")+(I=g(B(I.split("/"),(function(A){return!!A})),!C).join("/"))||"."},I.normalize=function(A){var Q=I.isAbsolute(A),E="/"===C(A,-1);return(A=g(B(A.split("/"),(function(A){return!!A})),!Q).join("/"))||Q||(A="."),A&&E&&(A+="/"),(Q?"/":"")+A},I.isAbsolute=function(A){return"/"===A.charAt(0)},I.join=function(){var A=Array.prototype.slice.call(arguments,0);return I.normalize(B(A,(function(A,I){if("string"!=typeof A)throw new TypeError("Arguments to path.join must be strings");return A})).join("/"))},I.relative=function(A,g){function B(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=I.resolve(A).substr(1),g=I.resolve(g).substr(1);for(var C=B(A.split("/")),Q=B(g.split("/")),E=Math.min(C.length,Q.length),i=E,o=0;o<E;o++)if(C[o]!==Q[o]){i=o;break}var t=[];for(o=i;o<C.length;o++)t.push("..");return(t=t.concat(Q.slice(i))).join("/")},I.sep="/",I.delimiter=":",I.dirname=function(A){if("string"!=typeof A&&(A+=""),0===A.length)return".";for(var I=A.charCodeAt(0),g=47===I,B=-1,C=!0,Q=A.length-1;Q>=1;--Q)if(47===(I=A.charCodeAt(Q))){if(!C){B=Q;break}}else C=!1;return-1===B?g?"/":".":g&&1===B?"/":A.slice(0,B)},I.basename=function(A,I){var g=function(A){"string"!=typeof A&&(A+="");var I,g=0,B=-1,C=!0;for(I=A.length-1;I>=0;--I)if(47===A.charCodeAt(I)){if(!C){g=I+1;break}}else-1===B&&(C=!1,B=I+1);return-1===B?"":A.slice(g,B)}(A);return I&&g.substr(-1*I.length)===I&&(g=g.substr(0,g.length-I.length)),g},I.extname=function(A){"string"!=typeof A&&(A+="");for(var I=-1,g=0,B=-1,C=!0,Q=0,E=A.length-1;E>=0;--E){var i=A.charCodeAt(E);if(47!==i)-1===B&&(C=!1,B=E+1),46===i?-1===I?I=E:1!==Q&&(Q=1):-1!==I&&(Q=-1);else if(!C){g=E+1;break}}return-1===I||-1===B||0===Q||1===Q&&I===B-1&&I===g+1?"":A.slice(I,B)};var C= true?function(A,I,g){return A.substr(I,g)}:0}).call(this,g(9))},function(A,I,g){"use strict";var B=g(1).Buffer,C=g(33).Transform;function Q(A){C.call(this),this._block=B.allocUnsafe(A),this._blockSize=A,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}g(0)(Q,C),Q.prototype._transform=function(A,I,g){var B=null;try{this.update(A,I)}catch(A){B=A}g(B)},Q.prototype._flush=function(A){var I=null;try{this.push(this.digest())}catch(A){I=A}A(I)},Q.prototype.update=function(A,I){if(function(A,I){if(!B.isBuffer(A)&&"string"!=typeof A)throw new TypeError(I+" must be a string or a buffer")}(A,"Data"),this._finalized)throw new Error("Digest already called");B.isBuffer(A)||(A=B.from(A,I));for(var g=this._block,C=0;this._blockOffset+A.length-C>=this._blockSize;){for(var Q=this._blockOffset;Q<this._blockSize;)g[Q++]=A[C++];this._update(),this._blockOffset=0}for(;C<A.length;)g[this._blockOffset++]=A[C++];for(var E=0,i=8*A.length;i>0;++E)this._length[E]+=i,(i=this._length[E]/4294967296|0)>0&&(this._length[E]-=4294967296*i);return this},Q.prototype._update=function(){throw new Error("_update is not implemented")},Q.prototype.digest=function(A){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var I=this._digest();void 0!==A&&(I=I.toString(A)),this._block.fill(0),this._blockOffset=0;for(var g=0;g<4;++g)this._length[g]=0;return I},Q.prototype._digest=function(){throw new Error("_digest is not implemented")},A.exports=Q},function(A,I,g){"use strict";(function(I,B){var C=g(27);A.exports=f;var Q,E=g(48);f.ReadableState=w;g(34).EventEmitter;var i=function(A,I){return A.listeners(I).length},o=g(52),t=g(1).Buffer,e=I.Uint8Array||function(){};var a=Object.create(g(22));a.inherits=g(0);var r=g(103),n=void 0;n=r&&r.debuglog?r.debuglog("stream"):function(){};var s,h=g(104),D=g(53);a.inherits(f,o);var c=["error","close","destroy","pause","resume"];function w(A,I){A=A||{};var B=I instanceof(Q=Q||g(16));this.objectMode=!!A.objectMode,B&&(this.objectMode=this.objectMode||!!A.readableObjectMode);var C=A.highWaterMark,E=A.readableHighWaterMark,i=this.objectMode?16:16384;this.highWaterMark=C||0===C?C:B&&(E||0===E)?E:i,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new h,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=A.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,A.encoding&&(s||(s=g(37).StringDecoder),this.decoder=new s(A.encoding),this.encoding=A.encoding)}function f(A){if(Q=Q||g(16),!(this instanceof f))return new f(A);this._readableState=new w(A,this),this.readable=!0,A&&("function"==typeof A.read&&(this._read=A.read),"function"==typeof A.destroy&&(this._destroy=A.destroy)),o.call(this)}function d(A,I,g,B,C){var Q,E=A._readableState;null===I?(E.reading=!1,function(A,I){if(I.ended)return;if(I.decoder){var g=I.decoder.end();g&&g.length&&(I.buffer.push(g),I.length+=I.objectMode?1:g.length)}I.ended=!0,y(A)}(A,E)):(C||(Q=function(A,I){var g;B=I,t.isBuffer(B)||B instanceof e||"string"==typeof I||void 0===I||A.objectMode||(g=new TypeError("Invalid non-string/buffer chunk"));var B;return g}(E,I)),Q?A.emit("error",Q):E.objectMode||I&&I.length>0?("string"==typeof I||E.objectMode||Object.getPrototypeOf(I)===t.prototype||(I=function(A){return t.from(A)}(I)),B?E.endEmitted?A.emit("error",new Error("stream.unshift() after end event")):F(A,E,I,!0):E.ended?A.emit("error",new Error("stream.push() after EOF")):(E.reading=!1,E.decoder&&!g?(I=E.decoder.write(I),E.objectMode||0!==I.length?F(A,E,I,!1):u(A,E)):F(A,E,I,!1))):B||(E.reading=!1));return function(A){return!A.ended&&(A.needReadable||A.length<A.highWaterMark||0===A.length)}(E)}function F(A,I,g,B){I.flowing&&0===I.length&&!I.sync?(A.emit("data",g),A.read(0)):(I.length+=I.objectMode?1:g.length,B?I.buffer.unshift(g):I.buffer.push(g),I.needReadable&&y(A)),u(A,I)}Object.defineProperty(f.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(A){this._readableState&&(this._readableState.destroyed=A)}}),f.prototype.destroy=D.destroy,f.prototype._undestroy=D.undestroy,f.prototype._destroy=function(A,I){this.push(null),I(A)},f.prototype.push=function(A,I){var g,B=this._readableState;return B.objectMode?g=!0:"string"==typeof A&&((I=I||B.defaultEncoding)!==B.encoding&&(A=t.from(A,I),I=""),g=!0),d(this,A,I,!1,g)},f.prototype.unshift=function(A){return d(this,A,null,!0,!1)},f.prototype.isPaused=function(){return!1===this._readableState.flowing},f.prototype.setEncoding=function(A){return s||(s=g(37).StringDecoder),this._readableState.decoder=new s(A),this._readableState.encoding=A,this};function G(A,I){return A<=0||0===I.length&&I.ended?0:I.objectMode?1:A!=A?I.flowing&&I.length?I.buffer.head.data.length:I.length:(A>I.highWaterMark&&(I.highWaterMark=function(A){return A>=8388608?A=8388608:(A--,A|=A>>>1,A|=A>>>2,A|=A>>>4,A|=A>>>8,A|=A>>>16,A++),A}(A)),A<=I.length?A:I.ended?I.length:(I.needReadable=!0,0))}function y(A){var I=A._readableState;I.needReadable=!1,I.emittedReadable||(n("emitReadable",I.flowing),I.emittedReadable=!0,I.sync?C.nextTick(R,A):R(A))}function R(A){n("emit readable"),A.emit("readable"),l(A)}function u(A,I){I.readingMore||(I.readingMore=!0,C.nextTick(U,A,I))}function U(A,I){for(var g=I.length;!I.reading&&!I.flowing&&!I.ended&&I.length<I.highWaterMark&&(n("maybeReadMore read 0"),A.read(0),g!==I.length);)g=I.length;I.readingMore=!1}function S(A){n("readable nexttick read 0"),A.read(0)}function M(A,I){I.reading||(n("resume read 0"),A.read(0)),I.resumeScheduled=!1,I.awaitDrain=0,A.emit("resume"),l(A),I.flowing&&!I.reading&&A.read(0)}function l(A){var I=A._readableState;for(n("flow",I.flowing);I.flowing&&null!==A.read(););}function k(A,I){return 0===I.length?null:(I.objectMode?g=I.buffer.shift():!A||A>=I.length?(g=I.decoder?I.buffer.join(""):1===I.buffer.length?I.buffer.head.data:I.buffer.concat(I.length),I.buffer.clear()):g=function(A,I,g){var B;A<I.head.data.length?(B=I.head.data.slice(0,A),I.head.data=I.head.data.slice(A)):B=A===I.head.data.length?I.shift():g?function(A,I){var g=I.head,B=1,C=g.data;A-=C.length;for(;g=g.next;){var Q=g.data,E=A>Q.length?Q.length:A;if(E===Q.length?C+=Q:C+=Q.slice(0,A),0===(A-=E)){E===Q.length?(++B,g.next?I.head=g.next:I.head=I.tail=null):(I.head=g,g.data=Q.slice(E));break}++B}return I.length-=B,C}(A,I):function(A,I){var g=t.allocUnsafe(A),B=I.head,C=1;B.data.copy(g),A-=B.data.length;for(;B=B.next;){var Q=B.data,E=A>Q.length?Q.length:A;if(Q.copy(g,g.length-A,0,E),0===(A-=E)){E===Q.length?(++C,B.next?I.head=B.next:I.head=I.tail=null):(I.head=B,B.data=Q.slice(E));break}++C}return I.length-=C,g}(A,I);return B}(A,I.buffer,I.decoder),g);var g}function N(A){var I=A._readableState;if(I.length>0)throw new Error('"endReadable()" called on non-empty stream');I.endEmitted||(I.ended=!0,C.nextTick(K,I,A))}function K(A,I){A.endEmitted||0!==A.length||(A.endEmitted=!0,I.readable=!1,I.emit("end"))}function Y(A,I){for(var g=0,B=A.length;g<B;g++)if(A[g]===I)return g;return-1}f.prototype.read=function(A){n("read",A),A=parseInt(A,10);var I=this._readableState,g=A;if(0!==A&&(I.emittedReadable=!1),0===A&&I.needReadable&&(I.length>=I.highWaterMark||I.ended))return n("read: emitReadable",I.length,I.ended),0===I.length&&I.ended?N(this):y(this),null;if(0===(A=G(A,I))&&I.ended)return 0===I.length&&N(this),null;var B,C=I.needReadable;return n("need readable",C),(0===I.length||I.length-A<I.highWaterMark)&&n("length less than watermark",C=!0),I.ended||I.reading?n("reading or ended",C=!1):C&&(n("do read"),I.reading=!0,I.sync=!0,0===I.length&&(I.needReadable=!0),this._read(I.highWaterMark),I.sync=!1,I.reading||(A=G(g,I))),null===(B=A>0?k(A,I):null)?(I.needReadable=!0,A=0):I.length-=A,0===I.length&&(I.ended||(I.needReadable=!0),g!==A&&I.ended&&N(this)),null!==B&&this.emit("data",B),B},f.prototype._read=function(A){this.emit("error",new Error("_read() is not implemented"))},f.prototype.pipe=function(A,I){var g=this,Q=this._readableState;switch(Q.pipesCount){case 0:Q.pipes=A;break;case 1:Q.pipes=[Q.pipes,A];break;default:Q.pipes.push(A)}Q.pipesCount+=1,n("pipe count=%d opts=%j",Q.pipesCount,I);var o=(!I||!1!==I.end)&&A!==B.stdout&&A!==B.stderr?e:f;function t(I,B){n("onunpipe"),I===g&&B&&!1===B.hasUnpiped&&(B.hasUnpiped=!0,n("cleanup"),A.removeListener("close",c),A.removeListener("finish",w),A.removeListener("drain",a),A.removeListener("error",D),A.removeListener("unpipe",t),g.removeListener("end",e),g.removeListener("end",f),g.removeListener("data",h),r=!0,!Q.awaitDrain||A._writableState&&!A._writableState.needDrain||a())}function e(){n("onend"),A.end()}Q.endEmitted?C.nextTick(o):g.once("end",o),A.on("unpipe",t);var a=function(A){return function(){var I=A._readableState;n("pipeOnDrain",I.awaitDrain),I.awaitDrain&&I.awaitDrain--,0===I.awaitDrain&&i(A,"data")&&(I.flowing=!0,l(A))}}(g);A.on("drain",a);var r=!1;var s=!1;function h(I){n("ondata"),s=!1,!1!==A.write(I)||s||((1===Q.pipesCount&&Q.pipes===A||Q.pipesCount>1&&-1!==Y(Q.pipes,A))&&!r&&(n("false write response, pause",g._readableState.awaitDrain),g._readableState.awaitDrain++,s=!0),g.pause())}function D(I){n("onerror",I),f(),A.removeListener("error",D),0===i(A,"error")&&A.emit("error",I)}function c(){A.removeListener("finish",w),f()}function w(){n("onfinish"),A.removeListener("close",c),f()}function f(){n("unpipe"),g.unpipe(A)}return g.on("data",h),function(A,I,g){if("function"==typeof A.prependListener)return A.prependListener(I,g);A._events&&A._events[I]?E(A._events[I])?A._events[I].unshift(g):A._events[I]=[g,A._events[I]]:A.on(I,g)}(A,"error",D),A.once("close",c),A.once("finish",w),A.emit("pipe",g),Q.flowing||(n("pipe resume"),g.resume()),A},f.prototype.unpipe=function(A){var I=this._readableState,g={hasUnpiped:!1};if(0===I.pipesCount)return this;if(1===I.pipesCount)return A&&A!==I.pipes?this:(A||(A=I.pipes),I.pipes=null,I.pipesCount=0,I.flowing=!1,A&&A.emit("unpipe",this,g),this);if(!A){var B=I.pipes,C=I.pipesCount;I.pipes=null,I.pipesCount=0,I.flowing=!1;for(var Q=0;Q<C;Q++)B[Q].emit("unpipe",this,g);return this}var E=Y(I.pipes,A);return-1===E?this:(I.pipes.splice(E,1),I.pipesCount-=1,1===I.pipesCount&&(I.pipes=I.pipes[0]),A.emit("unpipe",this,g),this)},f.prototype.on=function(A,I){var g=o.prototype.on.call(this,A,I);if("data"===A)!1!==this._readableState.flowing&&this.resume();else if("readable"===A){var B=this._readableState;B.endEmitted||B.readableListening||(B.readableListening=B.needReadable=!0,B.emittedReadable=!1,B.reading?B.length&&y(this):C.nextTick(S,this))}return g},f.prototype.addListener=f.prototype.on,f.prototype.resume=function(){var A=this._readableState;return A.flowing||(n("resume"),A.flowing=!0,function(A,I){I.resumeScheduled||(I.resumeScheduled=!0,C.nextTick(M,A,I))}(this,A)),this},f.prototype.pause=function(){return n("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(n("pause"),this._readableState.flowing=!1,this.emit("pause")),this},f.prototype.wrap=function(A){var I=this,g=this._readableState,B=!1;for(var C in A.on("end",(function(){if(n("wrapped end"),g.decoder&&!g.ended){var A=g.decoder.end();A&&A.length&&I.push(A)}I.push(null)})),A.on("data",(function(C){(n("wrapped data"),g.decoder&&(C=g.decoder.write(C)),g.objectMode&&null==C)||(g.objectMode||C&&C.length)&&(I.push(C)||(B=!0,A.pause()))})),A)void 0===this[C]&&"function"==typeof A[C]&&(this[C]=function(I){return function(){return A[I].apply(A,arguments)}}(C));for(var Q=0;Q<c.length;Q++)A.on(c[Q],this.emit.bind(this,c[Q]));return this._read=function(I){n("wrapped _read",I),B&&(B=!1,A.resume())},this},Object.defineProperty(f.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),f._fromList=k}).call(this,g(11),g(9))},function(A,I,g){A.exports=g(34).EventEmitter},function(A,I,g){"use strict";var B=g(27);function C(A,I){A.emit("error",I)}A.exports={destroy:function(A,I){var g=this,Q=this._readableState&&this._readableState.destroyed,E=this._writableState&&this._writableState.destroyed;return Q||E?(I?I(A):!A||this._writableState&&this._writableState.errorEmitted||B.nextTick(C,this,A),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(A||null,(function(A){!I&&A?(B.nextTick(C,g,A),g._writableState&&(g._writableState.errorEmitted=!0)):I&&I(A)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}},function(A,I,g){"use strict";A.exports=E;var B=g(16),C=Object.create(g(22));function Q(A,I){var g=this._transformState;g.transforming=!1;var B=g.writecb;if(!B)return this.emit("error",new Error("write callback called multiple times"));g.writechunk=null,g.writecb=null,null!=I&&this.push(I),B(A);var C=this._readableState;C.reading=!1,(C.needReadable||C.length<C.highWaterMark)&&this._read(C.highWaterMark)}function E(A){if(!(this instanceof E))return new E(A);B.call(this,A),this._transformState={afterTransform:Q.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,A&&("function"==typeof A.transform&&(this._transform=A.transform),"function"==typeof A.flush&&(this._flush=A.flush)),this.on("prefinish",i)}function i(){var A=this;"function"==typeof this._flush?this._flush((function(I,g){o(A,I,g)})):o(this,null,null)}function o(A,I,g){if(I)return A.emit("error",I);if(null!=g&&A.push(g),A._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(A._transformState.transforming)throw new Error("Calling transform done when still transforming");return A.push(null)}C.inherits=g(0),C.inherits(E,B),E.prototype.push=function(A,I){return this._transformState.needTransform=!1,B.prototype.push.call(this,A,I)},E.prototype._transform=function(A,I,g){throw new Error("_transform() is not implemented")},E.prototype._write=function(A,I,g){var B=this._transformState;if(B.writecb=g,B.writechunk=A,B.writeencoding=I,!B.transforming){var C=this._readableState;(B.needTransform||C.needReadable||C.length<C.highWaterMark)&&this._read(C.highWaterMark)}},E.prototype._read=function(A){var I=this._transformState;null!==I.writechunk&&I.writecb&&!I.transforming?(I.transforming=!0,this._transform(I.writechunk,I.writeencoding,I.afterTransform)):I.needTransform=!0},E.prototype._destroy=function(A,I){var g=this;B.prototype._destroy.call(this,A,(function(A){I(A),g.emit("close")}))}},function(A,I,g){var B=g(0),C=g(19),Q=g(1).Buffer,E=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],i=new Array(64);function o(){this.init(),this._w=i,C.call(this,64,56)}function t(A,I,g){return g^A&(I^g)}function e(A,I,g){return A&I|g&(A|I)}function a(A){return(A>>>2|A<<30)^(A>>>13|A<<19)^(A>>>22|A<<10)}function r(A){return(A>>>6|A<<26)^(A>>>11|A<<21)^(A>>>25|A<<7)}function n(A){return(A>>>7|A<<25)^(A>>>18|A<<14)^A>>>3}B(o,C),o.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},o.prototype._update=function(A){for(var I,g=this._w,B=0|this._a,C=0|this._b,Q=0|this._c,i=0|this._d,o=0|this._e,s=0|this._f,h=0|this._g,D=0|this._h,c=0;c<16;++c)g[c]=A.readInt32BE(4*c);for(;c<64;++c)g[c]=0|(((I=g[c-2])>>>17|I<<15)^(I>>>19|I<<13)^I>>>10)+g[c-7]+n(g[c-15])+g[c-16];for(var w=0;w<64;++w){var f=D+r(o)+t(o,s,h)+E[w]+g[w]|0,d=a(B)+e(B,C,Q)|0;D=h,h=s,s=o,o=i+f|0,i=Q,Q=C,C=B,B=f+d|0}this._a=B+this._a|0,this._b=C+this._b|0,this._c=Q+this._c|0,this._d=i+this._d|0,this._e=o+this._e|0,this._f=s+this._f|0,this._g=h+this._g|0,this._h=D+this._h|0},o.prototype._hash=function(){var A=Q.allocUnsafe(32);return A.writeInt32BE(this._a,0),A.writeInt32BE(this._b,4),A.writeInt32BE(this._c,8),A.writeInt32BE(this._d,12),A.writeInt32BE(this._e,16),A.writeInt32BE(this._f,20),A.writeInt32BE(this._g,24),A.writeInt32BE(this._h,28),A},A.exports=o},function(A,I,g){var B=g(0),C=g(19),Q=g(1).Buffer,E=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],i=new Array(160);function o(){this.init(),this._w=i,C.call(this,128,112)}function t(A,I,g){return g^A&(I^g)}function e(A,I,g){return A&I|g&(A|I)}function a(A,I){return(A>>>28|I<<4)^(I>>>2|A<<30)^(I>>>7|A<<25)}function r(A,I){return(A>>>14|I<<18)^(A>>>18|I<<14)^(I>>>9|A<<23)}function n(A,I){return(A>>>1|I<<31)^(A>>>8|I<<24)^A>>>7}function s(A,I){return(A>>>1|I<<31)^(A>>>8|I<<24)^(A>>>7|I<<25)}function h(A,I){return(A>>>19|I<<13)^(I>>>29|A<<3)^A>>>6}function D(A,I){return(A>>>19|I<<13)^(I>>>29|A<<3)^(A>>>6|I<<26)}function c(A,I){return A>>>0<I>>>0?1:0}B(o,C),o.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},o.prototype._update=function(A){for(var I=this._w,g=0|this._ah,B=0|this._bh,C=0|this._ch,Q=0|this._dh,i=0|this._eh,o=0|this._fh,w=0|this._gh,f=0|this._hh,d=0|this._al,F=0|this._bl,G=0|this._cl,y=0|this._dl,R=0|this._el,u=0|this._fl,U=0|this._gl,S=0|this._hl,M=0;M<32;M+=2)I[M]=A.readInt32BE(4*M),I[M+1]=A.readInt32BE(4*M+4);for(;M<160;M+=2){var l=I[M-30],k=I[M-30+1],N=n(l,k),K=s(k,l),Y=h(l=I[M-4],k=I[M-4+1]),p=D(k,l),J=I[M-14],b=I[M-14+1],H=I[M-32],L=I[M-32+1],q=K+b|0,m=N+J+c(q,K)|0;m=(m=m+Y+c(q=q+p|0,p)|0)+H+c(q=q+L|0,L)|0,I[M]=m,I[M+1]=q}for(var v=0;v<160;v+=2){m=I[v],q=I[v+1];var x=e(g,B,C),W=e(d,F,G),Z=a(g,d),X=a(d,g),V=r(i,R),O=r(R,i),T=E[v],j=E[v+1],P=t(i,o,w),z=t(R,u,U),_=S+O|0,$=f+V+c(_,S)|0;$=($=($=$+P+c(_=_+z|0,z)|0)+T+c(_=_+j|0,j)|0)+m+c(_=_+q|0,q)|0;var AA=X+W|0,IA=Z+x+c(AA,X)|0;f=w,S=U,w=o,U=u,o=i,u=R,i=Q+$+c(R=y+_|0,y)|0,Q=C,y=G,C=B,G=F,B=g,F=d,g=$+IA+c(d=_+AA|0,_)|0}this._al=this._al+d|0,this._bl=this._bl+F|0,this._cl=this._cl+G|0,this._dl=this._dl+y|0,this._el=this._el+R|0,this._fl=this._fl+u|0,this._gl=this._gl+U|0,this._hl=this._hl+S|0,this._ah=this._ah+g+c(this._al,d)|0,this._bh=this._bh+B+c(this._bl,F)|0,this._ch=this._ch+C+c(this._cl,G)|0,this._dh=this._dh+Q+c(this._dl,y)|0,this._eh=this._eh+i+c(this._el,R)|0,this._fh=this._fh+o+c(this._fl,u)|0,this._gh=this._gh+w+c(this._gl,U)|0,this._hh=this._hh+f+c(this._hl,S)|0},o.prototype._hash=function(){var A=Q.allocUnsafe(64);function I(I,g,B){A.writeInt32BE(I,B),A.writeInt32BE(g,B+4)}return I(this._ah,this._al,0),I(this._bh,this._bl,8),I(this._ch,this._cl,16),I(this._dh,this._dl,24),I(this._eh,this._el,32),I(this._fh,this._fl,40),I(this._gh,this._gl,48),I(this._hh,this._hl,56),A},A.exports=o},function(A,I,g){"use strict";var B=g(0),C=g(118),Q=g(14),E=g(1).Buffer,i=g(58),o=g(38),t=g(39),e=E.alloc(128);function a(A,I){Q.call(this,"digest"),"string"==typeof I&&(I=E.from(I));var g="sha512"===A||"sha384"===A?128:64;(this._alg=A,this._key=I,I.length>g)?I=("rmd160"===A?new o:t(A)).update(I).digest():I.length<g&&(I=E.concat([I,e],g));for(var B=this._ipad=E.allocUnsafe(g),C=this._opad=E.allocUnsafe(g),i=0;i<g;i++)B[i]=54^I[i],C[i]=92^I[i];this._hash="rmd160"===A?new o:t(A),this._hash.update(B)}B(a,Q),a.prototype._update=function(A){this._hash.update(A)},a.prototype._final=function(){var A=this._hash.digest();return("rmd160"===this._alg?new o:t(this._alg)).update(this._opad).update(A).digest()},A.exports=function(A,I){return"rmd160"===(A=A.toLowerCase())||"ripemd160"===A?new a("rmd160",I):"md5"===A?new C(i,I):new a(A,I)}},function(A,I,g){var B=g(32);A.exports=function(A){return(new B).update(A).digest()}},function(A){A.exports=JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}')},function(A,I,g){I.pbkdf2=g(120),I.pbkdf2Sync=g(63)},function(A,I,g){(function(I){var g=Math.pow(2,30)-1;function B(A,g){if("string"!=typeof A&&!I.isBuffer(A))throw new TypeError(g+" must be a buffer or string")}A.exports=function(A,I,C,Q){if(B(A,"Password"),B(I,"Salt"),"number"!=typeof C)throw new TypeError("Iterations not a number");if(C<0)throw new TypeError("Bad iterations");if("number"!=typeof Q)throw new TypeError("Key length not a number");if(Q<0||Q>g||Q!=Q)throw new TypeError("Bad key length")}}).call(this,g(4).Buffer)},function(A,I,g){(function(I){var g;I.browser?g="utf-8":g=parseInt(I.version.split(".")[0].slice(1),10)>=6?"utf-8":"binary";A.exports=g}).call(this,g(9))},function(A,I,g){var B=g(58),C=g(38),Q=g(39),E=g(61),i=g(62),o=g(1).Buffer,t=o.alloc(128),e={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};function a(A,I,g){var E=function(A){function I(I){return Q(A).update(I).digest()}return"rmd160"===A||"ripemd160"===A?function(A){return(new C).update(A).digest()}:"md5"===A?B:I}(A),i="sha512"===A||"sha384"===A?128:64;I.length>i?I=E(I):I.length<i&&(I=o.concat([I,t],i));for(var a=o.allocUnsafe(i+e[A]),r=o.allocUnsafe(i+e[A]),n=0;n<i;n++)a[n]=54^I[n],r[n]=92^I[n];var s=o.allocUnsafe(i+g+4);a.copy(s,0,0,i),this.ipad1=s,this.ipad2=a,this.opad=r,this.alg=A,this.blocksize=i,this.hash=E,this.size=e[A]}a.prototype.run=function(A,I){return A.copy(I,this.blocksize),this.hash(I).copy(this.opad,this.blocksize),this.hash(this.opad)},A.exports=function(A,I,g,B,C){E(A,I,g,B),o.isBuffer(A)||(A=o.from(A,i)),o.isBuffer(I)||(I=o.from(I,i));var Q=new a(C=C||"sha1",A,I.length),t=o.allocUnsafe(B),r=o.allocUnsafe(I.length+4);I.copy(r,0,0,I.length);for(var n=0,s=e[C],h=Math.ceil(B/s),D=1;D<=h;D++){r.writeUInt32BE(D,I.length);for(var c=Q.run(r,Q.ipad1),w=c,f=1;f<g;f++){w=Q.run(w,Q.ipad2);for(var d=0;d<s;d++)c[d]^=w[d]}c.copy(t,n),n+=s}return t}},function(A,I,g){"use strict";I.readUInt32BE=function(A,I){return(A[0+I]<<24|A[1+I]<<16|A[2+I]<<8|A[3+I])>>>0},I.writeUInt32BE=function(A,I,g){A[0+g]=I>>>24,A[1+g]=I>>>16&255,A[2+g]=I>>>8&255,A[3+g]=255&I},I.ip=function(A,I,g,B){for(var C=0,Q=0,E=6;E>=0;E-=2){for(var i=0;i<=24;i+=8)C<<=1,C|=I>>>i+E&1;for(i=0;i<=24;i+=8)C<<=1,C|=A>>>i+E&1}for(E=6;E>=0;E-=2){for(i=1;i<=25;i+=8)Q<<=1,Q|=I>>>i+E&1;for(i=1;i<=25;i+=8)Q<<=1,Q|=A>>>i+E&1}g[B+0]=C>>>0,g[B+1]=Q>>>0},I.rip=function(A,I,g,B){for(var C=0,Q=0,E=0;E<4;E++)for(var i=24;i>=0;i-=8)C<<=1,C|=I>>>i+E&1,C<<=1,C|=A>>>i+E&1;for(E=4;E<8;E++)for(i=24;i>=0;i-=8)Q<<=1,Q|=I>>>i+E&1,Q<<=1,Q|=A>>>i+E&1;g[B+0]=C>>>0,g[B+1]=Q>>>0},I.pc1=function(A,I,g,B){for(var C=0,Q=0,E=7;E>=5;E--){for(var i=0;i<=24;i+=8)C<<=1,C|=I>>i+E&1;for(i=0;i<=24;i+=8)C<<=1,C|=A>>i+E&1}for(i=0;i<=24;i+=8)C<<=1,C|=I>>i+E&1;for(E=1;E<=3;E++){for(i=0;i<=24;i+=8)Q<<=1,Q|=I>>i+E&1;for(i=0;i<=24;i+=8)Q<<=1,Q|=A>>i+E&1}for(i=0;i<=24;i+=8)Q<<=1,Q|=A>>i+E&1;g[B+0]=C>>>0,g[B+1]=Q>>>0},I.r28shl=function(A,I){return A<<I&268435455|A>>>28-I};var B=[14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];I.pc2=function(A,I,g,C){for(var Q=0,E=0,i=B.length>>>1,o=0;o<i;o++)Q<<=1,Q|=A>>>B[o]&1;for(o=i;o<B.length;o++)E<<=1,E|=I>>>B[o]&1;g[C+0]=Q>>>0,g[C+1]=E>>>0},I.expand=function(A,I,g){var B=0,C=0;B=(1&A)<<5|A>>>27;for(var Q=23;Q>=15;Q-=4)B<<=6,B|=A>>>Q&63;for(Q=11;Q>=3;Q-=4)C|=A>>>Q&63,C<<=6;C|=(31&A)<<1|A>>>31,I[g+0]=B>>>0,I[g+1]=C>>>0};var C=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];I.substitute=function(A,I){for(var g=0,B=0;B<4;B++){g<<=4,g|=C[64*B+(A>>>18-6*B&63)]}for(B=0;B<4;B++){g<<=4,g|=C[256+64*B+(I>>>18-6*B&63)]}return g>>>0};var Q=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];I.permute=function(A){for(var I=0,g=0;g<Q.length;g++)I<<=1,I|=A>>>Q[g]&1;return I>>>0},I.padSplit=function(A,I,g){for(var B=A.toString(2);B.length<I;)B="0"+B;for(var C=[],Q=0;Q<I;Q+=g)C.push(B.slice(Q,Q+g));return C.join(" ")}},function(A,I,g){"use strict";var B=g(7),C=g(0),Q=g(64),E=g(40);function i(){this.tmp=new Array(2),this.keys=null}function o(A){E.call(this,A);var I=new i;this._desState=I,this.deriveKeys(I,A.key)}C(o,E),A.exports=o,o.create=function(A){return new o(A)};var t=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];o.prototype.deriveKeys=function(A,I){A.keys=new Array(32),B.equal(I.length,this.blockSize,"Invalid key length");var g=Q.readUInt32BE(I,0),C=Q.readUInt32BE(I,4);Q.pc1(g,C,A.tmp,0),g=A.tmp[0],C=A.tmp[1];for(var E=0;E<A.keys.length;E+=2){var i=t[E>>>1];g=Q.r28shl(g,i),C=Q.r28shl(C,i),Q.pc2(g,C,A.keys,E)}},o.prototype._update=function(A,I,g,B){var C=this._desState,E=Q.readUInt32BE(A,I),i=Q.readUInt32BE(A,I+4);Q.ip(E,i,C.tmp,0),E=C.tmp[0],i=C.tmp[1],"encrypt"===this.type?this._encrypt(C,E,i,C.tmp,0):this._decrypt(C,E,i,C.tmp,0),E=C.tmp[0],i=C.tmp[1],Q.writeUInt32BE(g,E,B),Q.writeUInt32BE(g,i,B+4)},o.prototype._pad=function(A,I){for(var g=A.length-I,B=I;B<A.length;B++)A[B]=g;return!0},o.prototype._unpad=function(A){for(var I=A[A.length-1],g=A.length-I;g<A.length;g++)B.equal(A[g],I);return A.slice(0,A.length-I)},o.prototype._encrypt=function(A,I,g,B,C){for(var E=I,i=g,o=0;o<A.keys.length;o+=2){var t=A.keys[o],e=A.keys[o+1];Q.expand(i,A.tmp,0),t^=A.tmp[0],e^=A.tmp[1];var a=Q.substitute(t,e),r=i;i=(E^Q.permute(a))>>>0,E=r}Q.rip(i,E,B,C)},o.prototype._decrypt=function(A,I,g,B,C){for(var E=g,i=I,o=A.keys.length-2;o>=0;o-=2){var t=A.keys[o],e=A.keys[o+1];Q.expand(E,A.tmp,0),t^=A.tmp[0],e^=A.tmp[1];var a=Q.substitute(t,e),r=E;E=(i^Q.permute(a))>>>0,i=r}Q.rip(E,i,B,C)}},function(A,I,g){var B=g(23),C=g(1).Buffer,Q=g(67);function E(A){var I=A._cipher.encryptBlockRaw(A._prev);return Q(A._prev),I}I.encrypt=function(A,I){var g=Math.ceil(I.length/16),Q=A._cache.length;A._cache=C.concat([A._cache,C.allocUnsafe(16*g)]);for(var i=0;i<g;i++){var o=E(A),t=Q+16*i;A._cache.writeUInt32BE(o[0],t+0),A._cache.writeUInt32BE(o[1],t+4),A._cache.writeUInt32BE(o[2],t+8),A._cache.writeUInt32BE(o[3],t+12)}var e=A._cache.slice(0,I.length);return A._cache=A._cache.slice(I.length),B(I,e)}},function(A,I){A.exports=function(A){for(var I,g=A.length;g--;){if(255!==(I=A.readUInt8(g))){I++,A.writeUInt8(I,g);break}A.writeUInt8(0,g)}}},function(A){A.exports=JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}')},function(A,I,g){var B=g(28),C=g(1).Buffer,Q=g(14),E=g(0),i=g(133),o=g(23),t=g(67);function e(A,I,g,E){Q.call(this);var o=C.alloc(4,0);this._cipher=new B.AES(I);var e=this._cipher.encryptBlock(o);this._ghash=new i(e),g=function(A,I,g){if(12===I.length)return A._finID=C.concat([I,C.from([0,0,0,1])]),C.concat([I,C.from([0,0,0,2])]);var B=new i(g),Q=I.length,E=Q%16;B.update(I),E&&(E=16-E,B.update(C.alloc(E,0))),B.update(C.alloc(8,0));var o=8*Q,e=C.alloc(8);e.writeUIntBE(o,0,8),B.update(e),A._finID=B.state;var a=C.from(A._finID);return t(a),a}(this,g,e),this._prev=C.from(g),this._cache=C.allocUnsafe(0),this._secCache=C.allocUnsafe(0),this._decrypt=E,this._alen=0,this._len=0,this._mode=A,this._authTag=null,this._called=!1}E(e,Q),e.prototype._update=function(A){if(!this._called&&this._alen){var I=16-this._alen%16;I<16&&(I=C.alloc(I,0),this._ghash.update(I))}this._called=!0;var g=this._mode.encrypt(this,A);return this._decrypt?this._ghash.update(A):this._ghash.update(g),this._len+=A.length,g},e.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error("Unsupported state or unable to authenticate data");var A=o(this._ghash.final(8*this._alen,8*this._len),this._cipher.encryptBlock(this._finID));if(this._decrypt&&function(A,I){var g=0;A.length!==I.length&&g++;for(var B=Math.min(A.length,I.length),C=0;C<B;++C)g+=A[C]^I[C];return g}(A,this._authTag))throw new Error("Unsupported state or unable to authenticate data");this._authTag=A,this._cipher.scrub()},e.prototype.getAuthTag=function(){if(this._decrypt||!C.isBuffer(this._authTag))throw new Error("Attempting to get auth tag in unsupported state");return this._authTag},e.prototype.setAuthTag=function(A){if(!this._decrypt)throw new Error("Attempting to set auth tag in unsupported state");this._authTag=A},e.prototype.setAAD=function(A){if(this._called)throw new Error("Attempting to set AAD in unsupported state");this._ghash.update(A),this._alen+=A.length},A.exports=e},function(A,I,g){var B=g(28),C=g(1).Buffer,Q=g(14);function E(A,I,g,E){Q.call(this),this._cipher=new B.AES(I),this._prev=C.from(g),this._cache=C.allocUnsafe(0),this._secCache=C.allocUnsafe(0),this._decrypt=E,this._mode=A}g(0)(E,Q),E.prototype._update=function(A){return this._mode.encrypt(this,A,this._decrypt)},E.prototype._final=function(){this._cipher.scrub()},A.exports=E},function(A,I,g){var B=g(18);A.exports=w,w.simpleSieve=D,w.fermatTest=c;var C=g(3),Q=new C(24),E=new(g(72)),i=new C(1),o=new C(2),t=new C(5),e=(new C(16),new C(8),new C(10)),a=new C(3),r=(new C(7),new C(11)),n=new C(4),s=(new C(12),null);function h(){if(null!==s)return s;var A=[];A[0]=2;for(var I=1,g=3;g<1048576;g+=2){for(var B=Math.ceil(Math.sqrt(g)),C=0;C<I&&A[C]<=B&&g%A[C]!=0;C++);I!==C&&A[C]<=B||(A[I++]=g)}return s=A,A}function D(A){for(var I=h(),g=0;g<I.length;g++)if(0===A.modn(I[g]))return 0===A.cmpn(I[g]);return!0}function c(A){var I=C.mont(A);return 0===o.toRed(I).redPow(A.subn(1)).fromRed().cmpn(1)}function w(A,I){if(A<16)return new C(2===I||5===I?[140,123]:[140,39]);var g,s;for(I=new C(I);;){for(g=new C(B(Math.ceil(A/8)));g.bitLength()>A;)g.ishrn(1);if(g.isEven()&&g.iadd(i),g.testn(1)||g.iadd(o),I.cmp(o)){if(!I.cmp(t))for(;g.mod(e).cmp(a);)g.iadd(n)}else for(;g.mod(Q).cmp(r);)g.iadd(n);if(D(s=g.shrn(1))&&D(g)&&c(s)&&c(g)&&E.test(s)&&E.test(g))return g}}},function(A,I,g){var B=g(3),C=g(43);function Q(A){this.rand=A||new C.Rand}A.exports=Q,Q.create=function(A){return new Q(A)},Q.prototype._randbelow=function(A){var I=A.bitLength(),g=Math.ceil(I/8);do{var C=new B(this.rand.generate(g))}while(C.cmp(A)>=0);return C},Q.prototype._randrange=function(A,I){var g=I.sub(A);return A.add(this._randbelow(g))},Q.prototype.test=function(A,I,g){var C=A.bitLength(),Q=B.mont(A),E=new B(1).toRed(Q);I||(I=Math.max(1,C/48|0));for(var i=A.subn(1),o=0;!i.testn(o);o++);for(var t=A.shrn(o),e=i.toRed(Q);I>0;I--){var a=this._randrange(new B(2),i);g&&g(a);var r=a.toRed(Q).redPow(t);if(0!==r.cmp(E)&&0!==r.cmp(e)){for(var n=1;n<o;n++){if(0===(r=r.redSqr()).cmp(E))return!1;if(0===r.cmp(e))break}if(n===o)return!1}}return!0},Q.prototype.getDivisor=function(A,I){var g=A.bitLength(),C=B.mont(A),Q=new B(1).toRed(C);I||(I=Math.max(1,g/48|0));for(var E=A.subn(1),i=0;!E.testn(i);i++);for(var o=A.shrn(i),t=E.toRed(C);I>0;I--){var e=this._randrange(new B(2),E),a=A.gcd(e);if(0!==a.cmpn(1))return a;var r=e.toRed(C).redPow(o);if(0!==r.cmp(Q)&&0!==r.cmp(t)){for(var n=1;n<i;n++){if(0===(r=r.redSqr()).cmp(Q))return r.fromRed().subn(1).gcd(A);if(0===r.cmp(t))break}if(n===i)return(r=r.redSqr()).fromRed().subn(1).gcd(A)}}return!1}},function(A,I,g){"use strict";var B=I;function C(A){return 1===A.length?"0"+A:A}function Q(A){for(var I="",g=0;g<A.length;g++)I+=C(A[g].toString(16));return I}B.toArray=function(A,I){if(Array.isArray(A))return A.slice();if(!A)return[];var g=[];if("string"!=typeof A){for(var B=0;B<A.length;B++)g[B]=0|A[B];return g}if("hex"===I){(A=A.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(A="0"+A);for(B=0;B<A.length;B+=2)g.push(parseInt(A[B]+A[B+1],16))}else for(B=0;B<A.length;B++){var C=A.charCodeAt(B),Q=C>>8,E=255&C;Q?g.push(Q,E):g.push(E)}return g},B.zero2=C,B.toHex=Q,B.encode=function(A,I){return"hex"===I?Q(A):A}},function(A,I,g){"use strict";var B=I;B.base=g(30),B.short=g(145),B.mont=g(146),B.edwards=g(147)},function(A,I,g){"use strict";var B=g(12).rotr32;function C(A,I,g){return A&I^~A&g}function Q(A,I,g){return A&I^A&g^I&g}function E(A,I,g){return A^I^g}I.ft_1=function(A,I,g,B){return 0===A?C(I,g,B):1===A||3===A?E(I,g,B):2===A?Q(I,g,B):void 0},I.ch32=C,I.maj32=Q,I.p32=E,I.s0_256=function(A){return B(A,2)^B(A,13)^B(A,22)},I.s1_256=function(A){return B(A,6)^B(A,11)^B(A,25)},I.g0_256=function(A){return B(A,7)^B(A,18)^A>>>3},I.g1_256=function(A){return B(A,17)^B(A,19)^A>>>10}},function(A,I,g){"use strict";var B=g(12),C=g(24),Q=g(75),E=g(7),i=B.sum32,o=B.sum32_4,t=B.sum32_5,e=Q.ch32,a=Q.maj32,r=Q.s0_256,n=Q.s1_256,s=Q.g0_256,h=Q.g1_256,D=C.BlockHash,c=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function w(){if(!(this instanceof w))return new w;D.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=c,this.W=new Array(64)}B.inherits(w,D),A.exports=w,w.blockSize=512,w.outSize=256,w.hmacStrength=192,w.padLength=64,w.prototype._update=function(A,I){for(var g=this.W,B=0;B<16;B++)g[B]=A[I+B];for(;B<g.length;B++)g[B]=o(h(g[B-2]),g[B-7],s(g[B-15]),g[B-16]);var C=this.h[0],Q=this.h[1],D=this.h[2],c=this.h[3],w=this.h[4],f=this.h[5],d=this.h[6],F=this.h[7];for(E(this.k.length===g.length),B=0;B<g.length;B++){var G=t(F,n(w),e(w,f,d),this.k[B],g[B]),y=i(r(C),a(C,Q,D));F=d,d=f,f=w,w=i(c,G),c=D,D=Q,Q=C,C=i(G,y)}this.h[0]=i(this.h[0],C),this.h[1]=i(this.h[1],Q),this.h[2]=i(this.h[2],D),this.h[3]=i(this.h[3],c),this.h[4]=i(this.h[4],w),this.h[5]=i(this.h[5],f),this.h[6]=i(this.h[6],d),this.h[7]=i(this.h[7],F)},w.prototype._digest=function(A){return"hex"===A?B.toHex32(this.h,"big"):B.split32(this.h,"big")}},function(A,I,g){"use strict";var B=g(12),C=g(24),Q=g(7),E=B.rotr64_hi,i=B.rotr64_lo,o=B.shr64_hi,t=B.shr64_lo,e=B.sum64,a=B.sum64_hi,r=B.sum64_lo,n=B.sum64_4_hi,s=B.sum64_4_lo,h=B.sum64_5_hi,D=B.sum64_5_lo,c=C.BlockHash,w=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function f(){if(!(this instanceof f))return new f;c.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=w,this.W=new Array(160)}function d(A,I,g,B,C){var Q=A&g^~A&C;return Q<0&&(Q+=4294967296),Q}function F(A,I,g,B,C,Q){var E=I&B^~I&Q;return E<0&&(E+=4294967296),E}function G(A,I,g,B,C){var Q=A&g^A&C^g&C;return Q<0&&(Q+=4294967296),Q}function y(A,I,g,B,C,Q){var E=I&B^I&Q^B&Q;return E<0&&(E+=4294967296),E}function R(A,I){var g=E(A,I,28)^E(I,A,2)^E(I,A,7);return g<0&&(g+=4294967296),g}function u(A,I){var g=i(A,I,28)^i(I,A,2)^i(I,A,7);return g<0&&(g+=4294967296),g}function U(A,I){var g=E(A,I,14)^E(A,I,18)^E(I,A,9);return g<0&&(g+=4294967296),g}function S(A,I){var g=i(A,I,14)^i(A,I,18)^i(I,A,9);return g<0&&(g+=4294967296),g}function M(A,I){var g=E(A,I,1)^E(A,I,8)^o(A,I,7);return g<0&&(g+=4294967296),g}function l(A,I){var g=i(A,I,1)^i(A,I,8)^t(A,I,7);return g<0&&(g+=4294967296),g}function k(A,I){var g=E(A,I,19)^E(I,A,29)^o(A,I,6);return g<0&&(g+=4294967296),g}function N(A,I){var g=i(A,I,19)^i(I,A,29)^t(A,I,6);return g<0&&(g+=4294967296),g}B.inherits(f,c),A.exports=f,f.blockSize=1024,f.outSize=512,f.hmacStrength=192,f.padLength=128,f.prototype._prepareBlock=function(A,I){for(var g=this.W,B=0;B<32;B++)g[B]=A[I+B];for(;B<g.length;B+=2){var C=k(g[B-4],g[B-3]),Q=N(g[B-4],g[B-3]),E=g[B-14],i=g[B-13],o=M(g[B-30],g[B-29]),t=l(g[B-30],g[B-29]),e=g[B-32],a=g[B-31];g[B]=n(C,Q,E,i,o,t,e,a),g[B+1]=s(C,Q,E,i,o,t,e,a)}},f.prototype._update=function(A,I){this._prepareBlock(A,I);var g=this.W,B=this.h[0],C=this.h[1],E=this.h[2],i=this.h[3],o=this.h[4],t=this.h[5],n=this.h[6],s=this.h[7],c=this.h[8],w=this.h[9],f=this.h[10],M=this.h[11],l=this.h[12],k=this.h[13],N=this.h[14],K=this.h[15];Q(this.k.length===g.length);for(var Y=0;Y<g.length;Y+=2){var p=N,J=K,b=U(c,w),H=S(c,w),L=d(c,w,f,M,l),q=F(c,w,f,M,l,k),m=this.k[Y],v=this.k[Y+1],x=g[Y],W=g[Y+1],Z=h(p,J,b,H,L,q,m,v,x,W),X=D(p,J,b,H,L,q,m,v,x,W);p=R(B,C),J=u(B,C),b=G(B,C,E,i,o),H=y(B,C,E,i,o,t);var V=a(p,J,b,H),O=r(p,J,b,H);N=l,K=k,l=f,k=M,f=c,M=w,c=a(n,s,Z,X),w=r(s,s,Z,X),n=o,s=t,o=E,t=i,E=B,i=C,B=a(Z,X,V,O),C=r(Z,X,V,O)}e(this.h,0,B,C),e(this.h,2,E,i),e(this.h,4,o,t),e(this.h,6,n,s),e(this.h,8,c,w),e(this.h,10,f,M),e(this.h,12,l,k),e(this.h,14,N,K)},f.prototype._digest=function(A){return"hex"===A?B.toHex32(this.h,"big"):B.split32(this.h,"big")}},function(A,I,g){var B=g(0),C=g(26).Reporter,Q=g(4).Buffer;function E(A,I){C.call(this,I),Q.isBuffer(A)?(this.base=A,this.offset=0,this.length=A.length):this.error("Input not Buffer")}function i(A,I){if(Array.isArray(A))this.length=0,this.value=A.map((function(A){return A instanceof i||(A=new i(A,I)),this.length+=A.length,A}),this);else if("number"==typeof A){if(!(0<=A&&A<=255))return I.error("non-byte EncoderBuffer value");this.value=A,this.length=1}else if("string"==typeof A)this.value=A,this.length=Q.byteLength(A);else{if(!Q.isBuffer(A))return I.error("Unsupported type: "+typeof A);this.value=A,this.length=A.length}}B(E,C),I.DecoderBuffer=E,E.prototype.save=function(){return{offset:this.offset,reporter:C.prototype.save.call(this)}},E.prototype.restore=function(A){var I=new E(this.base);return I.offset=A.offset,I.length=this.offset,this.offset=A.offset,C.prototype.restore.call(this,A.reporter),I},E.prototype.isEmpty=function(){return this.offset===this.length},E.prototype.readUInt8=function(A){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(A||"DecoderBuffer overrun")},E.prototype.skip=function(A,I){if(!(this.offset+A<=this.length))return this.error(I||"DecoderBuffer overrun");var g=new E(this.base);return g._reporterState=this._reporterState,g.offset=this.offset,g.length=this.offset+A,this.offset+=A,g},E.prototype.raw=function(A){return this.base.slice(A?A.offset:this.offset,this.length)},I.EncoderBuffer=i,i.prototype.join=function(A,I){return A||(A=new Q(this.length)),I||(I=0),0===this.length?A:(Array.isArray(this.value)?this.value.forEach((function(g){g.join(A,I),I+=g.length})):("number"==typeof this.value?A[I]=this.value:"string"==typeof this.value?A.write(this.value,I):Q.isBuffer(this.value)&&this.value.copy(A,I),I+=this.length),A)}},function(A,I,g){var B=I;B._reverse=function(A){var I={};return Object.keys(A).forEach((function(g){(0|g)==g&&(g|=0);var B=A[g];I[B]=g})),I},B.der=g(167)},function(A,I,g){var B=g(0),C=g(25),Q=C.base,E=C.bignum,i=C.constants.der;function o(A){this.enc="der",this.name=A.name,this.entity=A,this.tree=new t,this.tree._init(A.body)}function t(A){Q.Node.call(this,"der",A)}function e(A,I){var g=A.readUInt8(I);if(A.isError(g))return g;var B=i.tagClass[g>>6],C=0==(32&g);if(31==(31&g)){var Q=g;for(g=0;128==(128&Q);){if(Q=A.readUInt8(I),A.isError(Q))return Q;g<<=7,g|=127&Q}}else g&=31;return{cls:B,primitive:C,tag:g,tagStr:i.tag[g]}}function a(A,I,g){var B=A.readUInt8(g);if(A.isError(B))return B;if(!I&&128===B)return null;if(0==(128&B))return B;var C=127&B;if(C>4)return A.error("length octect is too long");B=0;for(var Q=0;Q<C;Q++){B<<=8;var E=A.readUInt8(g);if(A.isError(E))return E;B|=E}return B}A.exports=o,o.prototype.decode=function(A,I){return A instanceof Q.DecoderBuffer||(A=new Q.DecoderBuffer(A,I)),this.tree._decode(A,I)},B(t,Q.Node),t.prototype._peekTag=function(A,I,g){if(A.isEmpty())return!1;var B=A.save(),C=e(A,'Failed to peek tag: "'+I+'"');return A.isError(C)?C:(A.restore(B),C.tag===I||C.tagStr===I||C.tagStr+"of"===I||g)},t.prototype._decodeTag=function(A,I,g){var B=e(A,'Failed to decode tag of "'+I+'"');if(A.isError(B))return B;var C=a(A,B.primitive,'Failed to get length of "'+I+'"');if(A.isError(C))return C;if(!g&&B.tag!==I&&B.tagStr!==I&&B.tagStr+"of"!==I)return A.error('Failed to match tag: "'+I+'"');if(B.primitive||null!==C)return A.skip(C,'Failed to match body of: "'+I+'"');var Q=A.save(),E=this._skipUntilEnd(A,'Failed to skip indefinite length body: "'+this.tag+'"');return A.isError(E)?E:(C=A.offset-Q.offset,A.restore(Q),A.skip(C,'Failed to match body of: "'+I+'"'))},t.prototype._skipUntilEnd=function(A,I){for(;;){var g=e(A,I);if(A.isError(g))return g;var B,C=a(A,g.primitive,I);if(A.isError(C))return C;if(B=g.primitive||null!==C?A.skip(C):this._skipUntilEnd(A,I),A.isError(B))return B;if("end"===g.tagStr)break}},t.prototype._decodeList=function(A,I,g,B){for(var C=[];!A.isEmpty();){var Q=this._peekTag(A,"end");if(A.isError(Q))return Q;var E=g.decode(A,"der",B);if(A.isError(E)&&Q)break;C.push(E)}return C},t.prototype._decodeStr=function(A,I){if("bitstr"===I){var g=A.readUInt8();return A.isError(g)?g:{unused:g,data:A.raw()}}if("bmpstr"===I){var B=A.raw();if(B.length%2==1)return A.error("Decoding of string type: bmpstr length mismatch");for(var C="",Q=0;Q<B.length/2;Q++)C+=String.fromCharCode(B.readUInt16BE(2*Q));return C}if("numstr"===I){var E=A.raw().toString("ascii");return this._isNumstr(E)?E:A.error("Decoding of string type: numstr unsupported characters")}if("octstr"===I)return A.raw();if("objDesc"===I)return A.raw();if("printstr"===I){var i=A.raw().toString("ascii");return this._isPrintstr(i)?i:A.error("Decoding of string type: printstr unsupported characters")}return/str$/.test(I)?A.raw().toString():A.error("Decoding of string type: "+I+" unsupported")},t.prototype._decodeObjid=function(A,I,g){for(var B,C=[],Q=0;!A.isEmpty();){var E=A.readUInt8();Q<<=7,Q|=127&E,0==(128&E)&&(C.push(Q),Q=0)}128&E&&C.push(Q);var i=C[0]/40|0,o=C[0]%40;if(B=g?C:[i,o].concat(C.slice(1)),I){var t=I[B.join(" ")];void 0===t&&(t=I[B.join(".")]),void 0!==t&&(B=t)}return B},t.prototype._decodeTime=function(A,I){var g=A.raw().toString();if("gentime"===I)var B=0|g.slice(0,4),C=0|g.slice(4,6),Q=0|g.slice(6,8),E=0|g.slice(8,10),i=0|g.slice(10,12),o=0|g.slice(12,14);else{if("utctime"!==I)return A.error("Decoding "+I+" time is not supported yet");B=0|g.slice(0,2),C=0|g.slice(2,4),Q=0|g.slice(4,6),E=0|g.slice(6,8),i=0|g.slice(8,10),o=0|g.slice(10,12);B=B<70?2e3+B:1900+B}return Date.UTC(B,C-1,Q,E,i,o,0)},t.prototype._decodeNull=function(A){return null},t.prototype._decodeBool=function(A){var I=A.readUInt8();return A.isError(I)?I:0!==I},t.prototype._decodeInt=function(A,I){var g=A.raw(),B=new E(g);return I&&(B=I[B.toString(10)]||B),B},t.prototype._use=function(A,I){return"function"==typeof A&&(A=A(I)),A._getDecoder("der").tree}},function(A,I,g){var B=g(0),C=g(4).Buffer,Q=g(25),E=Q.base,i=Q.constants.der;function o(A){this.enc="der",this.name=A.name,this.entity=A,this.tree=new t,this.tree._init(A.body)}function t(A){E.Node.call(this,"der",A)}function e(A){return A<10?"0"+A:A}A.exports=o,o.prototype.encode=function(A,I){return this.tree._encode(A,I).join()},B(t,E.Node),t.prototype._encodeComposite=function(A,I,g,B){var Q,E=function(A,I,g,B){var C;"seqof"===A?A="seq":"setof"===A&&(A="set");if(i.tagByName.hasOwnProperty(A))C=i.tagByName[A];else{if("number"!=typeof A||(0|A)!==A)return B.error("Unknown tag: "+A);C=A}if(C>=31)return B.error("Multi-octet tag encoding unsupported");I||(C|=32);return C|=i.tagClassByName[g||"universal"]<<6}(A,I,g,this.reporter);if(B.length<128)return(Q=new C(2))[0]=E,Q[1]=B.length,this._createEncoderBuffer([Q,B]);for(var o=1,t=B.length;t>=256;t>>=8)o++;(Q=new C(2+o))[0]=E,Q[1]=128|o;t=1+o;for(var e=B.length;e>0;t--,e>>=8)Q[t]=255&e;return this._createEncoderBuffer([Q,B])},t.prototype._encodeStr=function(A,I){if("bitstr"===I)return this._createEncoderBuffer([0|A.unused,A.data]);if("bmpstr"===I){for(var g=new C(2*A.length),B=0;B<A.length;B++)g.writeUInt16BE(A.charCodeAt(B),2*B);return this._createEncoderBuffer(g)}return"numstr"===I?this._isNumstr(A)?this._createEncoderBuffer(A):this.reporter.error("Encoding of string type: numstr supports only digits and space"):"printstr"===I?this._isPrintstr(A)?this._createEncoderBuffer(A):this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"):/str$/.test(I)?this._createEncoderBuffer(A):"objDesc"===I?this._createEncoderBuffer(A):this.reporter.error("Encoding of string type: "+I+" unsupported")},t.prototype._encodeObjid=function(A,I,g){if("string"==typeof A){if(!I)return this.reporter.error("string objid given, but no values map found");if(!I.hasOwnProperty(A))return this.reporter.error("objid not found in values map");A=I[A].split(/[\s\.]+/g);for(var B=0;B<A.length;B++)A[B]|=0}else if(Array.isArray(A)){A=A.slice();for(B=0;B<A.length;B++)A[B]|=0}if(!Array.isArray(A))return this.reporter.error("objid() should be either array or string, got: "+JSON.stringify(A));if(!g){if(A[1]>=40)return this.reporter.error("Second objid identifier OOB");A.splice(0,2,40*A[0]+A[1])}var Q=0;for(B=0;B<A.length;B++){var E=A[B];for(Q++;E>=128;E>>=7)Q++}var i=new C(Q),o=i.length-1;for(B=A.length-1;B>=0;B--){E=A[B];for(i[o--]=127&E;(E>>=7)>0;)i[o--]=128|127&E}return this._createEncoderBuffer(i)},t.prototype._encodeTime=function(A,I){var g,B=new Date(A);return"gentime"===I?g=[e(B.getFullYear()),e(B.getUTCMonth()+1),e(B.getUTCDate()),e(B.getUTCHours()),e(B.getUTCMinutes()),e(B.getUTCSeconds()),"Z"].join(""):"utctime"===I?g=[e(B.getFullYear()%100),e(B.getUTCMonth()+1),e(B.getUTCDate()),e(B.getUTCHours()),e(B.getUTCMinutes()),e(B.getUTCSeconds()),"Z"].join(""):this.reporter.error("Encoding "+I+" time is not supported yet"),this._encodeStr(g,"octstr")},t.prototype._encodeNull=function(){return this._createEncoderBuffer("")},t.prototype._encodeInt=function(A,I){if("string"==typeof A){if(!I)return this.reporter.error("String int or enum given, but no values map");if(!I.hasOwnProperty(A))return this.reporter.error("Values map doesn't contain: "+JSON.stringify(A));A=I[A]}if("number"!=typeof A&&!C.isBuffer(A)){var g=A.toArray();!A.sign&&128&g[0]&&g.unshift(0),A=new C(g)}if(C.isBuffer(A)){var B=A.length;0===A.length&&B++;var Q=new C(B);return A.copy(Q),0===A.length&&(Q[0]=0),this._createEncoderBuffer(Q)}if(A<128)return this._createEncoderBuffer(A);if(A<256)return this._createEncoderBuffer([0,A]);B=1;for(var E=A;E>=256;E>>=8)B++;for(E=(Q=new Array(B)).length-1;E>=0;E--)Q[E]=255&A,A>>=8;return 128&Q[0]&&Q.unshift(0),this._createEncoderBuffer(new C(Q))},t.prototype._encodeBool=function(A){return this._createEncoderBuffer(A?255:0)},t.prototype._use=function(A,I){return"function"==typeof A&&(A=A(I)),A._getEncoder("der").tree},t.prototype._skipDefault=function(A,I,g){var B,C=this._baseState;if(null===C.default)return!1;var Q=A.join();if(void 0===C.defaultBuffer&&(C.defaultBuffer=this._encodeValue(C.default,I,g).join()),Q.length!==C.defaultBuffer.length)return!1;for(B=0;B<Q.length;B++)if(Q[B]!==C.defaultBuffer[B])return!1;return!0}},function(A){A.exports=JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}')},function(A,I,g){var B=g(21),C=g(1).Buffer;function Q(A){var I=C.allocUnsafe(4);return I.writeUInt32BE(A,0),I}A.exports=function(A,I){for(var g,E=C.alloc(0),i=0;E.length<I;)g=Q(i++),E=C.concat([E,B("sha1").update(A).update(g).digest()]);return E.slice(0,I)}},function(A,I){A.exports=function(A,I){for(var g=A.length,B=-1;++B<g;)A[B]^=I[B];return A}},function(A,I,g){var B=g(3),C=g(1).Buffer;A.exports=function(A,I){return C.from(A.toRed(B.mont(I.modulus)).redPow(new B(I.publicExponent)).fromRed().toArray())}},function(A,I,g){"use strict";A.exports=function(A,I){return function(){for(var g=new Array(arguments.length),B=0;B<g.length;B++)g[B]=arguments[B];return A.apply(I,g)}}},function(A,I,g){"use strict";var B=g(6);function C(A){return encodeURIComponent(A).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}A.exports=function(A,I,g){if(!I)return A;var Q;if(g)Q=g(I);else if(B.isURLSearchParams(I))Q=I.toString();else{var E=[];B.forEach(I,(function(A,I){null!=A&&(B.isArray(A)?I+="[]":A=[A],B.forEach(A,(function(A){B.isDate(A)?A=A.toISOString():B.isObject(A)&&(A=JSON.stringify(A)),E.push(C(I)+"="+C(A))})))})),Q=E.join("&")}if(Q){var i=A.indexOf("#");-1!==i&&(A=A.slice(0,i)),A+=(-1===A.indexOf("?")?"?":"&")+Q}return A}},function(A,I,g){"use strict";A.exports=function(A){return!(!A||!A.__CANCEL__)}},function(A,I,g){"use strict";(function(I){var B=g(6),C=g(186),Q={"Content-Type":"application/x-www-form-urlencoded"};function E(A,I){!B.isUndefined(A)&&B.isUndefined(A["Content-Type"])&&(A["Content-Type"]=I)}var i,o={adapter:("undefined"!=typeof XMLHttpRequest?i=g(90):void 0!==I&&"[object process]"===Object.prototype.toString.call(I)&&(i=g(90)),i),transformRequest:[function(A,I){return C(I,"Accept"),C(I,"Content-Type"),B.isFormData(A)||B.isArrayBuffer(A)||B.isBuffer(A)||B.isStream(A)||B.isFile(A)||B.isBlob(A)?A:B.isArrayBufferView(A)?A.buffer:B.isURLSearchParams(A)?(E(I,"application/x-www-form-urlencoded;charset=utf-8"),A.toString()):B.isObject(A)?(E(I,"application/json;charset=utf-8"),JSON.stringify(A)):A}],transformResponse:[function(A){if("string"==typeof A)try{A=JSON.parse(A)}catch(A){}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(A){return A>=200&&A<300}};o.headers={common:{Accept:"application/json, text/plain, */*"}},B.forEach(["delete","get","head"],(function(A){o.headers[A]={}})),B.forEach(["post","put","patch"],(function(A){o.headers[A]=B.merge(Q)})),A.exports=o}).call(this,g(9))},function(A,I,g){"use strict";var B=g(6),C=g(187),Q=g(87),E=g(189),i=g(192),o=g(193),t=g(91);A.exports=function(A){return new Promise((function(I,e){var a=A.data,r=A.headers;B.isFormData(a)&&delete r["Content-Type"];var n=new XMLHttpRequest;if(A.auth){var s=A.auth.username||"",h=A.auth.password||"";r.Authorization="Basic "+btoa(s+":"+h)}var D=E(A.baseURL,A.url);if(n.open(A.method.toUpperCase(),Q(D,A.params,A.paramsSerializer),!0),n.timeout=A.timeout,n.onreadystatechange=function(){if(n&&4===n.readyState&&(0!==n.status||n.responseURL&&0===n.responseURL.indexOf("file:"))){var g="getAllResponseHeaders"in n?i(n.getAllResponseHeaders()):null,B={data:A.responseType&&"text"!==A.responseType?n.response:n.responseText,status:n.status,statusText:n.statusText,headers:g,config:A,request:n};C(I,e,B),n=null}},n.onabort=function(){n&&(e(t("Request aborted",A,"ECONNABORTED",n)),n=null)},n.onerror=function(){e(t("Network Error",A,null,n)),n=null},n.ontimeout=function(){var I="timeout of "+A.timeout+"ms exceeded";A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),e(t(I,A,"ECONNABORTED",n)),n=null},B.isStandardBrowserEnv()){var c=g(194),w=(A.withCredentials||o(D))&&A.xsrfCookieName?c.read(A.xsrfCookieName):void 0;w&&(r[A.xsrfHeaderName]=w)}if("setRequestHeader"in n&&B.forEach(r,(function(A,I){void 0===a&&"content-type"===I.toLowerCase()?delete r[I]:n.setRequestHeader(I,A)})),B.isUndefined(A.withCredentials)||(n.withCredentials=!!A.withCredentials),A.responseType)try{n.responseType=A.responseType}catch(I){if("json"!==A.responseType)throw I}"function"==typeof A.onDownloadProgress&&n.addEventListener("progress",A.onDownloadProgress),"function"==typeof A.onUploadProgress&&n.upload&&n.upload.addEventListener("progress",A.onUploadProgress),A.cancelToken&&A.cancelToken.promise.then((function(A){n&&(n.abort(),e(A),n=null)})),void 0===a&&(a=null),n.send(a)}))}},function(A,I,g){"use strict";var B=g(188);A.exports=function(A,I,g,C,Q){var E=new Error(A);return B(E,I,g,C,Q)}},function(A,I,g){"use strict";var B=g(6);A.exports=function(A,I){I=I||{};var g={},C=["url","method","params","data"],Q=["headers","auth","proxy"],E=["baseURL","url","transformRequest","transformResponse","paramsSerializer","timeout","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","maxContentLength","validateStatus","maxRedirects","httpAgent","httpsAgent","cancelToken","socketPath"];B.forEach(C,(function(A){void 0!==I[A]&&(g[A]=I[A])})),B.forEach(Q,(function(C){B.isObject(I[C])?g[C]=B.deepMerge(A[C],I[C]):void 0!==I[C]?g[C]=I[C]:B.isObject(A[C])?g[C]=B.deepMerge(A[C]):void 0!==A[C]&&(g[C]=A[C])})),B.forEach(E,(function(B){void 0!==I[B]?g[B]=I[B]:void 0!==A[B]&&(g[B]=A[B])}));var i=C.concat(Q).concat(E),o=Object.keys(I).filter((function(A){return-1===i.indexOf(A)}));return B.forEach(o,(function(B){void 0!==I[B]?g[B]=I[B]:void 0!==A[B]&&(g[B]=A[B])})),g}},function(A,I,g){"use strict";function B(A){this.message=A}B.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},B.prototype.__CANCEL__=!0,A.exports=B},function(A,I,g){"use strict";var B=g(95),C={init:function(){return new Promise((function(A){Object(B.a)({onRuntimeInitialized:function(){A({instance:this})}})}))}};I.a=C},function(A,I,g){"use strict";(function(A,B,C,Q){var E,i=g(10),o=g.n(i),t=(E=(E="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||A,function(A){A=void 0!==(A=A||{})?A:{};var I,i={};for(I in A)A.hasOwnProperty(I)&&(i[I]=A[I]);var t=[],e="./this.program",a=function(A,I){throw I},r=!1,n=!1,s=!1,h=!1;r="object"===("undefined"==typeof window?"undefined":o()(window)),n="function"==typeof importScripts,s="object"===(void 0===B?"undefined":o()(B))&&"object"===o()(B.versions)&&"string"==typeof B.versions.node,h=!r&&!s&&!n;var D,c,w,f,d="";function F(I){return A.locateFile?A.locateFile(I,d):d+I}s?(d=n?g(49).dirname(d)+"/":C+"/",D=function(A,I){var B=_g(A);return B?I?B:B.toString():(w||(w=g(101)),f||(f=g(49)),A=f.normalize(A),w.readFileSync(A,I?null:"utf8"))},c=function(A){var I=D(A,!0);return I.buffer||(I=new Uint8Array(I)),p(I.buffer),I},B.argv.length>1&&(e=B.argv[1].replace(/\\/g,"/")),t=B.argv.slice(2),B.on("uncaughtException",(function(A){if(!(A instanceof NB))throw A})),B.on("unhandledRejection",pA),a=function(A){B.exit(A)},A.inspect=function(){return"[Emscripten Module object]"}):h?("undefined"!=typeof read&&(D=function(A){var I=_g(A);return I?jg(I):read(A)}),c=function(A){var I;return(I=_g(A))?I:"function"==typeof readbuffer?new Uint8Array(readbuffer(A)):(I=read(A,"binary"),p("object"===o()(I)),I)},"undefined"!=typeof scriptArgs?t=scriptArgs:void 0!==arguments&&(t=arguments),"function"==typeof quit&&(a=function(A){quit(A)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(r||n)&&(n?d=self.location.href:document.currentScript&&(d=document.currentScript.src),E&&(d=E),d=0!==d.indexOf("blob:")?d.substr(0,d.lastIndexOf("/")+1):"",D=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=_g(A);if(g)return jg(g);throw I}},n&&(c=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=_g(A);if(g)return g;throw I}}));var G=A.print||console.log.bind(console),y=A.printErr||console.warn.bind(console);for(I in i)i.hasOwnProperty(I)&&(A[I]=i[I]);function R(A){var I=BA[eA>>2],g=I+A+15&-16;return g>Rg()&&pA(),BA[eA>>2]=g,I}i=null,A.arguments&&(t=A.arguments),A.thisProgram&&(e=A.thisProgram),A.quit&&(a=A.quit);var u,U,S,M={"f64-rem":function(A,I){return A%I},debugger:function(){}},l=(new Array(0),0),k=function(A){l=A},N=function(){return l};A.wasmBinary&&(u=A.wasmBinary),A.noExitRuntime&&(U=A.noExitRuntime),"object"!==("undefined"==typeof WebAssembly?"undefined":o()(WebAssembly))&&y("no native wasm support detected");var K=new WebAssembly.Table({initial:878,maximum:878,element:"anyfunc"}),Y=!1;function p(A,I){A||pA("Assertion failed: "+I)}function J(A){return cA?dB(A):R(A)}var b="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function H(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.subarray&&b)return b.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var t=E-65536;Q+=String.fromCharCode(55296|t>>10,56320|1023&t)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function L(A,I){return A?H(AA,A,I):""}function q(A,I,g,B){if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C}function m(A,I,g){return q(A,AA,I,g)}function v(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&(B=65536+((1023&B)<<10)|1023&A.charCodeAt(++g)),B<=127?++I:I+=B<=2047?2:B<=65535?3:4}return I}var x="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function W(A){for(var I=A,g=I>>1;IA[g];)++g;if((I=g<<1)-A>32&&x)return x.decode(AA.subarray(A,I));for(var B=0,C="";;){var Q=IA[A+2*B>>1];if(0==Q)return C;++B,C+=String.fromCharCode(Q)}}function Z(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);IA[I>>1]=E,I+=2}return IA[I>>1]=0,I-B}function X(A){return 2*A.length}function V(A){for(var I=0,g="";;){var B=BA[A+4*I>>2];if(0==B)return g;if(++I,B>=65536){var C=B-65536;g+=String.fromCharCode(55296|C>>10,56320|1023&C)}else g+=String.fromCharCode(B)}}function O(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),BA[I>>2]=E,(I+=4)+4>C)break}return BA[I>>2]=0,I-B}function T(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function j(A){var I=v(A)+1,g=dB(I);return g&&q(A,$,g,I),g}function P(A,I){$.set(A,I)}function z(A,I,g){for(var B=0;B<A.length;++B)$[I++>>0]=A.charCodeAt(B);g||($[I>>0]=0)}var _,$,AA,IA,gA,BA,CA,QA,EA,iA=65536;function oA(I){_=I,A.HEAP8=$=new Int8Array(I),A.HEAP16=IA=new Int16Array(I),A.HEAP32=BA=new Int32Array(I),A.HEAPU8=AA=new Uint8Array(I),A.HEAPU16=gA=new Uint16Array(I),A.HEAPU32=CA=new Uint32Array(I),A.HEAPF32=QA=new Float32Array(I),A.HEAPF64=EA=new Float64Array(I)}var tA=5304176,eA=61104,aA=A.TOTAL_MEMORY||268435456;function rA(I){for(;I.length>0;){var g=I.shift();if("function"!=typeof g){var B=g.func;"number"==typeof B?void 0===g.arg?A.dynCall_v(B):A.dynCall_vi(B,g.arg):B(void 0===g.arg?null:g.arg)}else g()}}(S=A.wasmMemory?A.wasmMemory:new WebAssembly.Memory({initial:aA/iA,maximum:aA/iA}))&&(_=S.buffer),aA=_.byteLength,oA(_),BA[eA>>2]=tA;var nA=[],sA=[],hA=[],DA=[],cA=!1;function wA(){if(A.preRun)for("function"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)yA(A.preRun.shift());rA(nA)}function fA(){cA=!0,A.noFSInit||aI.init.initialized||aI.init(),tI.init(),rA(sA)}function dA(){aI.ignorePermissions=!1,rA(hA)}function FA(){}function GA(){if(A.postRun)for("function"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)RA(A.postRun.shift());rA(DA)}function yA(A){nA.unshift(A)}function RA(A){DA.unshift(A)}var uA=Math.abs,UA=Math.ceil,SA=Math.floor,MA=Math.min,lA=0,kA=null,NA=null;function KA(I){lA++,A.monitorRunDependencies&&A.monitorRunDependencies(lA)}function YA(I){if(lA--,A.monitorRunDependencies&&A.monitorRunDependencies(lA),0==lA&&(null!==kA&&(clearInterval(kA),kA=null),NA)){var g=NA;NA=null,g()}}function pA(I){throw A.onAbort&&A.onAbort(I),G(I+=""),y(I),Y=!0,I="abort("+I+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(I)}A.preloadedImages={},A.preloadedAudios={};var JA="data:application/octet-stream;base64,";function bA(A){return String.prototype.startsWith?A.startsWith(JA):0===A.indexOf(JA)}var HA,LA,qA="data:application/octet-stream;base64,AGFzbQEAAAABjwhzYAF/AX9gAX8AYAJ/fwF/YAJ/fwBgA39/fwF/YAV/f39/fwBgA39/fwBgBH9/f38AYAV/f39/fwF/YAR/f39/AX9gBn9/f39/fwF/YAAAYAZ/f39/f38AYAd/f39/f39/AGAIf39/f39/f38Bf2AHf39/f39/fwF/YAABf2ABfQF9YAF/AXxgBX9/f398AX9gA39+fwF+YAV/f39/fgF/YAh/f39/f39/fwBgCn9/f39/f39/f38AYAN/f30AYAN/f3wAYAJ/fABgBn9/f39/fAF/YAN/f38BfWACfX0BfWACf38BfGADf39/AXxgAnx8AXxgCX9/f39/f39/fwF/YAZ/fH9/f38Bf2AEf39/fwF+YAF8AXxgBX9/fn9/AGACf30AYAp/f39/f39/f39/AX9gDH9/f39/f39/f39/fwF/YAV/fX1/fwF/YAF9AX9gAX8BfWAGf39/f39/AXxgAnx/AXxgD39/f39/f39/f39/f39/fwBgDX9/f39/fX19fX19fX0AYAR/f399AGAFf399fX8AYAV/fX19fQBgBn98fH9/fwBgC39/f39/f39/f39/AX9gEX9/f39/f39/f319fX19fX19AX9gBn9/fX1/fwF/YAJ+fwF/YAF8AX9gBH9/f34BfmACf38BfWAEf39/fwF9YAN/fX0BfWABfAF9YAl/f39/f39/f38AYBF/f39/f39/f399fX19fX19fQBgBn9/f39/fQBgCH9/f39/fX19AGAJf39/f399fX19AGAFf39/fX0AYAd/f399fX1/AGAEf39/fABgA39/fgBgBn9/fX99fwBgAn9+AGADf35/AGADf319AGAEf319fwBgBn99fX19fwBgBH98fH8AYAx/f39/f39/f39/fH8Bf2AOf39/f39/f39/f3x/f38Bf2ATf39/f39/f39/fH9/f39/f39/fwF/YAx/f39/f39/f31/f38Bf2Aif39/f39/f398fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fwF/YAd/f39/f398AX9gB39/f398f38Bf2ADf399AX9gBX9/fX1/AX9gB39/fH9/f38Bf2APf398fHx8fHx8fHx8fHx8AX9gBH9+f38Bf2ACf30Bf2AFf319fX0Bf2ACf3wBf2ADfn9/AX9gAn1/AX9gAnx/AX9gAX8BfmACf38BfmACfn4BfmAFf39/f38BfWAHf39/f39/fwF9YAd/f39/f399AX1gBn9/f39/fQF9YAZ/f39/fX0BfWAEf39/fQF9YAN/f30BfWAFf319f38BfWACfX8BfWADfX19AX1gBH19fX0BfWAFf39/f38BfGAEf398fwF8YAN8fH8BfGADfHx8AXxgBnx8fHx8fAF8ApsEPANlbnYBYQALA2VudgFiAAEDZW52AWMAAQNlbnYBZAABA2VudgFlAAYDZW52AWYAAANlbnYBZwADA2VudgFoABADZW52AWkABgNlbnYBagAMA2VudgFrAAUDZW52AWwAEANlbnYBbQABA2VudgFuAAADZW52AW8AAQNlbnYBcAADA2VudgFxAAIDZW52AXIABQNlbnYBcwAGA2VudgF0AAADZW52AXUAAgNlbnYBdgADA2VudgF3AAYDZW52AXgAGQNlbnYBeQAAA2VudgF6AAIDZW52AUEAAQNlbnYBQgAHA2VudgFDAAYDZW52AUQACAhhc20yd2FzbQdmNjQtcmVtACADZW52AUUACANlbnYBRgAJA2VudgFHAAkDZW52AUgAAANlbnYBSQAkA2VudgFKAAADZW52AUsABANlbnYBTAAEA2VudgFNABADZW52AU4AUgNlbnYBTwAPA2VudgFQABMDZW52AVEAWANlbnYBUgACA2VudgFTAAMDZW52AVQAAwNlbnYBVQAFA2VudgFWAAkDZW52AVcACQNlbnYBWAACA2VudgFZAAIDZW52AVoAAgNlbnYBXwACA2VudgEkAAEDZW52DF9fdGFibGVfYmFzZQN/AAZnbG9iYWwDTmFOA3wABmdsb2JhbAhJbmZpbml0eQN8AANlbnYGbWVtb3J5AgGAIIAgA2VudgV0YWJsZQFwAe4G7gYDyAvGCwIBAgIDAQcCAQMCACoABAEBAgEDAwQ8AgICAAAAAAEDAwBqKwYQAgEDAAkAAQQGCgkCEQEBAikDAQAABjgABQUIBwMCAwgEBgBtBEgEAxwAAwEEAAIDGiwDPT0qCRgBAwoICAgJAB0CLQgcAw4OCikGBgkGVAQJAwcCAgACAAQDMAYYACoGADcCAwIGAgIAAgEHBw4GAwYnAScAESBwBgAJCQJlZAMBHQYGMQMdAzYCBAIDCAYCBgMCAw0DAAYAYgwCBwZOBgodOgMA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dCABaigCACIERQ0AIAAgBEYEQCADQQN0QQRqIAFqKAIADwUgA0EBaiEDDAILAAsLQQALcgEDfyMGIQMjBkEQaiQGIAJBb0sEQBAACyACQQtJBEAgACACOgALBSAAIAJBEGpBcHEiBBBRIgU2AgAgACAEQYCAgIB4cjYCCCAAIAI2AgQgBSEACyAAIAEgAhCoASADQQA6AAAgACACaiADEF8gAyQGCwQAQQALDQAgACADlCABIAKUkwsbACACBH8gACgCBCABKAIEELMBRQUgACABRgsLRQICfwF+IAAgATcDcCAAIAAoAggiAiAAKAIEIgNrrCIENwN4IAFCAFIgBCABVXEEQCAAIAMgAadqNgJoBSAAIAI2AmgLCycBAn8jBiEDIwZBEGokBiADIAI2AgAgACABIAMQlQMhBCADJAYgBAsoAQJ/An8jBiEDIwZBEGokBiAAQQJBzIcBQZjPAkEeIAEQCSADCyQGCzEBAn0gASoCACAAKgIAIgOTIAIqAgQgACoCBCIEk5QgASoCBCAEkyACKgIAIAOTlJMLBwAgAEEIags8AQJ/IAAoAgQgACgCACIDa0ECdSICIAFJBEAgACABIAJrEP8IBSACIAFLBEAgACABQQJ0IANqNgIECwsLEwAgAEGgiwE2AgAgAEEEahDoCQuBAQACQAJAIAIoAgRBsAFxQRh0QRh1QRBrIgIEQCACQRBGBEAMAgUMAwsACwJAAkAgACwAACICQStrDgMAAQABCyAAQQFqIQAMAgsgAkEwRiABIABrQQFKcUUNASAALAABQdgAayIBQQAgAUEgRxsNASAAQQJqIQAMAQsgASEACyAACwoAIABBUGpBCkkLQQECf0EMEEQiAgRAIAIgASAAQQN0bBBEIgM2AgAgAwRAIAIgADYCBCACIAE2AggFIAIQOEEAIQILBUEAIQILIAIL3AEBAX8gACgCACECIAAgASgCADYCACABIAI2AgAgACgCBCECIAAgASgCBDYCBCABIAI2AgQgACgCCCECIAAgASgCCDYCCCABIAI2AgggACgCDCECIAAgASgCDDYCDCABIAI2AgwgACgCECECIAAgASgCEDYCECABIAI2AhAgACgCFCECIAAgASgCFDYCFCABIAI2AhQgACgCGCECIAAgASgCGDYCGCABIAI2AhggACgCHCECIAAgASgCHDYC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J0sEQCAAECRFBEBBpMUDQTA2AgBBfw8LC0Gw3QMgADYCACABCwsAIAC7EN0JthBDCyoBAX8jBiEDIwZBEGokBiADIAI2AgAgAEH/////ByABIAMQqQEaIAMkBgsOACAAQeiJASgCABD/BAuGAQICfwF+IACnIQIgAEL/////D1YEQANAIAFBf2oiASAAIABCChD2ASIEQgp+fadB/wFxQTByOgAAIABC/////58BVgRAIAQhAAwBCwsgBKchAgsgAgRAA0AgAUF/aiIBIAIgAkEKEEgiA0EKbGtBMHI6AAAgAkEKTwRAIAMhAgwBCwsLIAELGgAgACABEKoCIgBBACAALQAAIAFB/wFxRhsLKAECfwJ/IwYhAyMGQRBqJAYgAEEDQYCHAUGutwJBAiABEAkgAwskBgsNACAAKAIEIAEoAgRLCxAAIAAgATYCACAAIAI2AgQLDQAgACgCECABQRRsagsQACAAKAIEIAEgACgCAGxqCwgAIABB9ABqCwwAIAAgASAAIAFKGws/AQJ/IAAoAgQhAiAAKAIIIQEDQCABIAJHBEAgACABQXxqIgE2AggMAQsLIAAoAgAiAQRAIAAoAgwaIAEQOAsLcwEBfyAAQQA2AgwgACADNgIQIAEEQCABQf////8DSwRAQQgQBSIDEIgBIANBtIsBNgIAIANB+PcAQRYQBAUgAUECdBBRIQQLCyAAIAQ2AgAgACACQQJ0IARqIgI2AgggACACNgIEIAAgAUECdCAEajYCDAsGAEEYEAILCABBDRACQQALiwEBA38jBiEDIwZBEGokBiACQe////8DSwRAEAALIAJBAkkEQCAAIAI6AAsgACEEBSACQQRqQXxxIgVB/////wNLBEAQAAUgACAFQQJ0EFEiBDYCACAAIAVBgICAgHhyNgIIIAAgAjYCBAsLIAQgASACEKcBIANBADYCACACQQJ0IARqIAMQbiADJAYLuQEBBX8jBiEDIwZBEGokBiADIAE6AAAgACwACyIBQQBIIgUEfyAAKAIEIQIgACgCCEH/////B3FBf2oFIAFB/wFxIQJBCgshASADQQFqIQQCQAJAIAEgAkYEQCAAIAFBASABIAEQ3QIgACwAC0EASA0BBSAFDQELIAAgAkEBajoACwwBCyAAKAIAIQYgACACQQFqNgIEIAYhAAsgACACaiIAIAMQXyAE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aiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQTRqIgEQSCIEIAFJBEAgASECIAMhAEEBDAELIAMgASAEbEYEQCABIQJBCQwBCyADIAJBOmoiARBIIgQgAUkEQCABIQIgAyEAQQEMAQsgAyABIARsRgRAIAEhAkEJDAELIAMgAkE8aiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQcIAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQcYAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQcgAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQc4AaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQdIAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQdgAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQeAAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQeQAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQeYAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQeoAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQewAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQfAAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQfgAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQf4AaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQYIBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQYgBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQYoBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQY4BaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQZQBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQZYBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQZwBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQaIBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQaYBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQagBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQawBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQbIBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQbQBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQboBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQb4BaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQcABaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQcQBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQcYBaiIBEEgiBCABSQRAIAEhAiAD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BiwAAwRAQQEhAgNAIARBkAFqIAFBAnQgCmooAgBBBXQiCUECdGpBAzYCACAJIARBkAlqaiABIAZBEWpqIgMsAAA6AAAgBEGQAWogCUEBciIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEBaiIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogCUEDciIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEBaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUECaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEDaiIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogCUEHciIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEBaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUECaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEDaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEEaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEFaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEGaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEHaiIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogCUEPciIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEBaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUECaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEDaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEEaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEFaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEGaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEHaiIH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AgggACgCBGusfSEBCwJAAkAgACgCFCAAKAIcTQ0AIABBAEEAIAAoAiRBP3FBygFqEQQAGiAAKAIUDQAMAQsgAEEANgIQIABBADYCHCAAQQA2AhQgACABIAIgACgCKEEDcUGmA2oRFABCAFMEf0F/BSAAQQA2AgggAEEANgIEIAAgACgCAEFvcTYCAEEACxoLC5EBAgF/An4CQAJAIAC9IgNCNIgiBKdB/w9xIgIEQCACQf8PRgRADAMFDAILAAsgASAARAAAAAAAAAAAYgR/IABEAAAAAAAA8EOiIAEQigMhACABKAIAQUBqBUEACzYCAAwBCyABIASnQf8PcUGCeGo2AgAgA0L/////////h4B/g0KAgICAgICA8D+EvyEACyAACxEAIAAEfyAAIAEQngEFQQALC74DAwF/AX4BfCABQRRNBEACQAJAAkACQAJAAkACQAJAAkACQAJAIAFBCWsOCgABAgMEBQYHCAkKCyACKAIAQQNqQXxxIgEoAgAhAyACIAFBBGo2AgAgACADNgIADAkLIAIoAgBBA2pBfHEiASgCACEDIAIgAUEEajYCACAAIAOsNwMADAgLIAIoAgBBA2pBfHEiASgCACEDIAIgAUEEajYCACAAIAOtNwMADAcLIAIoAgBBB2pBeHEiASkDACEEIAIgAUEIajYCACAAIAQ3AwAMBgsgAigCAEEDakF8cSIBKAIAIQMgAiABQQRqNgIAIAAgA0H//wNxQRB0QRB1rDcDAAwFCyACKAIAQQNqQXxxIgEoAgAhAyACIAFBBGo2AgAgACADQf//A3GtNwMADAQLIAIoAgBBA2pBfHEiASgCACEDIAIgAUEEajYCACAAIANB/wFxQRh0QRh1rDcDAAwDCyACKAIAQQNqQXxxIgEoAgAhAyACIAFBBGo2AgAgACADQf8Bca03AwAMAgsgAigCAEEHakF4cSIBKwMAIQUgAiABQQhqNgIAIAAgBTkDAAwBCyAAIAJB6QURAwALCwtAAQJ/IAAoAgAsAAAQigEEQANAIAAoAgAiAiwAACABQQpsQVBqaiEBIAAgAkEBajYCACACLAABEIoBDQALCyABCwkAIAAgARCfAQsJACAAIAEQjgULIgAgAL1C////////////AIMgAb1CgICAgICAgICAf4OEvwvgAwIDfwF+An4CQAJAAkACQCAAKAIEIgIgACgCaEkEfyAAIAJBAWo2AgQgAi0AAAUgABBUCyICQStrDgMAAQABCyACQS1GIQQgAUEARyAAKAIEIgMgACgCaEkEfyAAIANBAWo2AgQgAy0AAAUgABBUCyIDQVBqIgJBCUtxBH4gACgCaAR+IAAgACgCBEF/ajYCBAwEBUKAgICAgICAgIB/CwUgAyEBDAILDAMLIAIiAUFQaiECCyACQQlLDQBBACECA0AgAUFQaiACQQpsaiECIAJBzJmz5gBIIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLIgFBUGoiA0EKSXENAAsgAqwhBSADQQpJBEADQCABrEJQfCAFQgp+fCEFIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLIgFBUGoiAkEKSSAFQq6PhdfHwuujAVNxDQALIAJBCkkEQANAIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLQVBqQQpJDQALCwsgACgCaARAIAAgACgCBEF/ajYCBAtCACAFfSAFIAQbDAELIAAoAmgEQCAAIAAoAgRBf2o2AgQLQoCAgICAgICAgH8LC8kHAQV/AnwCQAJAAkACQAJAIAEOAwABAgMLQet+IQRBGCEFDAMLQc53IQRBNSEFDAILQc53IQRBNSEFDAELRAAAAAAAAAAADAELA0AgACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAsiARCyAQ0ACwJAAkACQCABQStrDgMAAQABC0EBIAFBLUZBAXRrIQYgACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAshAQwBC0EBIQYLAkACQAJAA38gA0H+/QJqLAAAIAFBIHJGBH8gA0EHSQRAIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLIQELIANBAWoiA0EISQ0BQQgFIAMLCyIDQf////8HcUEDaw4GAQAAAAACAAsgAkEARyIHIANBA0txBEAgA0EIRg0CDAELIANFBEACQEEAIQMDfyADQbz+AmosAAAgAUEgckcNASADQQJJBEAgACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAshAQsgA0EBaiIDQQNJDQBBAwshAwsLAkACQAJAIAMOBAECAgACCyAAKAIEIgEgACgCaEkEfyAAIAFBAWo2AgQgAS0AAAUgABBUC0EoRwRAIwEgACgCaEUNBRogACAAKAIEQX9qNgIEIwEMBQtBASEBA0BBACAAKAIEIgIgACgCaEkEfyAAIAJBAWo2AgQgAi0AAAUgABBUCyICQVBqQQpJIAJBv39qQRpJckUgAkHfAEYgAkGff2pBGklyG0UEQCABQQFqIQEMAQsLIwEgAkEpRg0EGiAAKAJoRSICRQRAIAAgACgCBEF/ajYCBAsgB0UEQEGkxQNBHDYCACAAQgAQggFEAAAAAAAAAAAMBQsjASABRQ0EGgNAIAJFBEAgACAAKAIEQX9qNgIECyMBIAFBf2oiAUUNBRoMAAALAAsgACABQTBGBH8gACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAtBIHJB+ABGBEAgACAFIAQgBiACEJAFDAULIAAoAmgEQCAAIAAoAgRBf2o2AgQLQTAFIAELIAUgBCAGIAIQjwUMAwsgACgCaARAIAAgACgCBEF/ajYCBAtBpMUDQRw2AgAgAEIAEIIBRAAAAAAAAAAADAILIAAoAmhFIgFFBEAgACAAKAIEQX9qNgIECyACQQBHIANBA0txBEADQCABRQRAIAAgACgCBEF/ajYCBAsgA0F/aiIDQQNLDQALCwsgBrIjAraUuwsLvgsCBX8FfiABQSRLBEBBpMUDQRw2AgBCACEDBQJAA0AgACgCBCIEIAAoAmhJBH8gACAEQQFqNgIEIAQtAAAFIAAQVAsiBBCyAQ0ACwJAAkAgBEEraw4DAAEAAQsgBEEtRkEfdEEfdSEHIAAoAgQiBCAAKAJoSQR/IAAgBEEBajYCBCAELQAABSAAEFQLIQQMAAsgAUUhBQJAAkACQCABQRByQRBGIARBMEZxBEACQCAAKAIEIgQgACgCaEkEfyAAIARBAWo2AgQgBC0AAAUgABBUCyIEQSByQfgARwRAIAUEQCAEIQJBCCEBDAQFIAQhAgwCCwALIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLIgFBwdQAai0AAEEPSgRAIAAoAmhFIgFFBEAgACAAKAIEQX9qNgIECyACRQRAIABCABCCAUIAIQMMBwsgAQRAQgAhAwwHCyAAIAAoAgRBf2o2AgRCACEDDAYFIAEhAkEQIQEMAwsACwVBCiABIAUbIgEgBEHB1ABqLQAASwR/IAQFIAAoAmgEQCAAIAAoAgRBf2o2AgQLIABCABCCAUGkxQNBHDYCAEIAIQMMBQshAgsgAUEKRw0AIAJBUGoiAkEKSQRAQQAhAQNAIAFBCmwgAmohASAAKAIEIgIgACgCaEkEfyAAIAJBAWo2AgQgAi0AAAUgABBUCyIEQVBqIgJBCkkgAUGZs+bMAUlxDQALIAGtIQkgAkEKSQRAIAQhAQNAIAlCCn4iCiACrCILQn+FVgRAQQohAgwFCyAKIAt8IQkgACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAsiAUFQaiICQQpJIAlCmrPmzJmz5swZVHENAAsgAkEJTQRAQQohAgwECwsLDAILIAEgAUF/anFFBEAgAUEXbEEFdkEHcUGH/gJqLAAAIQYgASACQcHUAGosAAAiCEH/AXEiBUsEQEEAIQQgBSECA0AgBCAGdCACciIEQYCAgMAASSABIAAoAgQiAiAAKAJoSQR/IAAgAkEBajYCBCACLQAABSAAEFQLIgVBwdQAaiwAACIIQf8BcSICS3ENAAsgBK0hCSAFIQQgAiEFBSACIQQLIAghAiABIAVNQn8gBq0iCogiCyAJVHIEQCABIQIgBCEBDAILA0AgASAAKAIEIgQgACgCaEkEfyAAIARBAWo2AgQgBC0AAAUgABBUCyIFQcHUAGosAAAiBEH/AXFNIAJB/wFxrSAJIAqGhCIJIAtWcgRAIAEhAiAFIQEMAwUgBCECDAELAAALAAsgASACQcHUAGosAAAiBkH/AXEiBUsEQEEAIQQgBSECA0AgASAEbCACaiIEQcfj8ThJIAEgACgCBCICIAAoAmhJBH8gACACQQFqNgIEIAItAAAFIAAQVAsiBUHB1ABqLAAAIgZB/wFxIgJLcQ0ACyAErSEJIAUhBCACIQUFIAIhBAsgBiECIAGtIQogASAFSwR/Qn8gChD2ASELA38gCSALVgRAIAEhAiAEIQEMAwsgCSAKfiIMIAJB/wFxrSINQn+FVgRAIAEhAiAEIQEMAwsgDCANfCEJIAEgACgCBCICIAAoAmhJBH8gACACQQFqNgIEIAItAAAFIAAQVAsiBEHB1ABqLAAAIgJB/wFxSw0AIAEhAiAECwUgASECIAQLIQELIAIgAUHB1ABqLQAASwRAA0AgAiAAKAIEIgEgACgCaEkEfyAAIAFBAWo2AgQgAS0AAAUgABBUC0HB1ABqLQAASw0AC0GkxQNBxAA2AgAgB0EAIANCAYNQGyEHIAMhCQsLIAAoAmgEQCAAIAAoAgRBf2o2AgQLIAkgA1oEQCAHQQBHIANCAYNCAFJyRQRAQaTFA0HEADYCACADQn98IQMMAgsgCSADVgRAQaTFA0HEADYCAAwCCwsgCSAHrCIDhSADfSEDCwsgAwtSACAABEACQAJAAkACQAJAAkAgAUF+aw4GAAECAwUEBQsgACACPAAADAQLIAAgAj0BAAwDCyAAIAI+AgAMAgsgACACPgIADAELIAAgAjcDAAsLC0cBAn8jBiEDIwZBkAFqJAYgA0EAQZABEEUaIANBIzYCICADIAA2AiwgA0F/NgJMIAMgADYCVCADIAEgAhCUBSEEIAMkBiAEC5wCAQd/IAEoAkxBf0oEf0EBBUEACxpB/wEhBSAAIQQCQAJAA0ACQCABKAIIIAEoAgQiAiIGayEDIAJBCiADEKYCIghFIQcgBCACIAMgCEEBIAZraiAHGyICIAUgAiAFSRsiAxBMGiABIAMgASgCBGoiBjYCBCADIARqIQIgByAFIANrIgVBAEdxRQRAIAIhBAwDCyAGIAEoAghJBH8gASAGQQFqNgIEIAYtAAAFIAEQ9QEiBEEASA0BIAQLIQMgAkEBaiEEIAIgAzoAACAFQX9qIgVFIANB/wFxQQpGckUNAQwCCwsgACACRgR/QQAFIAEoAgBBEHEEfyACIQQMAgVBAAsLIQAMAQsgAARAIARBADoAAAVBACEACwsgAAvwAQEDfwJAAkAgAigCECIDDQAgAhCYAwR/QQAFIAIoAhAhAwwBCyEEDAELIAMgAigCFCIEayABSQRAIAIoAiQhAyACIAAgASADQT9xQcoBahEEACEEDAELIAFFIAIsAEtBAEhyBEBBACEDBQJAIAEhAwNAIAAgA0F/aiIFaiwAAEEKRwRAIAUEQCAFIQMMAgVBACEDDAMLAAsLIAIoAiQhBCACIAAgAyAEQT9xQcoBahEEACIEIANJDQIgACADaiEAIAEgA2shASACKAIUIQQLCyAEIAAgARBMGiACIAEgAigCFGo2AhQgASADaiEECyAEC2EBAX8gACAALABKIgEgAUH/AWpyOgBKIAAoAgAiAUEIcQR/IAAgAUEgcjYCAEF/BSAAQQA2AgggAEEANgIEIAAgACgCLCIBNgIcIAAgATYCFCAAIAEgACgCMGo2AhBBAAsLjAEBA38jBiEBIwZBEGokBiABQQo6AAACQAJAIAAoAhAiAg0AIAAQmANFBEAgACgCECECDAELDAELIAAoAhQiAyACSQRAIAAsAEtBCkcEQCAAIANBAWo2AhQgA0EKOgAADAILCyAAIAFBASAAKAIkQT9xQcoBahEEAEEBRgR/IAEtAAAFQX8LGgsgASQGCxwAIABBgGBLBH9BpMUDQQAgAGs2AgBBfwUgAAsLEQBBBEEBQeiJASgCACgCABsL7AECCX8BfSABKAIIIgggAigCBEYEfyAAKAIEIgogASgCBEYEfyAAKAIIIgkgAigCCEYEfyAAKAIAIQADfyADIApIBH8gAyAIbCELQQAhBANAIAQgCUgEQCAAQwAAAAA4AgAgAigCACAEQQJ0aiEFIAEoAgAgC0ECdGohBkEAIQdDAAAAACEMA0AgByAISARAIAAgDCAGKgIAIAUqAgCUkiIMOAIAIAlBAnQgBWohBSAGQQRqIQYgB0EBaiEHDAELCyAEQQFqIQQgAEEEaiEADAELCyADQQFqIQMMAQVBAAsLBUF/CwVBfwsFQX8LC0gBAX8gACgCBCIBRQRADwsgASgCJCEBIABBASABQT9xQbIFahEDACAAKAIQBEAgAEHIATYCFCAAQQA2ArgCBSAAQeQANgIUCwsyAQF/IAAoAgQiAQRAIAEoAighASAAIAFB/wFxQawDahEBAAsgAEEANgIEIABBADYCFAsgACAAKAIAIgFBMzYCFCAAIAEoAgBB/wFxQawDahEBAAsyAQF/IAAoAgggACgCBBCLASIBBEAgASAAEPEEQQBIBEAgARBJQQAhAQsFQQAhAQsgAQuCBAEJfyAAKALkAyIFIAAoAlhBAUYiAjYCHCAAKAIEKAIIIQEgBSAAQQFB/gVBgAIgAhsgACgCeCABQQ9xQYoCahEJACIENgIYIAUoAhQhASAAKAJ4QQBMBEAPCyACRQRAA0AgASAFQSBqIANBAnRqKAIAIgIQOSEHIANBAnQgBGooAgAhBkEAIQEgAkH+AWogAkF/aiIIQQF0IgkQOSEEQQAhAgNAIAIgBEoEQANAIAIgCCABQQFqIgFBAXRBAXJB/wFsaiAJEDkiBEoNAAsLIAIgBmogASAHbDoAACACQQFqIgJBgAJHDQALIANBAWoiAyAAKAJ4SARAIAchASAFKAIYIQQMAQsLDwtBACECA0AgASAFQSBqIAJBAnRqKAIAIgMQOSEHIAJBAnQgBGoiASABKAIAQf8BajYCACAFKAIYIAJBAnRqKAIAIQZBACEBIANB/gFqIANBf2oiCEEBdCIJEDkhBEEAIQMDQCADIARKBEADQCADIAggAUEBaiIBQQF0QQFyQf8BbGogCRA5IgRKDQALCyADIAZqIAEgB2w6AAAgA0EBaiIDQYACRw0AC0EBIQEDQCAGIAFrIAYsAAA6AAAgBiABQf8BamogBiwA/wE6AAAgAUEBaiIBQYACRw0ACyACQQFqIgIgACgCeEgEQCAHIQEgBSgCGCEEDAELCwvjHwEdfyMGIRcjBkGAC2okBiAXQYADaiEEIBdBgAFqIRkgACgC5AMoAhghGiABQQJ2QQV0IgVBBHIiFCAFQRxyIgxqQQF1IQ4gAkEDdkEFdCIFQQJyIhUgBUEeciIPakEBdSEQIANBAnZBBXQiBUEEciIWIAVBHHIiEWpBAXUhEiAAKAKEASILQQBKBH8gACgCiAEiBSgCACEKIAUoAgQhCSAFKAIIIRhB/////wchBwNAIBQgCCAKai0AACIFSgR/IAUgDGtBAXQiBiAGbCENIAUgFGtBAXQiBSAFbAUCfyAMIAVIBEAgBSAUa0EBdCIGIAZsIQ0gBSAMa0EBdCIFIAVsDAELIA4gBUgEQCAFIBRrQQF0IgUgBWwhDQUgBSAMa0EBdCIFIAVsIQ0LQQALCyEFIBUgCCAJai0AACIGSgR/IAUgBiAVa0EDbCIFIAVsaiEFIAYgD2tBA2wiBiAGbAUCfyAPIAZIBEAgBSAGIA9rQQNsIgUgBWxqIQUgBiAVa0EDbCIGIAZsDAELIBAgBkgEfyAGIBVrQQNsIgYgBmwFIAYgD2tBA2wiBiAGbAsLCyETIBYgCCAYai0AACIGSgR/IAUgBiAWayIFIAVsaiEFIAYgEWsiBiAGbAUCfyARIAZIBEAgBSAGIBFrIgUgBWxqIQUgBiAWayIGIAZsDAELIBIgBkgEfyAGIBZrIgYgBmwFIAYgEWsiBiAGbAsLCyEGIAhBAnQgBGogBTYCACANIBNqIAZqIgUgByAFIAdIGyEHIAsgCEEBaiIIRw0AC0EAIQVBACEIA38gCEECdCAEaigCACAHTARAIAUgGWogCDoAACAFQQFqIQULIAsgCEEBaiIIRw0AIAULBUEACyETIBchCCAEQf////8HNgIAIARB/////wc2AgQgBEH/////BzYCCCAEQf////8HNgIMIARB/////wc2AhAgBEH/////BzYCFCAEQf////8HNgIYIARB/////wc2AhwgBEH/////BzYCICAEQf////8HNgIkIARB/////wc2AiggBEH/////BzYCLCAEQf////8HNgIwIARB/////wc2AjQgBEH/////BzYCOCAEQf////8HNgI8IARBQGtB/////wc2AgAgBEH/////BzYCRCAEQf////8HNgJIIARB/////wc2AkwgBEH/////BzYCUCAEQf////8HNgJUIARB/////wc2AlggBEH/////BzYCXCAEQf////8HNgJgIARB/////wc2AmQgBEH/////BzYCaCAEQf////8HNgJsIARB/////wc2AnAgBEH/////BzYCdCAEQf////8HNgJ4IARB/////wc2AnwgBEH/////BzYCgAEgBEH/////BzYChAEgBEH/////BzYCiAEgBEH/////BzYCjAEgBEH/////BzYCkAEgBEH/////BzYClAEgBEH/////BzYCmAEgBEH/////BzYCnAEgBEH/////BzYCoAEgBEH/////BzYCpAEgBEH/////BzYCqAEgBEH/////BzYCrAEgBEH/////BzYCsAEgBEH/////BzYCtAEgBEH/////BzYCuAEgBEH/////BzYCvAEgBEH/////BzYCwAEgBEH/////BzYCxAEgBEH/////BzYCyAEgBEH/////BzYCzAEgBEH/////BzYC0AEgBEH/////BzYC1AEgBEH/////BzYC2AEgBEH/////BzYC3AEgBEH/////BzYC4AEgBEH/////BzYC5AEgBEH/////BzYC6AEgBEH/////BzYC7AEgBEH/////BzYC8AEgBEH/////BzYC9AEgBEH/////BzYC+AEgBEH/////BzYC/AEgBEH/////BzYCgAIgBEH/////BzYChAIgBEH/////BzYCiAIgBEH/////BzYCjAIgBEH/////BzYCkAIgBEH/////BzYClAIgBEH/////BzYCmAIgBEH/////BzYCnAIgBEH/////BzYCoAIgBEH/////BzYCpAIgBEH/////BzYCqAIgBEH/////BzYCrAIgBEH/////BzYCsAIgBEH/////BzYCtAIgBEH/////BzYCuAIgBEH/////BzYCvAIgBEH/////BzYCwAIgBEH/////BzYCxAIgBEH/////BzYCyAIgBEH/////BzYCzAIgBEH/////BzYC0AIgBEH/////BzYC1AIgBEH/////BzYC2AIgBEH/////BzYC3AIgBEH/////BzYC4AIgBEH/////BzYC5AIgBEH/////BzYC6AIgBEH/////BzYC7AIgBEH/////BzYC8AIgBEH/////BzYC9AIgBEH/////BzYC+AIgBEH/////BzYC/AIgBEH/////BzYCgAMgBEH/////BzYChAMgBEH/////BzYCiAMgBEH/////BzYCjAMgBEH/////BzYCkAMgBEH/////BzYClAMgBEH/////BzYCmAMgBEH/////BzYCnAMgBEH/////BzYCoAMgBEH/////BzYCpAMgBEH/////BzYCqAMgBEH/////BzYCrAMgBEH/////BzYCsAMgBEH/////BzYCtAMgBEH/////BzYCuAMgBEH/////BzYCvAMgBEH/////BzYCwAMgBEH/////BzYCxAMgBEH/////BzYCyAMgBEH/////BzYCzAMgBEH/////BzYC0AMgBEH/////BzYC1AMgBEH/////BzYC2AMgBEH/////BzYC3AMgBEH/////BzYC4AMgBEH/////BzYC5AMgBEH/////BzYC6AMgBEH/////BzYC7AMgBEH/////BzYC8AMgBEH/////BzYC9AMgBEH/////BzYC+AMgBEH/////BzYC/AMgE0EASgRAQQAhDwNAIBQgDyAZaiwAACILQf8BcSIHIAAoAogBIgYoAgBqLQAAayINQQF0IQwgFSAHIAYoAgRqLQAAayIFQQNsIQogBUHIAGwiBUGQAWohGCAWIAcgBigCCGotAABrIgdBBHQiBkFAayEOIAZBwAFqIRAgBkHAAmohEiAFQbADaiEbIAVB0AVqIRwgBUHwB2ohHSAFQZAKaiEeIAVBsAxqIR8gBUHQDmohIEEDIREgDUEGdEGAAmohDSAM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BEEAgABA/EAALEwAgACAAKAIEIgBBAWo2AgQgAAvFAwEIfyABBEACQCABQf////8DSwRAQQgQBSICEIgBIAJBtIsBNgIAIAJB+PcAQRYQBAsgAUECdBBRIQIgACgCACEDIAAgAjYCACADBEAgACgCBBogAxA4CyAAIAE2AgRBACECA0AgASACRwRAIAAoAgAgAkECdGpBADYCACACQQFqIQIMAQsLIABBCGohAyAAKAIIIgIEQCACKAIEIQQgASABQX9qIghxRSIJBH8gBCAIcQUgBCABTwR/IAQgARBOBSAECwshBiAAKAIAIAZBAnRqIAM2AgADQCACIQQDQAJAA0ACQCAEKAIAIgJFDQYgAigCBCEDIAYgCQR/IAMgCHEFIAMgAU8EfyADIAEQTgUgAwsLIgVGDQAgACgCACAFQQJ0aiIDKAIARQ0CIAIhAwNAIAMoAgAiBwRAIAIoAgggBygCCEYEQCAHIQMMAgsLCyAEIAc2AgAgAyAAKAIAIAVBAnRqKAIAKAIANgIAIAAoAgAgBUECdGooAgAgAjYCAAwBCwsgAiEEDAELCyADIAQ2AgAgBSEGDAAACwALCwUgACgCACEBIABBADYCACABBEAgACgCBBogARA4CyAAQQA2AgQLCzsAQeC8AywAAEUEQEHgvAMQcARAQYjEA0EANgIAQYzEA0EANgIAQZDEA0EANgIAQeC8AxBvCwtBiMQDCwkAIAAgATYCBAsJACAAIAE2AgALUQECfyMGIQMjBkEQaiQGIAAgATYCAEEQEFEiAkEANgIEIAJBADYCCCACQZyGATYCACACIAE2AgwgACACNgIEIAMgATYCACADIAE2AgQgAyQGCzQAIABBADYCACAAQQA2AgQgAEIANwIIIABCADcCECAAQgA3AhggAEEANgIgIABBJGoQlAgLuQEBBX8gASgCACEBIAAoAgQiAgRAAkAgAiACQX9qIgRxRSIFBH8gASAEcQUgASACSQR/IAEFIAEgAhBOCwsiBkECdCAAKAIAaigCACIABH8DQCAAKAIAIgBFBEBBACEADAMLIAAoAgQiAyABRgRAIAEgACgCCEYNAwUgBQRAIAMgBHEhAwUgAyACTwRAIAMgAhBOIQMLCyADIAZHBEBBACEADAQLCwwAAAsABUEACyEACwVBACEACyAACykBAX8gACgCCBC2CCAAKAIAIQEgAEEANgIAIAEEQCAAKAIEGiABEDgLC20BAX8gAEGUBmoiAUEYahBVIAFBDGoQVSABEFUgAEGMBWoiAUH8AGoQVSABQfAAahBVIAFB3ABqEMQHIABB/ARqEFUgAEGgAWoQ/AggAEHcAGoQxwIgAEHIAGoQuQggAEFAaxCVASAAQQxqEFULKAEBfyAAQQRqEOkDIAAoAgAhASAAQQA2AgAgAQRAIAEQ6gMgARA4CwuwBwIHfwF8QcYAIQZBwIQ9IQcgA0EBRiILBEBBxgBBBBA5IQZBwIQ9QQQQOSEHIABBAhA5IQAgAUECEDkhAQsgBUEANgIAIABBfmohCCABQX5qIQkgAkGQgMgAaiEMQQAhAQJAAkADQAJAIAEgAigCCE4NAiACQQxqIAFBAnRqIgMoAgAiCiAGSCAKIAdKckUEQCACQYyACGogAUEEdGoiCigCAEEBRwRAIAIgAUEEdGpBkIAIaigCACAIRwRAIAIgAUEEdGpBlIAIaigCAEEBRwRAIAIgAUEEdGpBmIAIaigCACAJRwRAIAIoAgAgACAMIAFBAWogCiAFKAIAQbDxBGwgBGoQvghBAE4EQCADKAIAIAUoAgBBsPEEbCAEahC3CEEATgRAIAUoAgBBsPEEbCAEaiADKAIANgIAIAUoAgAiA0Gw8QRsIARqIAJBkIAoaiABQQR0aisDADkDCCADQbDxBGwgBGogAiABQQR0akGYgChqKwMAOQMQIAUgA0EBaiIDNgIAIANBPEYEQEE8IQAMCAsLCwsLCwsLIAFBAWohAQwBCwsMAQsgBSgCACEAC0EAIQEDQCABIABIBEAgAUGw8QRsIARqIQYgAUGw8QRsIARqIQcgAUGw8QRsIARqIQMgAUEBaiIBIQIDQCACIABIBEAgBisDCCACQbDxBGwgBGorAwihIg0gDaIgBysDECACQbDxBGwgBGorAxChIg0gDaKgIQ0gAygCACIAIAJBsPEEbCAEaiIIKAIAIglKBEAgDSAAQQQQObdjBEAgCEEANgIACwUgDSAJQQQQObdjBEAgA0EANgIACwsgAkEBaiECIAUoAgAhAAwBCwsMAQsLQQAhAgNAIAIgAEgEQCACQbDxBGwgBGooAgBFBEAgAiEBIAAhAwNAIAFBAWoiACADSARAIAFBsPEEbCAEaiAAQbDxBGwgBGpBsPEEEEwaIAAhASAFKAIAIQMMAQsLIAUgA0F/aiIANgIACyACQQFqIQIMAQsLIAsEQAJAQQAhAQNAIAEgAE4NASAEIAQoAgBBAnQ2AgAgBCAEKwMIRAAAAAAAAABAojkDCCAEIAQrAxBEAAAAAAAAAECiOQMQIAQoAhghAkEAIQADQCAAIAJIBEAgBEEcaiAAQQJ0aiIDIAMoAgBBAXQ2AgAgBEHcuAJqIABBAnRqIgMgAygCAEEBdDYCACAAQQFqIQAMAQsLIARBsPEEaiEEIAFBAWohASAFKAIAIQAMAAALAAsLQQALEgAgAEH8hQE2AgAgAEEEahBHC0gBAX8jBiEDIwZBIGokBiADIAAoAjggAigCACACKAIEIAIoAgggAigCDBC4AyAAIAMgAhDgASAAIAEgAxDgASADEN0BIAMkBguLAwEEfwJAAkACQAJAIAAoAhgOAwAAAQILIAAoAiwhAgNAIAEgAk4NAyAAIAFBCHRqIgMoAjRBf0oEQCAAIAFBCHRqKwNQRAAAAAAAAOA/YwRAIAAgAUEIdGpBfzYCOCADQX82AjQgACABQQh0akEGNgKcAgsLIAFBAWohAQwAAAsACyAAKAIsIQIDQCABIAJODQIgACABQQh0aiIDKAI0QX9KBEAgACABQQh0aisDUEQAAAAAAADgP2MEQCAAIAFBCHRqQX82AjwgA0F/NgI0IAAgAUEIdGpBBjYCnAILCyABQQFqIQEMAAALAAsgACgCLCEDA0AgASADTg0BIAAgAUEIdGoiAigCOEF/SgR/IAAgAUEIdGorA1hEAAAAAAAA4D9jBH8gAkF/NgI4QQAFQQELBUEBCyECIAAgAUEIdGoiBCgCPEF/SgRAIAAgAUEIdGorA2BEAAAAAAAA4D9jBEAgBEF/NgI8IAJFBEAgACABQQh0akEGNgKcAgsLCyABQQFqIQEMAAALAAsLCwAgAEMAAAA/ko4LDQAgABDSAUMYcjE/lQu3AwIDfwN9IAAoAgAiBCoCACIHIAEoAgAiAyoCACIGXQR/QQEFIAYgB10Ef0EABSAEKAIEIAMoAgRJCwshASAGIAIoAgAiAioCACIIXQR/QQEFIAggBl0Ef0EABSADKAIEIAIoAgRJCwshAAJ/IAEEfyAABEAgBCAIOAIAIAIgBzgCACAEKAIEIQAgBCACKAIENgIEIAIgADYCBEEBDAILIAQgBjgCACADIAc4AgAgBCgCBCEFIAQgAygCBDYCBCADIAU2AgQgByACKgIAIgZdBEAgAkEEaiEAIAIoAgQhAQVBASAGIAddDQIaQQEgBSACQQRqIgAoAgAiAU8NAhoLIAMgBjgCACACIAc4AgAgAyABNgIEIAAgBTYCAEECBSAABH8gAyAIOAIAIAIgBjgCACADKAIEIQAgAyACKAIENgIEIAIgADYCBCAEKgIAIgcgAyoCACIGXQRAIARBBGohACADKAIEIQEgBCgCBCECBUEBIAYgB10NAxpBASAEQQRqIgAoAgAiAiADKAIEIgFPDQMaCyAEIAY4AgAgAyAHOAIAIAAgATYCACADIAI2AgRBAgVBAAsLCwvtAQEFfyAAKAIAIQYgACgCBCEDA0AgAyAGRwRAIAEoAgQiBEF0aiICQQA2AgAgBEF4aiIFQQA2AgAgBEF8aiIEQQA2AgAgAiADQXRqIgIoAgA2AgAgBSADQXhqIgUoAgA2AgAgBCADQXxqIgMoAgA2AgAgA0EANgIAIAVBADYCACACQQA2AgAgASABKAIEQXRqNgIEIAIhAwwBCwsgACgCACECIAAgASgCBDYCACABIAI2AgQgACgCBCECIAAgASgCCDYCBCABIAI2AgggACgCCCECIAAgASgCDDYCCCABIAI2AgwgASABKAIENgIACyIBAX8gACgCCCICQQAgAUEMbBBFGiAAIAFBDGwgAmo2AggLIgEBfyAAKAIEIgJBACABQQxsEEUaIAAgAUEMbCACajYCBAsiAQF/IAAoAgQiAkEAIAFBAnQQRRogACABQQJ0IAJqNgIECxMAIAAgATYCVCAAQTxqIAEQ0QILOwECfyAAKAIEIQEDQCAAKAIIIgIgAUcEQCAAIAJBbGo2AggMAQsLIAAoAgAiAQRAIAAoAgwaIAEQOAsLqQEBA38gACgCACEEIAAoAgQhAgNAIAIgBEcEQCABKAIEQWxqIgMgAkFsaiICKQIANwIAIAMgAikCCDcCCCADIAIoAhA2AhAgASABKAIEQWxqNgIEDAELCyAAKAIAIQIgACABKAIENgIAIAEgAjYCBCAAKAIEIQIgACABKAIINgIEIAEgAjYCCCAAKAIIIQIgACABKAIMNgIIIAEgAjYCDCABIAEoAgQ2AgALcwEBfyAAQQA2AgwgACADNgIQIAEEQCABQcyZs+YASwRAQQgQBSIDEIgBIANBtIsBNgIAIANB+PcAQRYQBAUgAUEUbBBRIQQLCyAAIAQ2AgAgACACQRRsIARqIgI2AgggACACNgIEIAAgAUEUbCAEajYCDAvkAQEGfyMGIQIjBkEQaiQGIAJBCGohAyAABH8gASAAQfSGrwNqIgUoAgBGBH9BAAUgAEGIh68DaiIEKAIAIgYEQCAGEEkgBEEANgIACwJAAkACQAJAIAEOBQMAAAABAgsgBCAAKAIkIAAoAigQgwg2AgAMAgsgAEGEh68DakEBNgIAIABBgIevA2pBATYCAEEEIQEMAQtBAEEDQcilASACED1BACEBCyAFIAE2AgAgACgCAEEBRgRAIAMgAUECdEGACGooAgA2AgBBAEEDQZKmASADED0LQQALBUF/CyEHIAIkBiAHCygAIAAgATgCACAAIAI4AgQgACADOAIIIAAgBDgCDCAAIAVBAXE6ABALewEBfyMGIQIjBkEQaiQGIAAEQCAAKAIAIAFHBEACQCAAIAE2AgAgAUUEQCAAQeSGpwJqIgAoAgAQOCAAQQA2AgAMAQsgAEHkhqcCaiAAKAIoIAAoAiRsEEQiADYCACAARQRAQQBBA0G52AIgAhA9QQEQAQsLCwsgAiQGC5oBAQR/IwYhBSMGQRBqJAYgAiABayIEQW9LBEAQAAsgBEELSQRAIAAgBDoACwUgACAEQRBqQXBxIgYQUSIDNgIAIAAgBkGAgICAeHI2AgggACAENgIEIAMhAAsgAiABayEGIAAhAwNAIAEgAkcEQCADIAEQXyABQQFqIQEgA0EBaiEDDAELCyAFQQA6AAAgACAGaiAFEF8gBSQGC4IBAQN/IwYhAiMGQRBqJAYgAARAIAAoAgAiAQRAIAEoAgAiAQRAIAEQOAtBACEBA0AgASAAKAIAIgMoAgxIBEAgAygCCCABQQxsaigCABA4IAFBAWohAQwBCwsgAygCCBA4IAAoAgAQOCAAQQA2AgALBUEAQQNB3LgBIAIQPQsgAiQGCxEAIAAgACgCACAAKAIEEKUJC64BAQV/IwYhBSMGQRBqJAYgACACIAMgBUEEaiAFEKYJQQBIBH9BfwUgBSoCBCABKgIMIgKUQzMzy0GVQwAAAD+SEEMiAEEASAR/QX8FIAEoAgQiByAASgR/IAEoAggiCLIgAiAFKgIAlEMzM8tBlZNDAAAAP5IQQyIGQX9KIAggBkpxBH8gBCABKAIAIAAgBiAHbGpqLAAAOgAAQQAFQX8LBUF/CwsLIQkgBSQGIAkLvQICBH8CfSMGIQYjBkFAayQGIAZBNGohByAGQTBqIQggAAR/IABBCGogASAGEPoBIABBuAFqIgAgBioCDCAGKgIAIAKUIAYqAgQgA5SSkiAGKgIsIAYqAiAgApQgBioCJCADlJKSIguVIgogBioCHCAGKgIQIAKUIAYqAhQgA5SSkiALlSIDIAQgBRBtQQBIBH9BfwUgACAEKgIAIAUqAgAgByAIEKYBQQBIBH9BfwUgCiAHKgIAkyICIAKUIAMgCCoCAJMiAiAClJJDAACAP15BH3RBH3ULCwUgASoCHCABKgIQIAKUIAEqAhQgA5SSkiEKIAQgASoCDCABKgIAIAKUIAEqAgQgA5SSkiABKgIsIAEqAiAgApQgASoCJCADlJKSIgKVOAIAIAUgCiAClTgCAEEACyEJIAYkBiAJC4YLAQp/IAMoAhghCAJAAkACQCACQQVrDgoAAQEBAQEBAAAAAQsgAygCDCELIAMoAhQhDSABQQF0IQ4gACAEQQAgAygCCGsiB0EBdGogASAFQQAgAygCEGsiBUEBdGpsamohBEEAIQBBACEBQQAhAgNAIAUgDUoEQAwDBSAHIQwgBCEJA0AgDCALTARAIAguAQAiD0GAIEcEQCAAIAktAAAiCmohACABIAogCmxqIQEgAiAPQf//A3EgCmxqIQILIAxBAWohDCAIQQJqIQggCUECaiEJDAELCyAEIA5qIQQgBUEBaiEFDAELAAALAAsgAkECSQRAIAMoAhQhDkEAIAMoAhBrIQogCCEJQQAhAkEAIQgDQCAKIA5KBEAgAiEAIAghASAMIQIMAwUgAygCDCEPQQAgAygCCCIHayELIAAgBCABIAUgCkEBdGpsaiAHQQF0a0EDbGohBwNAIAsgD0wEQCAJLgEAIhBBgCBHBEAgAiAHLQACIActAAAgBy0AAWpqQQMQSCINaiECIAggDSANbGohCCAMIBBB//8DcSANbGohDAsgC0EBaiELIAdBBmohByAJQQJqIQkMAQsLIApBAWohCgwBCwAACwALIAJBAXJBA0YEQCADKAIUIQ5BACADKAIQayEKIAghCUEAIQJBACEIA0AgCiAOSgRAIAIhACAIIQEgDCECDAMFIAMoAgwhD0EAIAMoAggiB2shCyAAIAQgASAFIApBAXRqbGogB0EBdGtBAnRqIQcDQCALIA9MBEAgCS4BACIQQYAgRwRAIAIgBy0AAiAHLQAAIActAAFqakEDEEgiDWohAiAIIA0gDWxqIQggDCAQQf//A3EgDWxqIQwLIAtBAWohCyAHQQhqIQcgCUECaiEJDAELCyAKQQFqIQoMAQsAAAsACyACQQJyQQZGBEAgAygCFCEOQQAgAygCEGshCiAIIQlBACECQQAhCANAIAogDkoEQCACIQAgCCEBIAwhAgwDBSADKAIMIQ9BACADKAIIIgdrIQsgACAEIAEgBSAKQQF0amxqIAdBAXRrQQJ0aiEHA0AgCyAPTARAIAkuAQAiEEGAIEcEQCACIActAAMgBy0AASAHLQACampBAxBIIg1qIQIgCCANIA1saiEIIAwgEEH//wNxIA1saiEMCyALQQFqIQsgB0EIaiEHIAlBAmohCQwBCwsgCkEBaiEKDAELAAALAAsCQAJAAkAgAkEHaw4CAAECCyADKAIUIQ5BACECQQAgAygCEGshCiAIIQcDQCAKIA5KBEAgAiEAIAkhASAMIQIMBAUgAygCDCEPIAkhCEEAIAMoAggiC2shCSAAIAQgASAFIApBAXRqbGogC0EBdGtBAXRqIQsDQCAJIA9MBEAgBy4BACIQQYAgRwRAIAIgCy0AASINaiECIAggDSANbGohCCAMIBBB//8DcSANbGohDAsgCUEBaiEJIAtBBGohCyAHQQJqIQcMAQsLIAghCSAKQQFqIQoMAQsAAAsACyADKAIUIQ4gCCEJQQAhAkEAIQhBACADKAIQayEHA0AgByAOSgRAIAIhACAIIQEgDCECDAMFIAMoAgwhD0EAIAMoAggiC2shCiAAIAQgASAFIAdBAXRqbGogC0EBdGtBAXRqIQsDQCAKIA9MBEAgCS4BACIQQYAgRwRAIAIgCy0AACINaiECIAggDSANbGohCCAMIBBB//8DcSANbGohDAsgCUECaiEJIApBAWohCiALQQRqIQsMAQsLIAdBAWohBwwBCwAACwALQQAhAEEAIQFBACECCyAGIAEgACAAbCADKAIkIgEQOWsiBAR/IAIgACADKAIgbCABEDlrQeQAbCADKAIcEDlB5ABsIASykRBDEDkFQQALNgIAC0UBAn0gASoCACAAKgIAIgOTIAIqAgQgACoCBCIEk5QgASoCBCAEkyACKgIAIAOTlJNDAAAAP5QiA4wgAyADQwAAAABdGwuIDgMIfwF+DX0jBiEGIwZBIGokBiAGQRRqIQcgBkEQaiEIIAZBDGohCSAGQQhqIQogBkEEaiELIAJBAEgEQEF/IQEFAkACQAJAAkACQAJAIAIOBAABAgMECyAEQQgQObIhEiAEQQdsQQgQObIhEyAFQQgQObIhFCAFQQdsQQgQObIhFSAEQQIQObIhFiAFQQIQObIhF0EAIQJBfyEBA0ACQAJAAkAgAkEYbCAAaigCDEF/aw4CAgABCyACQRhsIABqKgIQIg8gEl0gDyATXnJFBEAgAkEYbCAAaioCFCIQIBRdIBAgFV5yRQRAIA8gFpMiDyAPlCAQIBeTIg8gD5SSIg8gEV4EQCAPIREgAiEBCwsLCyACQQFqIQIMAQsLIAFBf0YEQEF/IQEMBQsgAUEYbCAAakEBNgIMDAQLIARBCBA5siESIARBB2xBCBA5siETIAVBCBA5siEUIAVBB2xBCBA5siEVQX8hAUEAIQIDQAJAAkACQCACQRhsIABqKAIMQX9rDgICAAELIAJBGGwgAGoqAhAiDyASXSAPIBNeckUEQCACQRhsIABqKgIUIhAgFF0gECAVXnJFBEAgDyADKgIAkyIPIA+UIBAgAyoCBJMiDyAPlJIiDyARXgRAIA8hESACIQELCwsLIAJBAWohAgwBCwsgAUF/RgRAQX8hAQwECyABQRhsIABqQQE2AgwMAwsgBEEIEDmyIRIgBEEHbEEIEDmyIRMgBUEIEDmyIRQgBUEHbEEIEDmyIRVBfyEBQQAhAgNAAkACQAJAIAJBGGwgAGooAgxBf2sOAgIAAQsgAkEYbCAAaioCECIPIBJdIA8gE15yRQRAIAJBGGwgAGoqAhQiECAVXiAQIBRdckUEQCAPIAMqAgAiD5MgAyoCDCADKgIEIhaTlCAQIBaTIAMqAgggD5OUkyIPIA+UIg8gEV4EQCAPIREgAiEBCwsLCyACQQFqIQIMAQsLIAFBf0YEQEF/IQEMAwsgAUEYbCAAakEBNgIMDAILIAMgA0EIaiAHIAgQ2wIgAyADQRBqIAkgChDbAiAEQQgQObIhFiAEQQdsQQgQObIhFyAFQQgQObIhGCAFQQdsQQgQObIhGSADQRhqIQwgCSoCACIUIAgqAgAiEpQiESAKKgIAIhUgByoCACITlCIPk0MAAAAAYEUhCSAPIBGTQwAAAABgRSENQQJBASAJGyEHQQFBAiAJGyEIQX8hAUEAIQJDAAAAACERA0ACQAJAAkAgAkEYbCAAaigCDEF/aw4CAgABCyACQRhsIABqKgIQIg8gFl0gDyAXXnJFBEAgAkEYbCAAaiIEKgIUIhAgGF0gECAZXnJFBEAgDCAPOAIAIAMgBCgCFDYCHCADIAwgCyAGENsCIAsqAgAhDwJ/AkAgCQR/IAYqAgAhEAwBBSASIA+UIBMgBioCACIQlJNDAAAAAGAEf0ECQQMgFSAPlCAUIBCUk0MAAAAAYEUiBRshBEEBIQpBA0ECIAUbBQwCCwsMAQsgDSAVIA+UIhogFCAQlCIbk0MAAAAAYEVyBH8gEyAQlCASIA+Uk0MAAAAAYEUgGyAak0MAAAAAYEVyDQRBAyEKIAghBCAHBUEBQQMgEiAPlCATIBCUk0MAAAAAYEUiBRshBEECIQpBA0EBIAUbCwshBSADIAogBSAEELAJIg8gEV4EfyAPIREgAgUgAQshAQsLCyACQQFqIQIMAQsLIAFBf0cEQCABQRhsIABqQQE2AgwLDAELQQAhAwJAAkADQAJAAkACQCADQRhsIAFqIgIoAgxBf2sOAgIAAQsgAkEBNgIMIANBGGwgAWohBCADQRhsIAFqIQUgA0EYbCABaiEHQQAhAgNAAkACQCACQRhsIABqIggoAgxBf2sOAgMAAQsgBCgCACACQRhsIABqKAIARgRAIAUoAgQgAkEYbCAAaigCBEYEQCAHKAIIIAJBGGwgAGooAghGDQcLCwsgAkEBaiECDAAACwALIANBAWohAwwBCwsMAQsgCEEBNgIMIAIhAQwBCyABQX82AgxBhMQDQQBBhMQDKAIAIgEEfyABBUHovgNBABATQX9qrTcDAEGExAMoAgALQQFqIgEgAUGAAUYbNgIAQQAhAUEAIQIDQAJAAkACQCACQRhsIABqKAIMQX9rDgICAAELIAFBAWohAQsgAkEBaiECDAELCyABRQRAQX8hAQwBC0HovgNB6L4DKQMAQq3+1eTUhf2o2AB+QgF8Ig43AwAgAbIgDkIhiKeylEMAAAAwlBBDIQRBACECQQAhAQNAAkACQAJAAkAgAkEYbCAAaiIFKAIMIgNBf2sOAgABAgsgAyEBDAQLIAEgBEYNASABQQFqIQELIAJBAWohAgwBCwsgBUEBNgIMIAIhAQsLIAYkBiABC5gEAgF/EX0jBiEEIwZBMGokBiAABEAgAEEIaiABIAQQ+gEgAioCACILIAQqAgAiFJQhDiACKgIEIgYgBCoCBCIMlCEPIAYgBCoCFCINlCEQIAQqAiwiCiALIAQqAiAiB5QiCSAGIAQqAiQiCJQiBZKSIREgCiALQwAAIEGSIhIgB5QgBZKSIRMgCiAJIAZDAAAgQZIiBiAIlJKSIQogBCoCHCIHIAsgBCoCECIIlCIFIAYgDZSSkiAKlSELIAQqAgwiCSAOIAYgDJSSkiAKlSEMBSACKgIAIgsgASoCACIUlCEOIAIqAgQiBiABKgIEIgyUIQ8gBiABKgIUIg2UIRAgASoCLCIKIAsgASoCICIHlCIJIAYgASoCJCIIlCIFkpIhESAKIAtDAAAgQZIiEiAHlCAFkpIhEyAKIAkgBkMAACBBkiIGIAiUkpIhCiABKgIcIgcgCyABKgIQIgiUIgUgBiANlJKSIAqVIQsgASoCDCIJIA4gBiAMlJKSIAqVIQwLIAcgEiAIlCAQkpIgE5UhDSAJIBIgFJQgD5KSIBOVIRUgByAFIBCSkiARlSEHIAkgDiAPkpIgEZUhCSAVIAmTIgUgBZQgDSAHkyIFIAWUkiIIIAwgCZMiBSAFlCALIAeTIgUgBZSSIgVdIQAgAyAFIAggABuRQ1yPIkCUOAIAIAMgCCAFIAAbkUNcjyJAlDgCBCAEJAZBAAsfACAABH8gACABIAIgAxCGBAVBACABIAIgAxCGBAsaCwYAQRwQAgsGAEEbEAILBgBBFxACCwYAQRIQAgsIAEEPEAJCAAsIAEEMEAJBAAsIAEEKEAJBAAuMAQECfyMFQQFqJAUgACMFNgIAA0AgBCADSARAIARBA3QgAmooAgBFBEAgBEEDdCACaiMFNgIAIARBA3RBBGogAmogATYCACAEQQN0QQhqIAJqQQA2AgAgAxADIAIPCyAEQQFqIQQMAQsLIAAgASACIANBAXQiAEEBakEDdBDoASAAEI8EIQUgABADIAULrwwBB38gACABaiEFIAAoAgQiA0EBcUUEQAJAIAAoAgAhAiADQQNxRQRADwsgASACaiEBIAAgAmsiAEHA0QMoAgBGBEAgBSgCBCICQQNxQQNHDQFBtNEDIAE2AgAgBSACQX5xNgIEIAAgAUEBcjYCBCAFIAE2AgAPCyACQQN2IQQgAkGAAkkEQCAAKAIIIgIgACgCDCIDRgRAQazRA0Gs0QMoAgBBASAEdEF/c3E2AgAFIAIgAzYCDCADIAI2AggLDAELIAAoAhghByAAIAAoAgwiAkYEQAJAIABBEGoiA0EEaiIEKAIAIgIEQCAEIQMFIAMoAgAiAkUEQEEAIQIMAgsLA0ACQCACQRRqIgQoAgAiBkUEQCACQRBqIgQoAgAiBkUNAQsgBCEDIAYhAgwBCwsgA0EANgIACwUgACgCCCIDIAI2AgwgAiADNgIICyAHBEAgACAAKAIcIgNBAnRB3NMDaiIEKAIARgRAIAQgAjYCACACRQRAQbDRA0Gw0QMoAgBBASADdEF/c3E2AgAMAwsFIAdBEGoiAyAHQRRqIAAgAygCAEYbIAI2AgAgAkUNAgsgAiAHNgIYIAAoAhAiAwRAIAIgAzYCECADIAI2AhgLIAAoAhQiAwRAIAIgAzYCFCADIAI2AhgLCwsLIAUoAgQiB0ECcQRAIAUgB0F+cTYCBCAAIAFBAXI2AgQgACABaiABNgIAIAEhAwUgBUHE0QMoAgBGBEBBuNEDIAFBuNEDKAIAaiIBNgIAQcTRAyAANgIAIAAgAUEBcjYCBEHA0QMoAgAgAEcEQA8LQcDRA0EANgIAQbTRA0EANgIADwsgBUHA0QMoAgBGBEBBtNEDIAFBtNEDKAIAaiIBNgIAQcDRAyAANgIAIAAgAUEBcjYCBCAAIAFqIAE2AgAPCyAHQQN2IQQgB0GAAkkEQCAFKAIIIgIgBSgCDCIDRgRAQazRA0Gs0QMoAgBBASAEdEF/c3E2AgAFIAIgAzYCDCADIAI2AggLBQJAIAUoAhghCCAFKAIMIgIgBUYEQAJAIAVBEGoiA0EEaiIEKAIAIgIEQCAEIQMFIAMoAgAiAkUEQEEAIQIMAgsLA0ACQCACQRRqIgQoAgAiBkUEQCACQRBqIgQoAgAiBkUNAQsgBCEDIAYhAgwBCwsgA0EANgIACwUgBSgCCCIDIAI2AgwgAiADNgIICyAIBEAgBSgCHCIDQQJ0QdzTA2oiBCgCACAFRgRAIAQgAjYCACACRQRAQbDRA0Gw0QMoAgBBASADdEF/c3E2AgAMAwsFIAhBEGoiAyAIQRRqIAMoAgAgBUYbIAI2AgAgAkUNAgsgAiAINgIYIAUoAhAiAwRAIAIgAzYCECADIAI2AhgLIAUoAhQiAwRAIAIgAzYCFCADIAI2AhgLCwsLIAAgASAHQXhxaiIDQQFyNgIEIAAgA2ogAzYCACAAQcDRAygCAEYEQEG00QMgAzYCAA8LCyADQQN2IQIgA0GAAkkEQCACQQN0QdTRA2ohAUGs0QMoAgAiA0EBIAJ0IgJxBH8gAUEIaiIDKAIABUGs0QMgAiADcjYCACABQQhqIQMgAQshAiADIAA2AgAgAiAANgIMIAAgAjYCCCAAIAE2AgwPCyADQQh2IgEEfyADQf///wdLBH9BHwUgASABQYD+P2pBEHZBCHEiAnQiBEGA4B9qQRB2QQRxIQFBDiABIAJyIAQgAXQiAUGAgA9qQRB2QQJxIgJyayABIAJ0QQ92aiIBQQF0IAMgAUEHanZBAXFyCwVBAAsiAkECdEHc0wNqIQEgACACNgIcIABBADYCFCAAQQA2AhACQEGw0QMoAgAiBEEBIAJ0IgZxRQRAQbDRAyAEIAZyNgIAIAEgADYCAAwBCyADIAEoAgAiASgCBEF4cUYEQCABIQIFAkAgA0EAQRkgAkEBdmsgAkEfRht0IQQDQCABQRBqIARBH3ZBAnRqIgYoAgAiAgRAIARBAXQhBCADIAIoAgRBeHFGDQIgAiEBDAELCyAGIAA2AgAMAgsLIAIoAggiASAANgIMIAIgADYCCCAAIAE2AgggACACNgIMIABBADYCGA8LIAAgATYCGCAAIAA2AgwgACAANgIIC80BAQN/Qe////8DIAFrIAJJBEAQAAsgACwAC0EASAR/IAAoAgAFIAALIQUgAUHn////AUkEQEECIAFBAXQiByABIAJqIgIgAiAHSRsiAkEEakF8cSACQQJJGyICQf////8DSwRAEAAFIAIhBgsFQe////8DIQYLIAZBAnQQUSECIAQEQCACIAUgBBCnAQsgAyAEayIDBEAgAiAEQQJ0aiAFIARBAnRqIAMQpwELIAFBAUcEQCAFEDgLIAAgAjYCACAAIAZBgICAgHhyNgIIC6ACAQR/IwYhCCMGQRBqJAZB7v///wMgAWsgAkkEQBAACyAALAALQQBIBH8gACgCAAUgAAshCSABQef///8BSQRAQQIgAUEBdCILIAEgAmoiAiACIAtJGyICQQRqQXxxIAJBAkkbIgJB/////wNLBEAQAAUgAiEKCwVB7////wMhCgsgCkECdBBRIQIgBARAIAIgCSAEEKcBCyAGBEAgBEECdCACaiAHIAYQpwELIAMgBWsiAyAEayIHBEAgBEECdCACaiAGQQJ0aiAEQQJ0IAlqIAVBAnRqIAcQpwELIAFBAUcEQCAJEDgLIAAgAjYCACAAIApBgICAgHhyNgIIIAAgAyAGaiIANgIEIAhBADYCACAAQQJ0IAJqIAgQbiAIJAYLkAEBA38jBiEDIwZBEGokBiABQe////8DSwRAEAALIAFBAkkEQCAAIAE6AAsgACEEBSABQQRqQXxxIgVB/////wNLBEAQAAUgACAFQQJ0EFEiBDYCACAAIAVBgICAgHhyNgIIIAAgATYCBAsLIAEEQCAEIAIgARDrBAsgA0EANgIAIAFBAnQgBGogAxBuIAMkBgvuAQEDfyMGIQgjBkEQaiQGQW4gAWsgAkkEQBAACyAALAALQQBIBH8gACgCAAUgAAshCSABQef///8HSQR/QQsgAUEBdCIKIAEgAmoiAiACIApJGyICQRBqQXBxIAJBC0kbBUFvCyIKEFEhAiAEBEAgAiAJIAQQqAELIAYEQCACIARqIAcgBhCoAQsgAyAFayIDIARrIgcEQCAGIAIgBGpqIAUgBCAJamogBxCoAQsgAUEKRwRAIAkQOAsgACACNgIAIAAgCkGAgICAeHI2AgggACADIAZqIgA2AgQgCEEAOgAAIAAgAmogCBBfIAgkBgsWACABBEAgACACEEJB/wFxIAEQRRoLC3IBA38jBiEDIwZBEGokBiABQW9LBEAQAAsgAUELSQRAIAAgAToACwUgACABQRBqQXBxIgQQUSIFNgIAIAAgBEGAgICAeHI2AgggACABNgIEIAUhAAsgACABIAIQlQQgA0EAOgAAIAAgAWogAxBfIAMkBgv6FQMMfwF+AnwjBiELIwZB0AFqJAYgC0HIAWohDSALQcABaiEOIAtB4ABqIQwgAygCBCEKA0AgByAKSARAIAMoAgAiCCAHQcACbGohCSAHQcACbCAIaigCBARAIAdBwAJsIAhqIRBBACEFQX8hBgNAIAUgAkgEQAJAAkACQCAFQQh0IAFqKAIMIg8NACAFQQh0IAFqKQP4ASIRUA0AIBEgECkDuAJRDQEMAgsgDyAJKAIARg0ADAELIAVBCHQgAWorAzAiEiADKwN4Y0UEQCAGQX9GBH8gBQUgBkEIdCABaisDMCASYwR/IAUFIAYLCyEGCwsgBUEBaiEFDAELCyAHQcACbCAIaiAGNgKwAiAGQX9KBEAgBkEIdCABaiAGQQh0IAFqKAIYNgIQCwVBfyEGQQAhBQNAIAUgAkgEQCAFQQh0IAFqKAIIIAkoAgBGBEAgBUEIdCABaisDKCISIAMrA3BjRQRAIAZBf0YEfyAFBSAGQQh0IAFqKwMoIBJjBH8gBQUgBgsLIQYLCyAFQQFqIQUMAQsLIAdBwAJsIAhqIAY2ArACIAZBf0oEQCAGQQh0IAFqIAZBCHQgAWooAhQ2AhALCyAHQQFqIQcMAQsLQQAhBUEAIQJBACEGQQAhBwNAIAcgCkgEQCADKAIAIgogB0HAAmxqKAKwAiIIQQBOBEACQCAAIAhBCHQgAWoiCSAHQcACbCAKaisDCCALENoDRAAAAAAAABBAZARAIAMoAgAgB0HAAmxqQX82ArACIAhBCHQgAWoiCCgC7AENASAIQQc2AuwBDAELIAVFIAIgCSgCACIISHIEQEEAIQIDfyACQQNGBH8gByEGIAgFQQAhBgNAIAZBBEcEQCACQQV0IAxqIAZBA3RqIAJBBXQgC2ogBkEDdGorAwA5AwAgBkEBaiEGDAELCyACQQFqIQIMAQsLIQILIAVBAWohBQsLIAdBAWohByADKAIEIQoMAQsLAkACQCAFRQ0AIAUgAygCgAFIDQAgDCADKAIAIAZBwAJsakHwAGogCxCzAiAFQQZ0EEQiB0UEQEEAQQNBudgCIA4QPUEBEAELIAVB4ABsEEQiBkUEQEEAQQNBudgCIA0QPUEBEAELIAVBAnQhCCADKAIEIRBBACEFQQAhAgNAIAUgEEgEQCADKAIAIgogBUHAAmxqKAKwAiIJQQBOBEAgAkEDdCINQQN0IAdqIAlBCHQgAWpBqAFqQQQgCUEIdCABaigCECIOa0EEEE8iD0EEdGorAwA5AwAgDUEBckEDdCAHaiAJQQh0IAFqIA9BBHRqKwOwATkDACANQQJyQQN0IAdqIAlBCHQgAWpBqAFqQQUgDmtBBBBPIg9BBHRqKwMAOQMAIA1BA3JBA3QgB2ogCUEIdCABaiAPQQR0aisDsAE5AwAgDUEEckEDdCAHaiAJQQh0IAFqQagBakEGIA5rQQQQTyIPQQR0aisDADkDACANQQVyQQN0IAdqIAlBCHQgAWogD0EEdGorA7ABOQMAIA1BBnJBA3QgB2ogCUEIdCABakGoAWpBByAOa0EEEE8iDkEEdGorAwA5AwAgDUEHckEDdCAHaiAJQQh0IAFqIA5BBHRqKwOwATkDACACQQxsIglBA3QgBmogBUHAAmwgCmorA9ABOQMAIAlBAXJBA3QgBmogBUHAAmwgCmorA9gBOQMAIAlBAnJBA3QgBmogBUHAAmwgCmorA+ABOQMAIAlBA3JBA3QgBmogBUHAAmwgCmorA+gBOQMAIAlBBGpBA3QgBmogBUHAAmwgCmorA/ABOQMAIAlBBWpBA3QgBmogBUHAAmwgCmorA/gBOQMAIAlBBmpBA3QgBmogBUHAAmwgCmorA4ACOQMAIAlBB2pBA3QgBmogBUHAAmwgCmorA4gCOQMAIAlBCGpBA3QgBmogBUHAAmwgCmorA5ACOQMAIAlBCWpBA3QgBmogBUHAAmwgCmorA5gCOQMAIAlBCmpBA3QgBmogBUHAAmwgCmorA6ACOQMAIAlBC2pBA3QgBmogBUHAAmwgCmorA6gCOQMAIAJBAWohAgsgBUEBaiEFDAELCyAEQQBHIQQgAygCaARAIAAgCyAHIAYgCCAMEL8CIhIgACADQQhqIgIgByAGIAggAhC/AiITYyEFIAQEQCAFBEBBACEEA0AgBEEDRwRAQQAhBQNAIAVBBEcEQCADQQhqIARBBXRqIAVBA3RqIARBBXQgDGogBUEDdGorAwA5AwAgBUEBaiEFDAELCyAEQQFqIQQMAQsLBSATIRILIBJEAAAAAAAANEBmBEAgACgCAESamZmZmZnpPxCNASAAIAsgByAGIAggDBCOASISIAAgAiAHIAYgCCACEI4BIhNjBEBBACEEA0AgBEEDRwRAQQAhBQNAIAVBBEcEQCADQQhqIARBBXRqIAVBA3RqIARBBXQgDGogBUEDdGorAwA5AwAgBUEBaiEFDAELCyAEQQFqIQQMAQsLBSATIRILIBJEAAAAAAAANEBmBEAgACgCAEQzMzMzMzPjPxCNASAAIAsgByAGIAggDBCOASISIAAgAiAHIAYgCCACEI4BIhNjBEBBACEEA0AgBEEDRwRAQQAhBQNAIAVBBEcEQCADQQhqIARBBXRqIAVBA3RqIARBBXQgDGogBUEDdGorAwA5AwAgBUEBaiEFDAELCyAEQQFqIQQMAQsLBSATIRILIBJEAAAAAAAANEBmBEAgACgCAESamZmZmZnZPxCNASAAIAsgByAGIAggDBCOASISIAAgAiAHIAYgCCACEI4BIhNjBEBBACEEA0AgBEEDRwRAQQAhBQNAIAVBBEcEQCADQQhqIARBBXRqIAVBA3RqIARBBXQgDGogBUEDdGorAwA5AwAgBUEBaiEFDAELCyAEQQFqIQQMAQsLBSATIRILIBJEAAAAAAAANEBmBEAgACgCAEQAAAAAAAAAABCNASAAIAsgByAGIAggDBCOASISIAAgAiAHIAYgCCACEI4BIhNjBEBBACEAA0AgAEEDRwRAQQAhAgNAIAJBBEcEQCADQQhqIABBBXRqIAJBA3RqIABBBXQgDGogAkEDdGorAwA5AwAgAkEBaiECDAELCyAAQQFqIQAMAQsLBSATIRILCwsLCwUgBQRAQQAhAANAIABBA0cEQEEAIQIDQCACQQRHBEAgA0EIaiAAQQV0aiACQQN0aiAAQQV0IAxqIAJBA3RqKwMAOQMAIAJBAWohAgwBCwsgAEEBaiEADAELCwUgEyESCwsFIAQgACALIAcgBiAIIANBCGoiAhC/AiISRAAAAAAAADRAZnEEQCAAKAIARJqZmZmZmek/EI0BIAAgCyAHIAYgCCACEI4BIhJEAAAAAAAANEBmBHwgACgCAEQzMzMzMzPjPxCNASAAIAsgByAGIAggAhCOASISRAAAAAAAADRAZgR8IAAoAgBEmpmZmZmZ2T8QjQEgACALIAcgBiAIIAIQjgEiEkQAAAAAAAA0QGYEfCAAKAIARAAAAAAAAAAAEI0BIAAgCyAHIAYgCCACEI4BBSASCwUgEgsFIBILIRILCyAGEDggBxA4AkAgEkQAAAAAAAA0QGMEQCADQQE2AmgMAQsgA0EANgJoIAMoAgQhAkEAIQADQCAAIAJODQEgAygCACAAQcACbGooArACIgRBAE4EQCAEQQh0IAFqIgQoAuwBRQRAIARBCDYC7AELCyAAQQFqIQAMAAALAAsMAQsgA0EANgJoCyALJAYLyQwCEH8RfCMGIQYjBkGAAWokBiAGQfgAaiEOIAZB8ABqIQ8gBkHoAGohECAGQeAAaiERIAZB2ABqIRIgBkHQAGohCCAGQcgAaiEJIANBBEgEf0F/BQJ/A0AgBSADSARAIAVBAWohE0F/IAVBGGwgAmorAxBEAAAAAAAAAABiDQIaIBMhBQwBCwsgACsDAEQAAAAAAAAAAGEEf0F/BSAAKwMgRAAAAAAAAAAAYgR/QX8FIAArAyhEAAAAAAAAAABhBH9BfwUgAEFAaysDAEQAAAAAAAAAAGIEf0F/BSAAKwNIRAAAAAAAAAAAYgR/QX8FIAArA1BEAAAAAAAA8D9iBH9BfwUgACsDGEQAAAAAAAAAAGIEf0F/BSAAKwM4RAAAAAAAAAAAYgR/QX8FIAArA1hEAAAAAAAAAABiBH9BfwUgA0EBdCIFQQgQiwEiCkUEQEEAQQNB9awBIAkQPUF/DAoLIAVBARCLASIJRQRAIAoQSUEAQQNBj60BIAgQPUF/DAoLQQAhCANAIAMgCEcEQCAKKAIAIgcgCEEEdCIFQQN0aiAIQRhsIAJqIgsrAwA5AwAgBUEBckEDdCAHaiAIQRhsIAJqIgwrAwg5AwAgBUECckEDdCAHakQAAAAAAADwPzkDACAFQQNyQQN0IAdqRAAAAAAAAAAAOQMAIAVBBHJBA3QgB2pEAAAAAAAAAAA5AwAgBUEFckEDdCAHakQAAAAAAAAAADkDACAFQQZyQQN0IAdqIAsrAwAgCEEEdCABaiINKwMAopo5AwAgBUEHckEDdCAHaiAMKwMIIA0rAwCimjkDACAFQQhyQQN0IAdqRAAAAAAAAAAAOQMAIAVBCXJBA3QgB2pEAAAAAAAAAAA5AwAgBUEKckEDdCAHakQAAAAAAAAAADkDACAFQQtyQQN0IAdqIAsrAwA5AwAgBUEMckEDdCAHaiAMKwMIOQMAIAVBDXJBA3QgB2pEAAAAAAAA8D85AwAgBUEOckEDdCAHaiALKwMAIAhBBHQgAWoiCysDCKKaOQMAIAVBD3JBA3QgB2ogDCsDCCALKwMIopo5AwAgCSgCACIHIAhBAXQiBUEDdGogDSsDADkDACAFQQFyQQN0IAdqIAsrAwg5AwAgCEEBaiEIDAELCyAKEKADIgFFBEAgChBJIAkQSUEAQQNBqa0BIBIQPUF/DAoLIAEgChDZASIDRQRAIAoQSSAJEEkgARBJQQBBA0HDrQEgERA9QX8MCgsgASAJENkBIgVFBEAgChBJIAkQSSABEEkgAxBJQQBBA0HdrQEgEBA9QX8MCgsgAxDWAUEASARAIAoQSSAJEEkgARBJIAMQSSAFEElBAEEDQfetASAPED1BfwwKCyADIAUQ2QEiBwR/IAcoAgAiAisDMCEWIAIrAwAgFiAAKwMQIh2ioSACKwMYIBYgACsDMCIboqEgACsDKCIcoyIZIAArAwgiHqKhIAArAwAiH6MhGCACKwMgIBsgAisDOCIVoqEgHKMhFyACKwMIIB0gFaKhIB4gF6KhIB+jIRogAisDKCAboSAcoyEbIAIrAxAhJCAKEEkgCRBJIAEQSSADEEkgBRBJIAcQSSAGIBggFiAWoiAZIBmiIBggGKKgoJ8iGKM5AwAgBiAZIBijOQMIIAYgFiAYozkDECAGIBogFSAVoiAXIBeiIBogGqKgoJ8iFqM5AxggBiAXIBajOQMgIAYgFSAWozkDKCAGEPIJIAYrAwgiGSAGKwMoIhqiIAYrAxAiHCAGKwMgIiCioSEVIBwgBisDGCIhoiAaIAYrAwAiIqKhIRcgBiAVICAgIqIgGSAhoqEiIyAjoiAVIBWiIBcgF6KgoJ8iFaMiJTkDMCAGIBcgFaMiFzkDOCAGQUBrICMgFaMiFTkDACAEICI5AwAgBCAZOQMgIARBQGsgHDkDACAEICE5AwggBCAgOQMoIAQgGjkDSCAEICU5AxAgBCAXOQMwIAQgFTkDUCAEICQgHaEgHiAboqEgH6MgGCAWoEQAAAAAAADgP6IiFqM5AxggBCAbIBajOQM4IAREAAAAAAAA8D8gFqM5A1hBAAUgChBJIAkQSSABEEkgAxBJIAUQSUEAQQNBka4BIA4QPUF/CwsLCwsLCwsLCwsLIRQgBiQGIBQLEgAgAEGsogE2AgAgAEEQahBHCxIAIABBhKIBNgIAIABBDGoQRwsjAQF/IABB0KEBNgIAIAAoAggiAQRAIAAsAAwEQCABEDgLCwt9AQR/IABBvKEBNgIAIABBCGohAwNAIAIgACgCDCADKAIAIgFrQQJ1SQRAIAJBAnQgAWooAgAiAQRAIAEgASgCBCIEQX9qNgIEIARFBEAgASABKAIAKAIIQf8BcUGsA2oRAQALCyACQQFqIQIMAQsLIABBkAFqEEcgAxCPCgvUCgIPfwR8IwYhCyMGQcABaiQGIAtBuAFqIQggC0GwAWohDiALQagBaiEKIAtBoAFqIQUgC0GQAWohDyALQTBqIRAgASgCCCIJQQRIBH9BfwUCfwJ/IAArA4ABIAm3ohBzIREgCUHgAGwQRCIGRQRAQQBBA0HK2AIgBRA9QX8MAgsgCUEEdBBEIgdFBEBBAEEDQcrYAiAKED0gBhA4QX8MAgsgCUEDdCIFEEQiCUUEQEEAQQNBytgCIA4QPSAGEDggBxA4QX8MAgsgBRBEIg1FBEBBAEEDQcrYAiAIED0gBhA4IAcQOCAJEDhBfwwCCyARQX9qIgULQQMgBUEDShshEkEAIQoDQCAKQQNHBEBBACEMA0AgDEEERwRAIApBBXQgA2ogDEEDdGogCkEFdCACaiAMQQN0aisDADkDACAMQQFqIQwMAQsLIApBAWohCgwBCwsgEkEDdCANaiEMQQAhCgJAAkACQAJAA0ACQCAAIAMgEBCzAkEAIQUDQCAFIAEoAggiAkgEQCAPIBAgASgCBCAFQRhsahC7BEEASA0CIAEoAgAiAiAFQQR0aisDACAPKwMAoSEWIAVBBHQgAmorAwggDysDCKEhFCAFQQF0IgJBA3QgB2ogFjkDACACQQFyQQN0IAdqIBQ5AwAgBUEDdCANaiAWIBaiIBQgFKKgIhQ5AwAgBUEDdCAJaiAUOQMAIAVBAWohBQwBCwsgDSACQQhBEhCCAyABKAIIIQJEAAAAAAAAMEAgDCsDAEQAAAAAAAAQQKIiFCAURAAAAAAAADBAYxsiF0QAAAAAAAAYQKMhFkQAAAAAAAAAACEUQQAhBQNAIAUgAkgEQCAUIAVBA3QgDWorAwAiFCAXZAR8IBYFIBZEAAAAAAAA8D9EAAAAAAAA8D8gFCAXo6EiFCAUIBSioqGiC6AhFCAFQQFqIQUMAQsLIBQgArejIhQgACsDaGMNBSAKBEAgFCAAKwN4YwRAIBQgFaMgACsDcGQNBwsLIAogACgCYEYNBUEAIQVBACEOA0AgDiACSARAIA5BA3QgCWorAwAiFSAXZQRAIAVBBmwiCEEDdCAGaiICIAAgAyABKAIEIA5BGGxqELkEQQBIDQUgAkQAAAAAAADwPyAVIBejoSIVIBWiIhUgAisDAKI5AwAgCEEBckEDdCAGaiICIBUgAisDAKI5AwAgCEECakEDdCAGaiICIBUgAisDAKI5AwAgCEEDakEDdCAGaiICIBUgAisDAKI5AwAgCEEEakEDdCAGaiICIBUgAisDAKI5AwAgCEEFakEDdCAGaiICIBUgAisDAKI5AwAgCEEGakEDdCAGaiICIBUgAisDAKI5AwAgCEEHakEDdCAGaiICIBUgAisDAKI5AwAgCEEIakEDdCAGaiICIBUgAisDAKI5AwAgCEEJakEDdCAGaiICIBUgAisDAKI5AwAgCEEKakEDdCAGaiICIBUgAisDAKI5AwAgCEELakEDdCAGaiICIBUgAisDAKI5AwAgBUEDdCAHaiAVIA5BAXQiAkEDdCAHaisDAKI5AwAgBUEBakEDdCAHaiAVIAJBAXJBA3QgB2orAwCiOQMAIAVBAmohBSABKAIIIQILIA5BAWohDgwBCwsgBUEGSA0DIAsgByAGIAUQswRBAEgNBCADIAsQsgQgFCEVIApBAWohCgwBCwsgBiAHIAkgDRCPAkF/DAQLIAYgByAJIA0QjwJBfwwDCyAGIAcgCSANEI8CQX8MAgsgBiAHIAkgDRCPAkF/DAELIAQgFDkDACAGEDggBxA4IAkQOCANEDhBAAsLIRMgCyQGIBMLHgAgAEGMoQE2AgAgACgCCBBcRwRAIAAoAggQhwMLCxIAIAQgAjYCACAHIAU2AgBBAwsEAEEECxUAIAEoAgAgASABLAALQQBIGxpBfwv+CAEMfyACIAA2AgAgDUEEaiEYIANBgARxRSEZIA5BAEohGgNAIBdBBEcEQAJAAkACQAJAAkACQCAIIBdqLAAADgUAAQMCBAULIAEgAigCADYCAAwECyABIAIoAgA2AgAgBigCACgCLCEPIAZBICAPQT9xQYoBahECACEQIAIgAigCACIPQQRqNgIAIA8gEDYCAAwDCyANLAALIg9BAEghECAYKAIAIA9B/wFxIBAbBEAgDSgCACANIBAbKAIAIRAgAiACKAIAIg9BBGo2AgAgDyAQNgIACwwCCyAMLAALIg9BAEghECAZIAwoAgQgD0H/AXEgEBsiE0VyRQRAIAwoAgAgDCAQGyIPIBNBAnRqIREgAigCACIQIRIDQCAPIBFHBEAgEiAPKAIANgIAIBJBBGohEiAPQQRqIQ8MAQsLIAIgE0ECdCAQajYCAAsMAQsgAigCACEUIARBBGogBCAHGyIWIQQDQAJAIAQgBU8NACAGKAIAKAIMIQ8gBkGAECAEKAIAIA9BP3FBygFqEQQARQ0AIARBBGohBAwBCwsgGgRAIA4hDwNAIA9BAEoiECAEIBZLcQRAIARBfGoiBCgCACERIAIgAigCACIQQQRqNgIAIBAgETYCACAPQX9qIQ8MAQsLIBAEfyAGKAIAKAIsIRAgBkEwIBBBP3FBigFqEQIABUEACyETIA8hESACKAIAIRADQCAQQQRqIQ8gEUEASgRAIBAgEzYCACARQX9qIREgDyEQDAELCyACIA82AgAgECAJNgIACyAEIBZGBEAgBigCACgCLCEEIAZBMCAEQT9xQYoBahECACEQIAIgAigCACIPQQRqIgQ2AgAgDyAQNgIABSALLAALIg9BAEghECALKAIEIA9B/wFxIBAbBH8gCygCACALIBAbLAAABUF/CyEPQQAhEEEAIRIgBCERA0AgESAWRwRAIAIoAgAhFSAPIBJGBH8gAiAVQQRqIhM2AgAgFSAKNgIAIAssAAsiD0EASCEVIBBBAWoiBCALKAIEIA9B/wFxIBUbSQRAQX8gBCALKAIAIAsgFRtqLAAAIg8gD0H/AEYbIQ8FIBIhDwtBACESIBMFIBAhBCAVCyEQIBFBfGoiESgCACETIAIgEEEEajYCACAQIBM2AgAgBCEQIBJBAWohEgwBCwsgAigCACEECyAEIBRGBH8gFgUDQCAUIARBfGoiBEkEQCAUKAIAIQ8gFCAEKAIANgIAIAQgDzYCACAUQQRqIRQMAQUgFiEEDAMLAAALAAshBAsgF0EBaiEXDAELCyANLAALIgRBAEghByAYKAIAIARB/wFxIAcbIgZBAUsEQCANKAIAIgVBBGogGCAHGyEEIAZBAnQgBSANIAcbaiIHIARrIQYgAigCACIFIQgDQCAEIAdHBEAgCCAEKAIANgIAIAhBBGohCCAEQQRqIQQMAQsLIAIgBkECdkECdCAFajYCAAsCQCADQbABcUEYdEEYdUEQayIDRQ0AIANBEEYEQCABIAIoAgA2AgAMAQsgASAANgIACwvZBQEFfyMGIQojBkEQaiQGIApBDGohCyAKIAAEfyACQfjPAxA6BSACQfDPAxA6CyIAIAEEfyALIAAgACgCACgCLEE/cUGyBWoRAwAgAyALKAIANgAAIAAoAgAoAiAFIAsgACAAKAIAKAIoQT9xQbIFahEDACADIAsoAgA2AAAgACgCACgCHAtBP3FBsgVqEQMAIAgsAAtBAEgEQAJ/IAgoAgAhDCALQQA2AgAgDAsgCxBuIAhBADYCBCAILAALQQBIBEAgCCgCCBogCCgCABA4IAhBADYCCAsFIAtBADYCACAIIAsQbiAIQQA6AAsLIAggCikCADcCACAIIAooAgg2AghBACEBA0AgAUEDRwRAIAFBAnQgCmpBADYCACABQQFqIQEMAQsLIAoQRyAEIAAgACgCACgCDEH/AHFBCGoRAAA2AgAgBSAAIAAoAgAoAhBB/wBxQQhqEQAANgIAIAogACAAKAIAKAIUQT9xQbIFahEDACAGLAALQQBIBEACfyAGKAIAIQ0gC0EAOgAAIA0LIAsQXyAGQQA2AgQgBiwAC0EASARAIAYoAggaIAYoAgAQOCAGQQA2AggLBSALQQA6AAAgBiALEF8gBkEAOgALCyAGIAopAgA3AgAgBiAKKAIINgIIQQAhAQNAIAFBA0cEQCABQQJ0IApqQQA2AgAgAUEBaiEBDAELCyAKEEcgCiAAIAAoAgAoAhhBP3FBsgVqEQMAIAcsAAtBAEgEQAJ/IAcoAgAhDiALQQA2AgAgDgsgCxBuIAdBADYCBCAHLAALQQBIBEAgBygCCBogBygCABA4IAdBADYCCAsFIAtBADYCACAHIAsQbiAHQQA6AAsLIAcgCikCADcCACAHIAooAgg2AghBACEBA0AgAUEDRwRAIAFBAnQgCmpBADYCACABQQFqIQEMAQsLIAoQRyAJIAAgACgCACgCJEH/AHFBCGoRAAA2AgAgCiQGC7YIAQp/IAIgADYCACADQYAEcUUhFyAOQQBKIRgDQCAVQQRHBEACQAJAAkACQAJAAkAgCCAVaiwAAA4FAAEDAgQFCyABIAIoAgA2AgAMBAsgASACKAIANgIAIAYoAgAoAhwhDyAGQSAgD0E/cUGKAWoRAgAhECACIAIoAgAiD0EBajYCACAPIBA6AAAMAwsgDSwACyIPQQBIIRAgDSgCBCAPQf8BcSAQGwRAIA0oAgAgDSAQGywAACEQIAIgAigCACIPQQFqNgIAIA8gEDoAAAsMAgsgDCwACyIPQQBIIRAgFyAMKAIEIA9B/wFxIBAbIg9FckUEQCAPIAwoAgAgDCAQGyIPaiEQIAIoAgAhEQNAIA8gEEcEQCARIA8sAAA6AAAgEUEBaiERIA9BAWohDwwBCwsgAiARNgIACwwBCyACKAIAIRIgBEEBaiAEIAcbIhMhBANAAkAgBCAFTw0AIAQsAAAiD0F/TA0AIAYoAgggD0EBdGouAQBBgBBxRQ0AIARBAWohBAwBCwsgGARAIA4hDwNAIA9BAEoiECAEIBNLcQRAIARBf2oiBCwAACERIAIgAigCACIQQQFqNgIAIBAgEToAACAPQX9qIQ8MAQsLIBAEfyAGKAIAKAIcIRAgBkEwIBBBP3FBigFqEQIABUEACyERA0AgAiACKAIAIhBBAWo2AgAgD0EASgRAIBAgEToAACAPQX9qIQ8MAQsLIBAgCToAAAsgBCATRgRAIAYoAgAoAhwhBCAGQTAgBEE/cUGKAWoRAgAhDyACIAIoAgAiBEEBajYCACAEIA86AAAFAkAgCywACyIPQQBIIRAgCygCBCAPQf8BcSAQGwR/IAsoAgAgCyAQGywAAAVBfwshD0EAIRFBACEUIAQhEANAIBAgE0YNASAPIBRGBEAgAiACKAIAIgRBAWo2AgAgBCAKOgAAIAssAAsiD0EASCEWIBFBAWoiBCALKAIEIA9B/wFxIBYbSQRAQX8gBCALKAIAIAsgFhtqLAAAIg8gD0H/AEYbIQ8FIBQhDwtBACEUBSARIQQLIBBBf2oiECwAACEWIAIgAigCACIRQQFqNgIAIBEgFjoAACAEIREgFEEBaiEUDAAACwALCyACKAIAIgQgEkYEfyATBQNAIBIgBEF/aiIESQRAIBIsAAAhDyASIAQsAAA6AAAgBCAPOgAAIBJBAWohEgwBBSATIQQMAwsAAAsACyEECyAVQQFqIRUMAQsLIA0sAAsiBEEASCEGIA0oAgQgBEH/AXEgBhsiBUEBSwRAIA0oAgAgDSAGGyIEIAVqIQUgAigCACEGA0AgBSAEQQFqIgRHBEAgBiAELAAAOgAAIAZBAWohBgwBCwsgAiAGNgIACwJAIANBsAFxQRh0QRh1QRBrIgNFDQAgA0EQRgRAIAEgAigCADYCAAwBCyABIAA2AgALC9kFAQV/IwYhCiMGQRBqJAYgCkEMaiELIAogAAR/IAJB6M8DEDoFIAJB4M8DEDoLIgAgAQR/IAsgACAAKAIAKAIsQT9xQbIFahEDACADIAsoAgA2AAAgACgCACgCIAUgCyAAIAAoAgAoAihBP3FBsgVqEQMAIAMgCygCADYAACAAKAIAKAIcC0E/cUGyBWoRAwAgCCwAC0EASARAAn8gCCgCACEMIAtBADoAACAMCyALEF8gCEEANgIEIAgsAAtBAEgEQCAIKAIIGiAIKAIAEDggCEEANgIICwUgC0EAOgAAIAggCxBfIAhBADoACwsgCCAKKQIANwIAIAggCigCCDYCCEEAIQEDQCABQQNHBEAgAUECdCAKakEANgIAIAFBAWohAQwBCwsgChBHIAQgACAAKAIAKAIMQf8AcUEIahEAADoAACAFIAAgACgCACgCEEH/AHFBCGoRAAA6AAAgCiAAIAAoAgAoAhRBP3FBsgVqEQMAIAYsAAtBAEgEQAJ/IAYoAgAhDSALQQA6AAAgDQsgCxBfIAZBADYCBCAGLAALQQBIBEAgBigCCBogBigCABA4IAZBADYCCAsFIAtBADoAACAGIAsQXyAGQQA6AAsLIAYgCikCADcCACAGIAooAgg2AghBACECA0AgAkEDRwRAIAJBAnQgCmpBADYCACACQQFqIQIMAQsLIAoQRyAKIAAgACgCACgCGEE/cUGyBWoRAwAgBywAC0EASARAAn8gBygCACEOIAtBADoAACAOCyALEF8gB0EANgIEIAcsAAtBAEgEQCAHKAIIGiAHKAIAEDggB0EANgIICwUgC0EAOgAAIAcgCxBfIAdBADoACwsgByAKKQIANwIAIAcgCigCCDYCCEEAIQEDQCABQQNHBEAgAUECdCAKakEANgIAIAFBAWohAQwBCwsgChBHIAkgACAAKAIAKAIkQf8AcUEIahEAADYCACAKJAYLtSMBG38jBiEPIwZBgARqJAYgD0H0A2ohGSAPQdgDaiEfIA9B1ANqISAgD0G8A2ohDCAPQbADaiENIA9BpANqIQ4gD0GYA2ohESAPQZQDaiEXIA9BkANqIRwgD0HwA2oiGiAKNgIAIA9B6ANqIhQgDzYCACAUQZEBNgIEIA9B4ANqIhIgDzYCACAPQdwDaiIbIA9BkANqNgIAIA9ByANqIhZCADcCACAWQQA2AghBACEKA0AgCkEDRwRAIApBAnQgFmpBADYCACAKQQFqIQoMAQsLIAxCADcCACAMQQA2AghBACEKA0AgCkEDRwRAIApBAnQgDGpBADYCACAKQQFqIQoMAQsLIA1CADcCACANQQA2AghBACEKA0AgCkEDRwRAIApBAnQgDWpBADYCACAKQQFqIQoMAQsLIA5CADcCACAOQQA2AghBACEKA0AgCkEDRwRAIApBAnQgDmpBADYCACAKQQFqIQoMAQsLIBFCADcCACARQQA2AghBACEKA0AgCkEDRwRAIApBAnQgEWpBADYCACAKQQFqIQoMAQsLIAIgAyAZIB8gICAWIAwgDSAOIBcQqwogCSAIKAIANgIAIARBgARxQQBHISFBACECAn8CQAJAAkACQAJAAkADQAJAIBNBBE8NByAAKAIAIgMEfyADKAIMIgQgAygCEEYEfyADIAMoAgAoAiRB/wBxQQhqEQAABSAEKAIAC0F/EEEEfyAAQQA2AgBBAQUgACgCAEULBUEBCyEDAkACQCABKAIAIgtFDQAgCygCDCIEIAsoAhBGBH8gCyALKAIAKAIkQf8AcUEIahEAAAUgBCgCAAtBfxBBBEAgAUEANgIADAEFIANFDQoLDAELIAMNCEEAIQsLAkACQAJAAkACQAJAAkAgEyAZaiwAAA4FAQADAgQGCyATQQNHBEAgB0GAwAAgACgCACIDKAIMIgQgAygCEEYEfyADIAMoAgAoAiRB/wBxQQhqEQAABSAEKAIACyAHKAIAKAIMQT9xQcoBahEEAEUNByARIAAoAgAiAygCDCIEIAMoAhBGBH8gAyADKAIAKAIoQf8AcUEIahEAAAUgAyAEQQRqNgIMIAQoAgALEI4CDAULDAULIBNBA0cNAwwECyANKAIEIA0sAAsiA0H/AXEgA0EASBsiC0EAIA4oAgQgDiwACyIDQf8BcSADQQBIGyIQa0cEQCAAKAIAIgMoAgwiBCADKAIQRiEKIAtFIgsgEEVyBEAgCgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAQoAgALIQMgCwRAIA4oAgAgDiAOLAALQQBIGygCACADRw0GIAAoAgAiAygCDCIEIAMoAhBGBEAgAyADKAIAKAIoQf8AcUEIahEAABoFIAMgBEEEajYCDCAEKAIAGgsgBkEBOgAAIA4gAiAOKAIEIA4sAAsiAkH/AXEgAkEASBtBAUsbIQIMBgsgDSgCACANIA0sAAtBAEgbKAIAIANHBEAgBkEBOgAADAYLIAAoAgAiAygCDCIEIAMoAhBGBEAgAyADKAIAKAIoQf8AcUEIahEAABoFIAMgBEEEajYCDCAEKAIAGgsgDSACIA0oAgQgDSwACyICQf8BcSACQQBIG0EBSxshAgwFCwJ/IAoEfyADIAMoAgAoAiRB/wBxQQhqEQAABSAEKAIACyEkIAAoAgAiAygCDCIEIAMoAhBGIQogJCANKAIAIA0gDSwAC0EASBsoAgBGCwRAIAoEQCADIAMoAgAoAihB/wBxQQhqEQAAGgUgAyAEQQRqNgIMIAQoAgAaCyANIAIgDSgCBCANLAALIgJB/wFxIAJBAEgbQQFLGyECDAULIAoEfyADIAMoAgAoAiRB/wBxQQhqEQAABSAEKAIACyAOKAIAIA4gDiwAC0EASBsoAgBHDQcgACgCACIDKAIMIgQgAygCEEYEQCADIAMoAgAoAihB/wBxQQhqEQAAGgUgAyAEQQRqNgIMIAQoAgAaCyAGQQE6AAAgDiACIA4oAgQgDiwACyICQf8BcSACQQBIG0EBSxshAgsMAwsCQAJAIBNBAkkgAnIEQCAMKAIAIgQgDCAMLAALIgpBAEgbIQMgEw0BBSATQQJGIBksAANBAEdxICFyRQRAQQAhAgwGCyAMKAIAIgQgDCAMLAALIgpBAEgbIQMMAQsMAQsgGSATQX9qai0AAEECSARAAkACQANAIAMgDCgCBCAKQf8BcSAKQRh0QRh1QQBIIhAbQQJ0IAQgDCAQG2pHBEAgB0GAwAAgAygCACAHKAIAKAIMQT9xQcoBahEEAEUNAiADQQRqIQMgDCwACyEKIAwoAgAhBAwBCwsMAQsgDCwACyEKIAwoAgAhBAsgESwACyIYQQBIIRUgAyAEIAwgCkEYdEEYdUEASBsiHSIQa0ECdSIiIBEoAgQiHiAYQf8BcSIYIBUbSwR/IBAFIBEoAgAgHkECdGoiHiAYQQJ0IBFqIhggFRshI0EAICJrQQJ0IB4gGCAVG2ohFQN/IBUgI0YNAyAVKAIAIB0oAgBGBH8gHUEEaiEdIBVBBGohFQwBBSAQCwsLIQMLCwNAAkAgAyAMKAIEIApB/wFxIApBGHRBGHVBAEgiChtBAnQgBCAMIAobakYNACAAKAIAIgQEfyAEKAIMIgogBCgCEEYEfyAEIAQoAgAoAiRB/wBxQQhqEQAABSAKKAIAC0F/EEEEfyAAQQA2AgBBAQUgACgCAEULBUEBCyEEAkACQCALRQ0AIAsoAgwiCiALKAIQRgR/IAsgCygCACgCJEH/AHFBCGoRAAAFIAooAgALQX8QQQRAIAFBADYCAAwBBSAERQ0DCwwBCyAEDQFBACELCyAAKAIAIgQoAgwiCiAEKAIQRgR/IAQgBCgCACgCJEH/AHFBCGoRAAAFIAooAgALIAMoAgBHDQAgACgCACIEKAIMIgogBCgCEEYEQCAEIAQoAgAoAihB/wBxQQhqEQAAGgUgBCAKQQRqNgIMIAooAgAaCyADQQRqIQMgDCwACyEKIAwoAgAhBAwBCwsgIQRAIAwsAAsiCkEASCEEIAwoAgQgCkH/AXEgBBtBAnQgDCgCACAMIAQbaiADRw0HCwwCC0EAIQQgCyEDA0ACQCAAKAIAIgoEfyAKKAIMIhAgCigCEEYEfyAKIAooAgAoAiRB/wBxQQhqEQAABSAQKAIAC0F/EEEEfyAAQQA2AgBBAQUgACgCAEULBUEBCyEKAkACQCALRQ0AIAsoAgwiECALKAIQRgR/IAsgCygCACgCJEH/AHFBCGoRAAAFIBAoAgALQX8QQQRAIAFBADYCAEEAIQMMAQUgCkUNAwsMAQsgCg0BQQAhCwsgB0GAECAAKAIAIgooAgwiECAKKAIQRgR/IAogCigCACgCJEH/AHFBCGoRAAAFIBAoAgALIhAgBygCACgCDEE/cUHKAWoRBAAEfyAJKAIAIgogGigCAEYEQCAIIAkgGhDNASAJKAIAIQoLIAkgCkEEajYCACAKIBA2AgAgBEEBagUgFigCBCAWLAALIgpB/wFxIApBAEgbQQBHIARBAEdxIBAgICgCAEZxRQ0BIBIoAgAiCiAbKAIARgRAIBQgEiAbEM0BIBIoAgAhCgsgEiAKQQRqNgIAIAogBDYCAEEACyEEIAAoAgAiCigCDCIQIAooAhBGBEAgCiAKKAIAKAIoQf8AcUEIahEAABoFIAogEEEEajYCDCAQKAIAGgsMAQsLIBIoAgAiCiAUKAIARyAEQQBHcQRAIAogGygCAEYEQCAUIBIgGxDNASASKAIAIQoLIBIgCkEEajYCACAKIAQ2AgALIBcoAgBBAEoEQAJAIAAoAgAiBAR/IAQoAgwiCiAEKAIQRgR/IAQgBCgCACgCJEH/AHFBCGoRAAAFIAooAgALQX8QQQR/IABBADYCAEEBBSAAKAIARQsFQQELIQQCQAJAIANFDQAgAygCDCIKIAMoAhBGBH8gAyADKAIAKAIkQf8AcUEIahEAAAUgCigCAAtBfxBBBEAgAUEANgIADAEFIARFDQsLDAELIAQNCUEAIQMLIAAoAgAiBCgCDCIKIAQoAhBGBH8gBCAEKAIAKAIkQf8AcUEIahEAAAUgCigCAAsgHygCAEcNCCAAKAIAIgQoAgwiCiAEKAIQRgRAIAQgBCgCACgCKEH/AHFBCGoRAAAaBSAEIApBBGo2AgwgCigCABoLA0AgFygCAEEATA0BIAAoAgAiBAR/IAQoAgwiCiAEKAIQRgR/IAQgBCgCACgCJEH/AHFBCGoRAAAFIAooAgALQX8QQQR/IABBADYCAEEBBSAAKAIARQsFQQELIQQCQAJAIANFDQAgAygCDCIKIAMoAhBGBH8gAyADKAIAKAIkQf8AcUEIahEAAAUgCigCAAtBfxBBBEAgAUEANgIADAEFIARFDQ0LDAELIAQNC0EAIQMLIAdBgBAgACgCACIEKAIMIgogBCgCEEYEfyAEIAQoAgAoAiRB/wBxQQhqEQAABSAKKAIACyAHKAIAKAIMQT9xQcoBahEEAEUNCiAJKAIAIBooAgBGBEAgCCAJIBoQzQELIAAoAgAiBCgCDCIKIAQoAhBGBH8gBCAEKAIAKAIkQf8AcUEIahEAAAUgCigCAAshBCAJIAkoAgAiCkEEajYCACAKIAQ2AgAgFyAXKAIAQX9qNgIAIAAoAgAiBCgCDCIKIAQoAhBGBEAgBCAEKAIAKAIoQf8AcUEIahEAABoFIAQgCkEEajYCDCAKKAIAGgsMAAALAAsLIAkoAgAgCCgCAEYNCAwBCwNAIAAoAgAiAwR/IAMoAgwiBCADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAQoAgALQX8QQQR/IABBADYCAEEBBSAAKAIARQsFQQELIQMCQAJAIAtFDQAgCygCDCIEIAsoAhBGBH8gCyALKAIAKAIkQf8AcUEIahEAAAUgBCgCAAtBfxBBBEAgAUEANgIADAEFIANFDQQLDAELIAMNAkEAIQsLIAdBgMAAIAAoAgAiAygCDCIEIAMoAhBGBH8gAyADKAIAKAIkQf8AcUEIahEAAAUgBCgCAAsgBygCACgCDEE/cUHKAWoRBABFDQEgESAAKAIAIgMoAgwiBCADKAIQRgR/IAMgAygCACgCKEH/AHFBCGoRAAAFIAMgBEEEajYCDCAEKAIACxCOAgwAAAsACyATQQFqIRMMAQsLIAUgBSgCAEEEcjYCAEEADAYLIAUgBSgCAEEEcjYCAEEADAULIAUgBSgCAEEEcjYCAEEADAQLIAUgBSgCAEEEcjYCAEEADAMLIAUgBSgCAEEEcjYCAEEADAILIAUgBSgCAEEEcjYCAEEADAELIAIEQAJAIAIhBkEBIQcDQAJAIAcgAiwACyIDQQBIBH8gBigCBAUgA0H/AXELTw0CIAAoAgAiAwR/IAMoAgwiBCADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAQoAgALQX8QQQR/IABBADYCAEEBBSAAKAIARQsFQQELIQQCQAJAIAEoAgAiA0UNACADKAIMIgggAygCEEYEfyADIAMoAgAoAiRB/wBxQQhqEQAABSAIKAIAC0F/EEEEQCABQQA2AgAMAQUgBEUNAwsMAQsgBA0BCyAAKAIAIgMoAgwiBCADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAQoAgALIAIsAAtBAEgEfyACKAIABSACCyAHQQJ0aigCAEcNACAAKAIAIgMoAgwiBCADKAIQRgRAIAMgAygCACgCKEH/AHFBCGoRAAAaBSADIARBBGo2AgwgBCgCABoLIAdBAWohBwwBCwsgBSAFKAIAQQRyNgIAQQAMAgsLIBQoAgAiACASKAIAIgFGBH9BAQUgHEEANgIAIBYgACABIBwQeCAcKAIABH8gBSAFKAIAQQRyNgIAQQAFQQELCwshJSAREEcgDhBHIA0QRyAMEEcgFhBHIBQoAgAhACAUQQA2AgAgAARAIAAgFCgCBEH/AXFBrANqEQEACyAPJAYgJQusAQEFfyACKAIAIAAoAgAiAyIGayIFQQF0IgRBASAEG0F/IAVB/////wdJGyEFIAEoAgAhByADQQAgACgCBEGRAUciBBsgBRDoASIDRQRAEAALIAQEQCAAIAM2AgAFIAAoAgAhBCAAIAM2AgAgBARAIAQgACgCBEH/AXFBrANqEQEAIAAoAgAhAwsLIABBkgE2AgQgASAHIAZrIANqNgIAIAIgBSAAKAIAajYCAAucJAEafyMGIRAjBkGABGokBiAQQfADaiEaIBBB7QNqISAgEEHsA2ohISAQQbwDaiENIBBBsANqIQ4gEEGkA2ohDyAQQZgDaiERIBBBlANqIRcgEEGQA2ohHiAQQegDaiIbIAo2AgAgEEHgA2oiFSAQNgIAIBVBkQE2AgQgEEHYA2oiEyAQNgIAIBBB1ANqIhwgEEGQA2o2AgAgEEHIA2oiFkIANwIAIBZBADYCCEEAIQoDQCAKQQNHBEAgCkECdCAWakEANgIAIApBAWohCgwBCwsgDUIANwIAIA1BADYCCEEAIQoDQCAKQQNHBEAgCkECdCANakEANgIAIApBAWohCgwBCwsgDkIANwIAIA5BADYCCEEAIQoDQCAKQQNHBEAgCkECdCAOakEANgIAIApBAWohCgwBCwsgD0IANwIAIA9BADYCCEEAIQoDQCAKQQNHBEAgCkECdCAPakEANgIAIApBAWohCgwBCwsgEUIANwIAIBFBADYCCEEAIQoDQCAKQQNHBEAgCkECdCARakEANgIAIApBAWohCgwBCwsgAiADIBogICAhIBYgDSAOIA8gFxCvCiAJIAgoAgA2AgAgBEGABHFBAEchIkEAIQICfwJAAkACQAJAAkACQANAAkAgFEEETw0HIAAoAgAiAwR/IAMoAgwiBCADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAQsAAAQQgtBfxBBBH8gAEEANgIAQQEFIAAoAgBFCwVBAQshAwJAAkAgASgCACIMRQ0AIAwoAgwiBCAMKAIQRgR/IAwgDCgCACgCJEH/AHFBCGoRAAAFIAQsAAAQQgtBfxBBBEAgAUEANgIADAEFIANFDQoLDAELIAMNCEEAIQwLAkACQAJAAkACQAJAAkAgFCAaaiwAAA4FAQADAgQGCyAUQQNHBEAgACgCACIDKAIMIgQgAygCEEYEfyADIAMoAgAoAiRB/wBxQQhqEQAABSAELAAAEEILIgNB/wFxQRh0QRh1QX9MDQcgBygCCCADQRh0QRh1QQF0ai4BAEGAwABxRQ0HIBEgACgCACIDKAIMIgQgAygCEEYEfyADIAMoAgAoAihB/wBxQQhqEQAABSADIARBAWo2AgwgBCwAABBCC0H/AXEQzAEMBQsMBQsgFEEDRw0DDAQLIA4oAgQgDiwACyIDQf8BcSADQQBIGyILQQAgDygCBCAPLAALIgNB/wFxIANBAEgbIgxrRwRAIAAoAgAiAygCDCIEIAMoAhBGIQogC0UiCyAMRXIEQCAKBH8gAyADKAIAKAIkQf8AcUEIahEAAAUgBCwAABBCC0H/AXEhAyALBEAgDygCACAPIA8sAAtBAEgbLQAAIANHDQYgACgCACIDKAIMIgQgAygCEEYEQCADIAMoAgAoAihB/wBxQQhqEQAAGgUgAyAEQQFqNgIMIAQsAAAQQhoLIAZBAToAACAPIAIgDygCBCAPLAALIgJB/wFxIAJBAEgbQQFLGyECDAYLIA4oAgAgDiAOLAALQQBIGy0AACADRwRAIAZBAToAAAwGCyAAKAIAIgMoAgwiBCADKAIQRgRAIAMgAygCACgCKEH/AHFBCGoRAAAaBSADIARBAWo2AgwgBCwAABBCGgsgDiACIA4oAgQgDiwACyICQf8BcSACQQBIG0EBSxshAgwFCyAKBH8gAyADKAIAKAIkQf8AcUEIahEAAAUgBCwAABBCCyELIAAoAgAiAygCDCIEIAMoAhBGIQogDigCACAOIA4sAAtBAEgbLQAAIAtB/wFxRgRAIAoEQCADIAMoAgAoAihB/wBxQQhqEQAAGgUgAyAEQQFqNgIMIAQsAAAQQhoLIA4gAiAOKAIEIA4sAAsiAkH/AXEgAkEASBtBAUsbIQIMBQsgCgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAQsAAAQQgtB/wFxIA8oAgAgDyAPLAALQQBIGy0AAEcNByAAKAIAIgMoAgwiBCADKAIQRgRAIAMgAygCACgCKEH/AHFBCGoRAAAaBSADIARBAWo2AgwgBCwAABBCGgsgBkEBOgAAIA8gAiAPKAIEIA8sAAsiAkH/AXEgAkEASBtBAUsbIQILDAMLAkACQCAUQQJJIAJyBEAgDSgCACIKIA0gDSwACyIDQQBIIgsbIhghBCAUDQEFIBRBAkYgGiwAA0EAR3EgInJFBEBBACECDAYLIA0oAgAiCiANIA0sAAsiA0EASCILGyIYIQQMAQsMAQsgGiAUQX9qai0AAEECSARAIA0oAgQgA0H/AXEgCxsgGGohEiAEIQsDQAJAIAsgEkYNACALLAAAIh1Bf0wNACAHKAIIIB1BAXRqLgEAQYDAAHFFDQAgC0EBaiELDAELCyARLAALIhlBAEghEiALIARrIh0gESgCBCIfIBlB/wFxIhkgEhtNBEAgHyARKAIAaiIfIBEgGWoiGSASGyEjIB8gHWsgGSAdayASGyESA0AgEiAjRgRAIAshBAwECyASLAAAIBgsAABGBEAgGEEBaiEYIBJBAWohEgwBCwsLCwsDQAJAIAQgCiANIANBGHRBGHVBAEgiChsgDSgCBCADQf8BcSAKG2pGDQAgACgCACIDBH8gAygCDCIKIAMoAhBGBH8gAyADKAIAKAIkQf8AcUEIahEAAAUgCiwAABBCC0F/EEEEfyAAQQA2AgBBAQUgACgCAEULBUEBCyEDAkACQCAMRQ0AIAwoAgwiCiAMKAIQRgR/IAwgDCgCACgCJEH/AHFBCGoRAAAFIAosAAAQQgtBfxBBBEAgAUEANgIADAEFIANFDQMLDAELIAMNAUEAIQwLIAAoAgAiAygCDCIKIAMoAhBGBH8gAyADKAIAKAIkQf8AcUEIahEAAAUgCiwAABBCC0H/AXEgBC0AAEcNACAAKAIAIgMoAgwiCiADKAIQRgRAIAMgAygCACgCKEH/AHFBCGoRAAAaBSADIApBAWo2AgwgCiwAABBCGgsgBEEBaiEEIA0sAAshAyANKAIAIQoMAQsLICIEQCAEIA0oAgAgDSANLAALIgNBAEgiChsgDSgCBCADQf8BcSAKG2pHDQcLDAILQQAhBCAMIQMDQAJAIAAoAgAiCgR/IAooAgwiCyAKKAIQRgR/IAogCigCACgCJEH/AHFBCGoRAAAFIAssAAAQQgtBfxBBBH8gAEEANgIAQQEFIAAoAgBFCwVBAQshCgJAAkAgDEUNACAMKAIMIgsgDCgCEEYEfyAMIAwoAgAoAiRB/wBxQQhqEQAABSALLAAAEEILQX8QQQRAIAFBADYCAEEAIQMMAQUgCkUNAwsMAQsgCg0BQQAhDAsCfwJAIAAoAgAiCigCDCILIAooAhBGBH8gCiAKKAIAKAIkQf8AcUEIahEAAAUgCywAABBCCyIKQf8BcSILQRh0QRh1QX9MDQAgBygCCCAKQRh0QRh1QQF0ai4BAEGAEHFFDQAgCSgCACIKIBsoAgBGBEAgCCAJIBsQpwQgCSgCACEKCyAJIApBAWo2AgAgCiALOgAAIARBAWoMAQsgFigCBCAWLAALIgpB/wFxIApBAEgbQQBHIARBAEdxICEtAAAgC0ZxRQ0BIBMoAgAiCiAcKAIARgRAIBUgEyAcEM0BIBMoAgAhCgsgEyAKQQRqNgIAIAogBDYCAEEACyEEIAAoAgAiCigCDCILIAooAhBGBEAgCiAKKAIAKAIoQf8AcUEIahEAABoFIAogC0EBajYCDCALLAAAEEIaCwwBCwsgEygCACIKIBUoAgBHIARBAEdxBEAgCiAcKAIARgRAIBUgEyAcEM0BIBMoAgAhCgsgEyAKQQRqNgIAIAogBDYCAAsgFygCAEEASgRAAkAgACgCACIEBH8gBCgCDCIKIAQoAhBGBH8gBCAEKAIAKAIkQf8AcUEIahEAAAUgCiwAABBCC0F/EEEEfyAAQQA2AgBBAQUgACgCAEULBUEBCyEEAkACQCADRQ0AIAMoAgwiCiADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAosAAAQQgtBfxBBBEAgAUEANgIADAEFIARFDQsLDAELIAQNCUEAIQMLIAAoAgAiBCgCDCIKIAQoAhBGBH8gBCAEKAIAKAIkQf8AcUEIahEAAAUgCiwAABBCC0H/AXEgIC0AAEcNCCAAKAIAIgQoAgwiCiAEKAIQRgRAIAQgBCgCACgCKEH/AHFBCGoRAAAaBSAEIApBAWo2AgwgCiwAABBCGgsDQCAXKAIAQQBMDQEgACgCACIEBH8gBCgCDCIKIAQoAhBGBH8gBCAEKAIAKAIkQf8AcUEIahEAAAUgCiwAABBCC0F/EEEEfyAAQQA2AgBBAQUgACgCAEULBUEBCyEEAkACQCADRQ0AIAMoAgwiCiADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAosAAAQQgtBfxBBBEAgAUEANgIADAEFIARFDQ0LDAELIAQNC0EAIQMLIAAoAgAiBCgCDCIKIAQoAhBGBH8gBCAEKAIAKAIkQf8AcUEIahEAAAUgCiwAABBCCyIEQf8BcUEYdEEYdUF/TA0KIAcoAgggBEEYdEEYdUEBdGouAQBBgBBxRQ0KIAkoAgAgGygCAEYEQCAIIAkgGxCnBAsgACgCACIEKAIMIgogBCgCEEYEfyAEIAQoAgAoAiRB/wBxQQhqEQAABSAKLAAAEEILIQQgCSAJKAIAIgpBAWo2AgAgCiAEOgAAIBcgFygCAEF/ajYCACAAKAIAIgQoAgwiCiAEKAIQRgRAIAQgBCgCACgCKEH/AHFBCGoRAAAaBSAEIApBAWo2AgwgCiwAABBCGgsMAAALAAsLIAkoAgAgCCgCAEYNCAwBCwNAIAAoAgAiAwR/IAMoAgwiBCADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAQsAAAQQgtBfxBBBH8gAEEANgIAQQEFIAAoAgBFCwVBAQshAwJAAkAgDEUNACAMKAIMIgQgDCgCEEYEfyAMIAwoAgAoAiRB/wBxQQhqEQAABSAELAAAEEILQX8QQQRAIAFBADYCAAwBBSADRQ0ECwwBCyADDQJBACEMCyAAKAIAIgMoAgwiBCADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAQsAAAQQgsiA0H/AXFBGHRBGHVBf0wNASAHKAIIIANBGHRBGHVBAXRqLgEAQYDAAHFFDQEgESAAKAIAIgMoAgwiBCADKAIQRgR/IAMgAygCACgCKEH/AHFBCGoRAAAFIAMgBEEBajYCDCAELAAAEEILQf8BcRDMAQwAAAsACyAUQQFqIRQMAQsLIAUgBSgCAEEEcjYCAEEADAYLIAUgBSgCAEEEcjYCAEEADAULIAUgBSgCAEEEcjYCAEEADAQLIAUgBSgCAEEEcjYCAEEADAMLIAUgBSgCAEEEcjYCAEEADAILIAUgBSgCAEEEcjYCAEEADAELIAIEQAJAIAIhBkEBIQcDQAJAIAcgAiwACyIDQQBIBH8gBigCBAUgA0H/AXELTw0CIAAoAgAiAwR/IAMoAgwiBCADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAQsAAAQQgtBfxBBBH8gAEEANgIAQQEFIAAoAgBFCwVBAQshBAJAAkAgASgCACIDRQ0AIAMoAgwiCCADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAgsAAAQQgtBfxBBBEAgAUEANgIADAEFIARFDQMLDAELIAQNAQsgACgCACIDKAIMIgQgAygCEEYEfyADIAMoAgAoAiRB/wBxQQhqEQAABSAELAAAEEILQf8BcSACLAALQQBIBH8gAigCAAUgAgsgB2otAABHDQAgACgCACIDKAIMIgQgAygCEEYEQCADIAMoAgAoAihB/wBxQQhqEQAAGgUgAyAEQQFqNgIMIAQsAAAQQhoLIAdBAWohBwwBCwsgBSAFKAIAQQRyNgIAQQAMAgsLIBUoAgAiACATKAIAIgFGBH9BAQUgHkEANgIAIBYgACABIB4QeCAeKAIABH8gBSAFKAIAQQRyNgIAQQAFQQELCwshJCAREEcgDxBHIA4QRyANEEcgFhBHIBUoAgAhACAVQQA2AgAgAARAIAAgFSgCBEH/AXFBrANqEQEACyAQJAYgJAsZACAAQgA3AgAgAEEANgIIIABBAUEtEJMECxkAIABCADcCACAAQQA2AgggAEEBQS0QlgQLFQAgACgCABBcRwRAIAAoAgAQhwMLC2MBAX8jBiEGIwZBEGokBiAGQSU6AAAgBiAEOgABIAYgBToAAiAGQQA6AAMgBUH/AXEEQCAGIAU6AAEgBiAEOgACCyACIAEgAigCACABayAGIAMgACgCABAfIAFqNgIAIAYkBgsOACAAQQhqEKsEIAAQOAsKACAAQQhqEKsEC2wBAX8jBiEFIwZBEGokBiAFIAIoAgA2AgAgBUEEaiICIAUoAgA2AgAgASACIAMgBEEEEJkBIQEgAygCAEEEcUUEQCAAIAFB0A9qIAFB7A5qIAEgAUHkAEgbIAFBxQBIG0GUcWo2AgALIAUkBgt7AQJ/IwYhBiMGQRBqJAYgAEEIaiIAKAIAKAIEIQcgACAHQf8AcUEIahEAACEAIAYgAygCADYCACAGQQRqIgMgBigCADYCACACIAMgACAAQaACaiAFIARBABCVAiAAayIAQaACSARAIAEgAEEMEDlBDBBPNgIACyAGJAYLewECfyMGIQYjBkEQaiQGIABBCGoiACgCACgCACEHIAAgB0H/AHFBCGoRAAAhACAGIAMoAgA2AgAgBkEEaiIDIAYoAgA2AgAgAiADIAAgAEGoAWogBSAEQQAQlQIgAGsiAEGoAUgEQCABIABBDBA5QQcQTzYCAAsgBiQGC7gCAQZ/IwYhAyMGQYACaiQGIANBwAFqIgIgARDECiADQeAAaiIEIAIQuwpBACEBA0AgAUEDRwRAIAFBBXQgAGohBSABQQV0IABqIQYgAUEFdCAAaiEHQQAhAgNAIAJBBEcEQCABQQV0IANqIAJBA3RqIAUrAwAgAkEDdCAEaisDAKIgBisDCCAEQSBqIAJBA3RqKwMAoqAgBysDECAEQUBrIAJBA3RqKwMAoqA5AwAgAkEBaiECDAELCyABQQV0IANqIgIgAUEFdCAAaisDGCACKwMYoDkDGCABQQFqIQEMAQsLQQAhAQNAIAFBA0cEQEEAIQIDQCACQQRHBEAgAUEFdCAAaiACQQN0aiABQQV0IANqIAJBA3RqKwMAOQMAIAJBAWohAgwBCwsgAUEBaiEBDAELCyADJAYL0AEBBH8jBiEEIwZBMGokBiAEQRhqIgVBBjYCBCAFQQE2AgggBSAANgIAIARBDGoiBiADNgIEIAZBATYCCCAGIAE2AgAgBCADNgIEIARBBjYCCCAEIAI2AgAgBBCgAyIABH8CfyAAIAQQ2QEiAUUEQCAAEElBfwwBCyAAIAYQ2QEiAkUEQCAAEEkgARBJQX8MAQsgARDWAUEASAR/IAAQSSABEEkgAhBJQX8FIAUgASACEK0CGiAAEEkgARBJIAIQSUEACwsFQX8LIQcgBCQGIAcLbAEBfyMGIQUjBkEQaiQGIAUgAigCADYCACAFQQRqIgIgBSgCADYCACABIAIgAyAEQQQQmgEhASADKAIAQQRxRQRAIAAgAUHQD2ogAUHsDmogASABQeQASBsgAUHFAEgbQZRxajYCAAsgBSQGC3sBAn8jBiEGIwZBEGokBiAAQQhqIgAoAgAoAgQhByAAIAdB/wBxQQhqEQAAIQAgBiADKAIANgIAIAZBBGoiAyAGKAIANgIAIAIgAyAAIABBoAJqIAUgBEEAEJYCIABrIgBBoAJIBEAgASAAQQwQOUEMEE82AgALIAYkBgt7AQJ/IwYhBiMGQRBqJAYgAEEIaiIAKAIAKAIAIQcgACAHQf8AcUEIahEAACEAIAYgAygCADYCACAGQQRqIgMgBigCADYCACACIAMgACAAQagBaiAFIARBABCWAiAAayIAQagBSARAIAEgAEEMEDlBBxBPNgIACyAGJAYLBABBAguXCAELfyMGIQsjBkEQaiQGIAZBoM4DEDohCiAGQajOAxA6Ig0oAgAoAhQhBiALIA0gBkE/cUGyBWoRAwAgBSADNgIAAkACQCACIgwCfwJAAkAgACwAACICQStrDgMAAQABCyAKIAIgCigCACgCLEE/cUGKAWoRAgAhAiAFIAUoAgAiBkEEajYCACAGIAI2AgAgAEEBagwBCyAACyIGa0EBTA0AIAYsAABBMEcNACAGLAABQdgAayICQQAgAkEgRxsNACAKQTAgCigCACgCLEE/cUGKAWoRAgAhAiAFIAUoAgAiB0EEajYCACAHIAI2AgAgCiAGLAABIAooAgAoAixBP3FBigFqEQIAIQIgBSAFKAIAIgdBBGo2AgAgByACNgIAIAZBAmoiBiECA0AgAiAMSQRAIAIsAAAQXBCDAwRAIAJBAWohAgwCCwsLDAELIAYhAgNAIAIgDE8NAQJ/IAIsAAAhERBcGiARCxCKAQRAIAJBAWohAgwBCwsLIAsoAgQgCywACyIHQf8BcSAHQQBIGwRAIAIgBkcEQAJAIAIhByAGIQgDQCAIIAdBf2oiB08NASAILAAAIQkgCCAHLAAAOgAAIAcgCToAACAIQQFqIQgMAAALAAsLIA0gDSgCACgCEEH/AHFBCGoRAAAhDyAGIQlBACEHQQAhCANAIAkgAkkEQCAHIAsoAgAgCyALLAALQQBIG2osAAAiDkEASiAIIA5GcQRAIAUgBSgCACIIQQRqNgIAIAggDzYCACAHIAcgCygCBCALLAALIghB/wFxIAhBAEgbQX9qSWohB0EAIQgLIAogCSwAACAKKAIAKAIsQT9xQYoBahECACEOIAUgBSgCACIQQQRqNgIAIBAgDjYCACAJQQFqIQkgCEEBaiEIDAELCyAGIABrQQJ0IANqIgkgBSgCACIIRgR/IAohByAJBSAIIQYDfyAJIAZBfGoiBkkEfyAJKAIAIQcgCSAGKAIANgIAIAYgBzYCACAJQQRqIQkMAQUgCiEHIAgLCwshBgUgCiAGIAIgBSgCACAKKAIAKAIwQQ9xQYoCahEJABogBSAFKAIAIAIgBmtBAnRqIgY2AgAgCiEHCwJAAkADQCACIAxJBEAgAiwAACIGQS5GDQIgCiAGIAcoAgAoAixBP3FBigFqEQIAIQkgBSAFKAIAIghBBGoiBjYCACAIIAk2AgAgAkEBaiECDAELCwwBCyANIA0oAgAoAgxB/wBxQQhqEQAAIQcgBSAFKAIAIglBBGoiBjYCACAJIAc2AgAgAkEBaiECCyAKIAIgDCAGIAooAgAoAjBBD3FBigJqEQkAGiAFIAUoAgAgDCACa0ECdGoiAjYCACAEIAIgASAAa0ECdCADaiABIAxGGzYCACALEEcgCyQGC/UBAgV/AXwjBiEEIwZB4AFqJAYgBEHYAWohBSAEQTBqIgYgBEHAAWoiByACIAMQ8wogBCABIAcQ6ApBAEgEf0EAQQNB4awBIAUQPUF/BUEAIQEDfyABQQJGBH9BAAVBACECA0AgAkEGRwRAIAFBMGwgAGogAkEDdGoiBUQAAAAAAAAAADkDAEEAIQNEAAAAAAAAAAAhCQNAIANBA0cEQCAFIAkgAUEYbCAEaiADQQN0aisDACADQTBsIAZqIAJBA3RqKwMAoqAiCTkDACADQQFqIQMMAQsLIAJBAWohAgwBCwsgAUEBaiEBDAELCwshCCAEJAYgCAv6BwELfyMGIQojBkEQaiQGIAZBgM4DEDohCSAGQZDOAxA6Ig0oAgAoAhQhBiAKIA0gBkE/cUGyBWoRAwAgBSADNgIAAkACQCACIgsCfwJAAkAgACwAACICQStrDgMAAQABCyAJIAIgCSgCACgCHEE/cUGKAWoRAgAhAiAFIAUoAgAiBkEBajYCACAGIAI6AAAgAEEBagwBCyAACyIGa0EBTA0AIAYsAABBMEcNACAGLAABQdgAayICQQAgAkEgRxsNACAJQTAgCSgCACgCHEE/cUGKAWoRAgAhAiAFIAUoAgAiB0EBajYCACAHIAI6AAAgCSAGLAABIAkoAgAoAhxBP3FBigFqEQIAIQIgBSAFKAIAIgdBAWo2AgAgByACOgAAIAZBAmoiBiECA0AgAiALSQRAIAIsAAAQXBCDAwRAIAJBAWohAgwCCwsLDAELIAYhAgNAIAIgC08NAQJ/IAIsAAAhERBcGiARCxCKAQRAIAJBAWohAgwBCwsLIAooAgQgCiwACyIHQf8BcSAHQQBIGwR/IAIgBkcEQAJAIAIhByAGIQgDQCAIIAdBf2oiB08NASAILAAAIQwgCCAHLAAAOgAAIAcgDDoAACAIQQFqIQgMAAALAAsLIA0gDSgCACgCEEH/AHFBCGoRAAAhDyAGIQxBACEIQQAhBwNAIAwgAkkEQCAHIAooAgAgCiAKLAALQQBIG2osAAAiDkEASiAIIA5GcQRAIAUgBSgCACIIQQFqNgIAIAggDzoAACAHIAcgCigCBCAKLAALIghB/wFxIAhBAEgbQX9qSWohB0EAIQgLIAkgDCwAACAJKAIAKAIcQT9xQYoBahECACEOIAUgBSgCACIQQQFqNgIAIBAgDjoAACAMQQFqIQwgCEEBaiEIDAELCyADIAYgAGtqIgcgBSgCACIGRgR/IAkFA38gByAGQX9qIgZJBH8gBywAACEIIAcgBiwAADoAACAGIAg6AAAgB0EBaiEHDAEFIAkLCwsFIAkgBiACIAUoAgAgCSgCACgCIEEPcUGKAmoRCQAaIAUgBSgCACACIAZrajYCACAJCyEGAkACQANAIAIgC0kEQCACLAAAIgdBLkYNAiAJIAcgBigCACgCHEE/cUGKAWoRAgAhByAFIAUoAgAiCEEBajYCACAIIAc6AAAgAkEBaiECDAELCwwBCyANIA0oAgAoAgxB/wBxQQhqEQAAIQYgBSAFKAIAIgdBAWo2AgAgByAGOgAAIAJBAWohAgsgCSACIAsgBSgCACAJKAIAKAIgQQ9xQYoCahEJABogBSAFKAIAIAsgAmtqIgI2AgAgBCACIAMgASAAa2ogASALRhs2AgAgChBHIAokBgueAQEFfCABKwNYIAIrAwAiAyABQUBrKwMAoiACKwMIIgQgASsDSKKgIAIrAxAiBSABKwNQoqCgIgZEAAAAAAAAAABhBH9BfwUgASsDOCADIAErAyCiIAQgASsDKKKgIAUgASsDMKKgoCEHIAAgASsDGCADIAErAwCiIAQgASsDCKKgIAUgASsDEKKgoCAGozkDACAAIAcgBqM5AwhBAAsLVgECfyMGIQYjBkEQaiQGIAYgASgCADYCBCAGIAIoAgA2AgAgBkEIaiIBIAYoAgQ2AgAgBkEMaiICIAYoAgA2AgAgASACIAMgBCAFEIkLIQcgBiQGIAcL0wECA38BfiMGIQQjBkEQaiQGIAAgAUYEfyACQQQ2AgBBAAVBpMUDKAIAIQVBpMUDQQA2AgAgACAEIAMQXBD9AiEHQaTFAygCACIARQRAQaTFAyAFNgIACyABIAQoAgBGBH8CfyAAQcQARgRAIAJBBDYCAEH/////ByAHQgBVDQEaBQJAIAdCgICAgHhTBEAgAkEENgIADAELIAenIAdC/////wdXDQIaIAJBBDYCAEH/////BwwCCwtBgICAgHgLBSACQQQ2AgBBAAsLIQYgBCQGIAYLogECAn8BfiMGIQQjBkEQaiQGIAAgAUYEQCACQQQ2AgAFQaTFAygCACEFQaTFA0EANgIAIAAgBCADEFwQ/QIhBkGkxQMoAgAiAEUEQEGkxQMgBTYCAAsgASAEKAIARgR+IABBxABGBH4gAkEENgIAQv///////////wBCgICAgICAgICAfyAGQgBVGwUgBgsFIAJBBDYCAEIACyEGCyAEJAYgBgvWAQIEfwF+IwYhBCMGQRBqJAYgACABRgR/IAJBBDYCAEEABQJ/IAAsAABBLUYiBQRAIAEgAEEBaiIARgRAIAJBBDYCAEEADAILC0GkxQMoAgAhBkGkxQNBADYCACAAIAQgAxBcEKECIQhBpMUDKAIAIgBFBEBBpMUDIAY2AgALIAEgBCgCAEYEfwJ/IABBxABGIAhC//8DVnIEQCACQQQ2AgBBfwwBCyAIp0H//wNxIQBBACAIp2tB//8DcSAAIAUbCwUgAkEENgIAQQALCwshByAEJAYgBwvHAQIEfwF+IwYhBCMGQRBqJAYgACABRgR/IAJBBDYCAEEABQJ/IAAsAABBLUYiBQRAIAEgAEEBaiIARgRAIAJBBDYCAEEADAILC0GkxQMoAgAhBkGkxQNBADYCACAAIAQgAxBcEKECIQhBpMUDKAIAIgBFBEBBpMUDIAY2AgALIAEgBCgCAEYEfyAAQcQARiAIQv////8PVnIEfyACQQQ2AgBBfwVBACAIpyIAayAAIAUbCwUgAkEENgIAQQALCwshByAEJAYgBwu6AQIDfwJ+IwYhBCMGQRBqJAYgACABRgR+IAJBBDYCAEIABQJ+IAAsAABBLUYiBQRAIAEgAEEBaiIARgRAIAJBBDYCAEIADAILC0GkxQMoAgAhBkGkxQNBADYCACAAIAQgAxBcEKECIQdBpMUDKAIAIgBFBEBBpMUDIAY2AgALIAEgBCgCAEYEfiAAQcQARgR+IAJBBDYCAEJ/BUIAIAd9IAcgBRsLBSACQQQ2AgBCAAsLCyEIIAQkBiAIC4oBAgJ/AX0jBiEDIwZBEGokBiAAIAFGBEAgAkEENgIABUGkxQMoAgAhBEGkxQNBADYCABBcGiAAIANBABCgArYhBUGkxQMoAgAiAEUEQEGkxQMgBDYCAAsCQAJAIAEgAygCAEYEQCAAQcQARg0BBUMAAAAAIQUMAQsMAQsgAkEENgIACwsgAyQGIAULjQECAn8BfCMGIQMjBkEQaiQGIAAgAUYEQCACQQQ2AgAFQaTFAygCACEEQaTFA0EANgIAEFwaIAAgA0EBEKACIQVBpMUDKAIAIgBFBEBBpMUDIAQ2AgALAkACQCABIAMoAgBGBEAgAEHEAEYNAQVEAAAAAAAAAAAhBQwBCwwBCyACQQQ2AgALCyADJAYgBQuNAQICfwF8IwYhAyMGQRBqJAYgACABRgRAIAJBBDYCAAVBpMUDKAIAIQRBpMUDQQA2AgAQXBogACADQQIQoAIhBUGkxQMoAgAiAEUEQEGkxQMgBDYCAAsCQAJAIAEgAygCAEYEQCAAQcQARg0BBUQAAAAAAAAAACEFDAELDAELIAJBBDYCAAsLIAMkBiAFCzkBAn8jBiEDIwZBEGokBiADIAI2AgAgARBiIQEgAEGDkwMgAxCVAyEEIAEEQCABEGIaCyADJAYgBAtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQnAshByAGJAYgBwulAQEEfyMGIQUjBkEQaiQGIAIgAWtBAnUiBEHv////A0sEQBAACyAEQQJJBEAgACAEOgALIAAhAwUgBEEEakF8cSIGQf////8DSwRAEAAFIAAgBkECdBBRIgM2AgAgACAGQYCAgIB4cjYCCCAAIAQ2AgQLCwNAIAEgAkcEQCADIAEQbiABQQRqIQEgA0EEaiEDDAELCyAFQQA2AgAgAyAFEG4gBSQGC6sDAgp/AX4jBiEFIwZBIGokBiAFQRBqIQMgBUEIaiEEIAVBBGohCSAALAA0BEAgACgCMCELIAEEQCAAQX82AjAgAEEAOgA0CyALIQAFIAAoAiwiAkEBIAJBAUobIQICQAJAA0AgBiACTw0BIAAoAiAQ8wEiB0F/RwRAIAMgBmogBzoAACAGQQFqIQYMAQsLQX8hAAwBCwJAAkAgACwANQRAIAQgAywAADoAAAwBBQJAIARBAWohBgJAAkACQANAAkAgACgCKCIHKQIAIQwgACgCJCIIKAIAKAIQIQoCQCAIIAcgAyACIANqIgcgCSAEIAYgBSAKQQ9xQY4DahEOAEEBaw4DAAQDAQsgACgCKCAMNwIAIAJBCEYNAyAAKAIgEPMBIghBf0YNAyAHIAg6AAAgAkEBaiECDAELCwwCCyAEIAMsAAA6AAAMAQtBfyEADAELDAILCwwBCyABBEAgACAELAAAEEI2AjAFAkADQCACQQBMDQEgAyACQX9qIgJqLAAAEEIgACgCIBDvAUF/Rw0AC0F/IQAMAgsLIAQsAAAQQiEACwsLIAUkBiAAC6UDAgp/AX4jBiEFIwZBIGokBiAFQRBqIQMgBUEIaiEEIAVBBGohCSAALAA0BEAgACgCMCELIAEEQCAAQX82AjAgAEEAOgA0CyALIQAFIAAoAiwiAkEBIAJBAUobIQICQAJAA0AgBiACTw0BIAAoAiAQ8wEiB0F/RwRAIAMgBmogBzoAACAGQQFqIQYMAQsLQX8hAAwBCwJAAkAgACwANQRAIAQgAywAADYCAAwBBQJAIARBBGohBgJAAkACQANAAkAgACgCKCIHKQIAIQwgACgCJCIIKAIAKAIQIQoCQCAIIAcgAyACIANqIgcgCSAEIAYgBSAKQQ9xQY4DahEOAEEBaw4DAAQDAQsgACgCKCAMNwIAIAJBCEYNAyAAKAIgEPMBIghBf0YNAyAHIAg6AAAgAkEBaiECDAELCwwCCyAEIAMsAAA2AgAMAQtBfyEADAELDAILCwwBCyABBEAgACAEKAIANgIwBQJAA0AgAkEATA0BIAMgAkF/aiICaiwAACAAKAIgEO8BQX9HDQALQX8hAAwCCwsgBCgCACEACwsLIAUkBiAAC5oBAQV/IwYhASMGQRBqJAYgAUEIaiICQQhqIQUCQAJAA0AgACgCJCIDKAIAKAIUIQQgAyAAKAIoIAIgBSABIARBH3FBogJqEQgAIQMCQCABKAIAIAJrIgQgAkEBIAQgACgCIBCTAUcNAAJAIANBAWsOAgABAwsMAQsLQX8hAAwBCyAAKAIgEKkCQQBHQR90QR91IQALIAEkBiAACxMAIAAgACgCAEF0aigCAGoQ6gILEwAgACAAKAIAQXRqKAIAahCZAgsTACAAIAAoAgBBdGooAgBqEOsCCxMAIAAgACgCAEF0aigCAGoQmgILKwEBfwNAIAJBCEcEQCABIAJqIABBByACa2osAAA6AAAgAkEBaiECDAELCwsSACAAQdyMATYCACAAQQRqEDwLBABBfwsQACAAQgA3AwAgAEJ/NwMICxAAIABCADcDACAAQn83AwgLBAAgAAsrAQF/A0AgAkEERwRAIAEgAmogAEEDIAJraiwAADoAACACQQFqIQIMAQsLCxIAIABBnIwBNgIAIABBBGoQPAtTAQN/IAIoAgAhBCABIABrQQJ1IQEDQCABBEAgAUEBdiICQQJ0IABqIgUoAgAgBEkhAyAFQQRqIAAgAxshACABQX9qIAJrIAIgAxshAQwBCwsgAAvOAQEDfyMGIQIjBkHAAWokBiAAIAIQ1QQgAEEEaiACQQRqENUEA0AgAUEDRwRAQQAhAwNAIANBBEcEQCAAQQhqIAFBBXRqIANBA3RqIAJBCGogAUEFdGogA0EDdGoQzwQgA0EBaiEDDAELCyABQQFqIQEMAQsLQQAhAQNAIAEgACgCsAEiA0EDdEGYFWooAgBIBEAgAEHoAGogAUEDdGogAkHoAGogAUEDdGoQzwQgAUEBaiEBDAELCyACIAM2ArABIAAgAkG4ARBMGiACJAYLJwEBfyMGIQEjBkEQaiQGIAEgADYCAEHY+QBBBSABKAIAEAggASQGCycBAX8jBiEBIwZBEGokBiABIAA2AgBB4PkAQQQgASgCABAIIAEkBgsnAQF/IwYhASMGQRBqJAYgASAANgIAQej5AEEDIAEoAgAQCCABJAYLJwEBfyMGIQEjBkEQaiQGIAEgADYCAEHw+QBBAiABKAIAEAggASQGCycBAX8jBiEBIwZBEGokBiABIAA2AgBB+PkAQQEgASgCABAIIAEkBgsnAQF/IwYhASMGQRBqJAYgASAANgIAQYD6AEEAIAEoAgAQCCABJAYLmAsBFXwCfwJAAkACQAJAAkACQCAFQQFrDgQDAgEABAsgACsDACEJIAArAwghCiAAQUBrKwMAIQ0gACsDECIORAAAAAAAAABAoiEPIAArAxgiEEQAAAAAAAAYQKIhEyAQRAAAAAAAAABAoiEUIA5EAAAAAAAAGECiIRUgASAAKwMwIhahIAArAyAiF6MiCyEBIAIgACsDOCIYoSAAKwMoIhmjIgwhAiALIAuiIQYgDCAMoiEHQQEhAANAAkAgBkQAAAAAAAAAAGIgB0QAAAAAAAAAAGJyRQRARAAAAAAAAAAAIQFEAAAAAAAAAAAhAgwBCyAJIAcgBqAiCKJEAAAAAAAA8D+gIAggCiAIoqKgIREgByAGRAAAAAAAAAhAoiIaoiESIAIgDiAHRAAAAAAAAABAoiAIoKIgAiARoqAgAiAUIAEgECAIIAZEAAAAAAAAAECioKIgAiAPIAGioiABIBGioKAgC6EgEyABoiAPIAKiIAkgByAaoKJEAAAAAAAA8D+gIAogByAHoiAGIAZEAAAAAAAAFECioiASoKCioKCgo6EiAaIiCKKgIAyhIBUgAqIgCSAGIAdEAAAAAAAACECioKJEAAAAAAAA8D+gIAogByAHRAAAAAAAABRAoqIgBiAGoiASoKCioKAgCKCjoSECIABBBEcEQCABIAGiIQYgAiACoiEHIABBAWohAAwCCwsLIAMgFiAXIAGiIA2joDkDACAYIBkgAqIgDaOgIQEMBAsgACsDIEQAAAAAhNeXQaMiCEQAAAAAAAAIQKIhCSAAKwMoRAAAAACE15dBo0QAAAAAAGr4QKMiCkQAAAAAAAAUQKIhC0EBIQUgASAAKwMAIgyhIAArAxijIgEgAaIgAiAAKwMIoSICIAKioCIHnyINIQYDQAJAIAZEAAAAAAAAAABhBEBEAAAAAAAAAAAhAkQAAAAAAAAAACEBDAELIAEgBiAGRAAAAAAAAPA/IAggB6KhIAcgCiAHoqKhoiANoUQAAAAAAADwPyAJIAeioSAHIAsgB6KioaOhIgeiIAajIQEgAiAHoiAGoyECIAVBA0cEQCABIAGiIAIgAqKgIgYhByAFQQFqIQUgBp8hBgwCCwsLIAMgDCABIAArAxCjoDkDACACIAArAxCjIAArAwigIQEMAwsgACsDGEQAAAAAhNeXQaMiCEQAAAAAAAAIQKIhCSAAKwMgRAAAAACE15dBo0QAAAAAAGr4QKMiCkQAAAAAAAAUQKIhC0EBIQUgASAAKwMAIgyhIgcgB6IgAiAAKwMIoSICIAKioCIBnyINIQYDQAJAIAZEAAAAAAAAAABhBEBEAAAAAAAAAAAhAkQAAAAAAAAAACEBDAELIAcgBiAGRAAAAAAAAPA/IAggAaKhIAEgCiABoqKhoiANoUQAAAAAAADwPyAJIAGioSABIAsgAaKioaOhIgeiIAajIQEgAiAHoiAGoyECIAVBA0cEQCAFQQFqIQUgASIHIAGiIAIgAqKgIgGfIQYMAgsLCyADIAwgASAAKwMQo6A5AwAgAiAAKwMQoyAAKwMIoCEBDAILIAArAxhEAAAAAITXl0GjIghEAAAAAAAACECiIQlBASEFIAEgACsDACIKoSIHIAeiIAIgACsDCKEiAiACoqAiAZ8iCyEGA0ACQCAGRAAAAAAAAAAAYQRARAAAAAAAAAAAIQJEAAAAAAAAAAAhAQwBCyAHIAYgBkQAAAAAAADwPyAIIAGioaIgC6FEAAAAAAAA8D8gCSABoqGjoSIHoiAGoyEBIAIgB6IgBqMhAiAFQQNHBEAgBUEBaiEFIAEiByABoiACIAKioCIBnyEGDAILCwsgAyAKIAEgACsDEKOgOQMAIAIgACsDEKMgACsDCKAhAQwBC0F/DAELIAQgATkDAEEACxoL5QEAQbj4AEH1ggMQLUHA+ABB+oIDQQFBAUEAEC8Q5AsQ4wsQ4gsQ4QsQ4AsQ3wsQ3gsQ3QsQ3AsQ2wsQ2gtByPIAQeSDAxAVQeD6AEHwgwMQFUHI+gBBBEGRhAMQEkGw+gBBAkGehAMQEkGY+gBBBEGthAMQEkGQ+gBBvIQDEC4Q2QtB6oQDEN4EQY+FAxDdBEG2hQMQ3ARB1YUDENsEQf2FAxDaBEGahgMQ2QQQ1wsQ1gtBhYcDEN4EQaWHAxDdBEHGhwMQ3ARB54cDENsEQYmIAxDaBEGqiAMQ2QQQ1QsQ1AsQ0wsLWgEDfyAAKAIEIQUgAgRAIAVBCHUhBCAFQQFxBEAgBCACKAIAaigCACEECwsgACgCACIAKAIAKAIcIQYgACABIAIgBGogA0ECIAVBAnEbIAZBH3FB+gVqEQcACwsAIAAQ4wQgABA4CxMAIABBoIsBNgIAIABBBGoQ7gsLxwIBBH8jBiEDIwZBQGskBiAAIAAoAgAiBEF4aigCAGohBSAEQXxqKAIAIQQgAyACNgIAIAMgADYCBCADIAE2AgggA0EANgIMIANCADcCECADQgA3AhggA0IANwIgIANCADcCKCADQQA2AjAgA0EAOwE0IANBADoANiAEIAJBABCBAQR/IANBATYCMCAEIAMgBSAFQQFBACAEKAIAKAIUQQdxQdoGahEMACAFQQAgAygCGEEBRhsFAn8gBCADIAVBAUEAIAQoAgAoAhhBP3FBmgZqEQUAAkACQAJAIAMoAiQOAgACAQsgAygCFEEAIAMoAihBAUYgAygCHEEBRnEgAygCIEEBRnEbDAILQQAMAQsgAygCGEEBRwRAQQAgAygCKEUgAygCHEEBRnEgAygCIEEBRnFFDQEaCyADKAIQCwshBiADJAYgBgunDAIHfwh9IAG8IgVB/////wdxIgJFIAC8IgZBgICA/ANGcgRAQwAAgD8PCyAGQf////8HcSIDQYCAgPwHSyACQYCAgPwHS3IEQCAAIAGSDwsgBkEASCIIBH8gAkH////bBEsEf0ECBSACQf////sDSwR/QQIgAkGWASACQRd2ayIEdiIHQQFxa0EAIAcgBHQgAkYbBUEACwsFQQALIQQCQCAFQf////8HcSIHQYCAgPwHSARAIAdBgICA/ANrDQEgAEMAAIA/IACVIAVBf0obDwUgB0GAgID8B2sNASADQYCAgPwDRgRAQwAAgD8PCyAFQX9KIQIgA0GAgID8A0sEQCABQwAAAAAgAhsPBUMAAAAAIAGMIAIbDwsACwALIAVBgICAgARGBEAgACAAlA8LIAVBgICA+ANGIAZBf0pxBEAgAJEPCyAAiyEJAkACQAJAIANFIANBgICAgARyQYCAgPwHRnIEQEMAAIA/IAmVIAkgBUEASBshACAIRQRAIAAPCyAEIANBgICAhHxqcgRAIACMIAAgBEEBRhsPCwwBCyAIBEACQAJAAkAgBA4CBAABC0MAAIC/IQsMAQtDAACAPyELCwVDAACAPyELCyACQYCAgOgESwRAAkAgA0H4///7A0kEQCALQ8rySXGUQ8rySXGUIAtDYEKiDZRDYEKiDZQgBUEASBsPCyADQYeAgPwDTQRAIAlDAACAv5IiAEMAqrg/lCIKIABDcKXsNpQgACAAlEMAAAA/IABDq6qqPiAAQwAAgD6Uk5STlEM7qrg/lJMiAJK8QYBgcb4iDCEJIAwgCpMhCgwBCyALQ8rySXGUQ8rySXGUIAtDYEKiDZRDYEKiDZQgBUEAShsPCwUgCUMAAIBLlLwgAyADQYCAgARJIgMbIgRBF3VB6X5BgX8gAxtqIQIgBEH///8DcSIEQYCAgPwDciEDIARB8ojzAEkEQEEAIQQFIARB1+f2AkkiBiEEIAIgBkEBc0EBcWohAiADIANBgICAfGogBhshAwsgBEECdEHAigFqKgIAIg4gA74iCiAEQQJ0QbCKAWoqAgAiDJMiDUMAAIA/IAwgCpKVIg+UIgm8QYBgcb4iACAAIACUIhBDAABAQJIgCSAAkiAPIA0gA0EBdUGA4P//fXFBgICAgAJyQYCAgAJqIARBFXRqviINIACUkyAKIA0gDJOTIACUk5QiCpQgCSAJlCIAIACUIAAgACAAIAAgAENC8VM+lENVMmw+kpRDBaOLPpKUQ6uqqj6SlEO3bds+kpRDmpkZP5KUkiIMkrxBgGBxviIAlCINIAogAJQgCSAMIABDAABAwJIgEJOTlJIiCZK8QYBgcb4iAEMAQHY/lCIKIARBAnRBuIoBaioCACAJIAAgDZOTQ084dj+UIABDxiP2OJSTkiIAkpIgArIiDJK8QYBgcb4iDSEJIA0gDJMgDpMgCpMhCgsgACAKkyABlCABIAVBgGBxviIAkyAJlJIhASAJIACUIgAgAZIiCbwiA0GAgICYBEoNAQJAAkAgA0GAgICYBEYEQCABQzyqODOSIAkgAJNeBEAMBQVBgICAmAQhAgwCCwAFAkAgA0H/////B3EiAkGAgNiYBEsNBiABIAkgAJNfRSADQYCA2Jh8R3IEQCACQYCAgPgDSwRADAQFQQAhAgwCCwALDAYLCwwBCyADQYCAgAQgAkEXdkGCf2p2aiICQRd2Qf8BcSEFIAAgAkGAgIB8IAVBgX9qdXG+kyIJIQBBACACQf///wNxQYCAgARyQZYBIAVrdiICayACIANBAEgbIQIgASAJkrwhAwsgC0MAAIA/IANBgIB+cb4iCUMAcjE/lCIKIAlDjL6/NZQgASAJIACTk0MYcjE/lJIiCZIiACAAIAAgAJQiASABIAEgASABQ0y7MTOUQw7q3bWSlENVs4o4kpRDYQs2u5KUQ6uqKj6SlJMiAZQgAUMAAADAkpUgCSAAIAqTkyIBIAAgAZSSkyAAk5MiALwgAkEXdGoiA0GAgIAESAR9IAAgAhD1BAUgA74LlA8LIAAgAJMiACAAlQ8LIAtDyvJJcZRDyvJJcZQPCyALQ2BCog2UQ2BCog2UC8ABAQJ/IwYhASMGQRBqJAYgAL1CIIinQf////8HcSICQfzDpP8DSQRAIAJBgIDA8gNPBEAgAEQAAAAAAAAAAEEAENQBIQALBQJ8IAAgAKEgAkH//7//B0sNABoCQAJAAkACQCAAIAEQ/AJBA3EOAwABAgMLIAErAwAgASsDCEEBENQBDAMLIAErAwAgASsDCBDTAQwCCyABKwMAIAErAwhBARDUAZoMAQsgASsDACABKwMIENMBmgshAAsgASQGIAALyAECAn8BfCMGIQEjBkEQaiQGIAC9QiCIp0H/////B3EiAkH8w6T/A0kEfCACQZ7BmvIDSQR8RAAAAAAAAPA/BSAARAAAAAAAAAAAENMBCwUCfCAAIAChIAJB//+//wdLDQAaAkACQAJAAkAgACABEPwCQQNxDgMAAQIDCyABKwMAIAErAwgQ0wEMAwsgASsDACABKwMIQQEQ1AGaDAILIAErAwAgASsDCBDTAZoMAQsgASsDACABKwMIQQEQ1AELCyEDIAEkBiADC9kCAQZ/IwYhCCMGQZACaiQGIAhBgAJqIgcgASgCACIENgIAIANBgAIgAEEARyIJGyEFIAAgCCAJGyEAIAVBAEcgBEEAR3EEQAJAQQAhAwNAAkAgAiAFTyIGIAJBIEtyRQ0CIAIgBSACIAYbIgRrIQIgACAHIAQQ8wQiBEF/Rg0AIAVBACAEIAAgCEYiBhtrIQUgACAAIARqIAYbIQAgAyAEaiEDIAcoAgAiBEEARyAFQQBHcQ0BDAILC0F/IQNBACEFIAcoAgAhBAsFQQAhAwsgBARAIAVBAEcgAkEAR3EEQAJAA0AgACAEKAIAEJ4BIgZBAWpBAk8EQCAHIAcoAgBBBGoiBDYCACAAIAZqIQAgAyAGaiEDIAUgBmsiBUEARyACQX9qIgJBAEdxDQEMAgsLIAYEQEF/IQMFIAdBADYCAAsLCwsgCQRAIAEgBygCADYCAAsgCCQGIAMLaQECfyAAIAFrQQJ1IAJJBEADQCACQX9qIgJBAnQgAGogAkECdCABaigCADYCACACDQALBSACBEADQCABQQRqIQMgAEEEaiEEIAAgASgCADYCACACQX9qIgIEQCADIQEgBCEADAELCwsLC4gBAQV/IAAoAgQiBSABKAIIRgR/IAAoAggiBiABKAIERgR/IAAoAgAhAAN/IAIgBUgEfyABKAIAIAJBAnRqIQNBACEEA0AgBCAGSARAIAAgAygCADYCACAFQQJ0IANqIQMgBEEBaiEEIABBBGohAAwBCwsgAkEBaiECDAEFQQALCwVBfwsFQX8LCyoBAX8gAgRAA0AgAEEEaiEDIAAgATYCACACQX9qIgIEQCADIQAMAQsLCwtkAQJ/IAAQYCAAaiEAIAIEQAJAIAIhAyABIQIgACEBA38gAiwAACIERQ0BIAJBAWohAiABQQFqIQAgASAEOgAAIANBf2oiAwR/IAAhAQwBBSAACwshAQsFIAAhAQsgAUEAOgAAC9UBAQR/QfGpASECIwYhAyMGQSBqJAYCQAJAQfGpASwAACIBRQ0AQfKpASwAAEUNACADQQBBIBBFGkHxqQEsAAAiAQRAA0AgAUH/AXEiAUEFdkECdCADaiIEIAQoAgBBASABQR9xdHI2AgAgAkEBaiICLAAAIgENAAsLIAAsAAAiAQRAAkAgACECA0AgAUH/AXEiAUEFdkECdCADaigCAEEBIAFBH3F0cQ0BIAJBAWoiAiwAACIBDQALCwUgACECCwwBCyAAIAEQqgIhAgsgAyQGIAIgAGsLlAEBA38DQCAAQQFqIQEgACwAABCyAQRAIAEhAAwBCwsCfwJAAkACQAJAIAAsAAAiA0Eraw4DAQIAAgtBASEADAILQQAhAAwBCyADDAELIAAhAiABIgAsAAALEIoBBEBBACEBA0AgAUEKbEEwaiAALAAAayEBIABBAWoiACwAABCKAQ0ACwVBACEBCyABQQAgAWsgAhsLZAIBfwF+IAAoAighASAAQgAgACgCAEGAAXEEf0ECQQEgACgCFCAAKAIcSxsFQQELIAFBA3FBpgNqERQAIgJCAFkEQCAAKAIUIAAoAhxrrCACIAAoAgggACgCBGusfXwhAgsgAguBAwEHfyMGIQUjBkGQCGokBiAFQYAIaiIIIAEoAgAiBjYCACADQYACIABBAEciCRshByAAIAUiCiAJGyEDIAdBAEcgBiIFQQBHcQRAAkBBACEAA0ACQCACQQJ2IgYgB08iCyACQYMBS3JFDQIgAiAHIAYgCxsiBWshAiADIAggBSAEEP4CIgVBf0YNACAHQQAgBSADIApGIgYbayEHIAMgBUECdCADaiAGGyEDIAAgBWohACAIKAIAIgVBAEcgB0EAR3ENAQwCCwtBfyEAQQAhByAIKAIAIQULBUEAIQALIAUEQCAHQQBHIAJBAEdxBEACQANAIAMgBSACIAQQ1wEiBkECakEDTwRAIAggBiAIKAIAaiIFNgIAIANBBGohAyAAQQFqIQAgB0F/aiIHQQBHIAIgBmsiAkEAR3ENAQwCCwsCQAJAAkAgBkF/aw4CAAECCyAGIQAMAgsgCEEANgIADAELIARBADYCAAsLCyAJBEAgASAIKAIANgIACyAKJAYgAAuIAQEFfyAAKAIEIgUgASgCCEYEfyAAKAIIIgYgASgCBEYEfyAAKAIAIQADfyACIAVIBH8gASgCACACQQN0aiEDQQAhBANAIAQgBkgEQCAAIAMrAwA5AwAgBUEDdCADaiEDIARBAWohBCAAQQhqIQAMAQsLIAJBAWohAgwBBUEACwsFQX8LBUF/Cwt7AQF/AkAgACgCTEEATgRAAkAgACwAS0EKRg0AIAAoAhQiASAAKAIQTw0AIAAgAUEBajYCFCABQQo6AAAMAgsgABCZAwwBCyAALABLQQpHBEAgACgCFCIBIAAoAhBJBEAgACABQQFqNgIUIAFBCjoAAAwCCwsgABCZAwsLxQMBBH8jBiEGIwZBEGokBgJAIAAEQCACQQNLBEACQCACIQMgASgCACEEA0ACQCAEKAIAIgVBf2pB/gBLBH8gBUUNASAAIAUQngEiBUF/RgRAQX8hAgwHCyADIAVrIQMgACAFagUgACAFOgAAIANBf2ohAyABKAIAIQQgAEEBagshACABIARBBGoiBDYCACADQQNLDQEgAyEEDAILCyAAQQA6AAAgAUEANgIAIAIgA2shAgwDCwUgAiEECyAEBEAgACEDIAEoAgAhAAJAA0ACQCAAKAIAIgVBf2pB/gBLBH8gBUUNASAGIAUQngEiBUF/RgRAQX8hAgwHCyAEIAVJDQMgAyAAKAIAEJ4BGiADIAVqIQMgBCAFawUgAyAFOgAAIANBAWohAyABKAIAIQAgBEF/agshBCABIABBBGoiADYCACAEDQEMBQsLIANBADoAACABQQA2AgAgAiAEayECDAMLIAIgBGshAgsFIAEoAgAiACgCACIBBEBBACECA0AgAUH/AEsEQCAGIAEQngEiAUF/RgRAQX8hAgwFCwVBASEBCyABIAJqIQIgAEEEaiIAKAIAIgENAAsFQQAhAgsLCyAGJAYgAgtaAQN/IwYhAyMGQRBqJAYgAyACKAIANgIAQQBBACABIAMQqQEiBEEASAR/QX8FIAAgBEEBaiIEEEQiADYCACAABH8gACAEIAEgAhCpAQVBfwsLIQUgAyQGIAULmwEBAn8gAUH/AEoEQCAAQwAAAH+UIgBDAAAAf5QgACABQf4BSiICGyEAIAFBgn5qIgNB/wAgA0H/AEgbIAFBgX9qIAIbIQEFIAFBgn9IBEAgAEMAAIAAlCIAQwAAgACUIAAgAUGEfkgiAhshACABQfwBaiIDQYJ/IANBgn9KGyABQf4AaiACGyEBCwsgACABQRd0QYCAgPwDar6UC4MGAgp/An0jBiEJIwZB0A9qJAYgAUH0A0oEQEEAIQAFAkACQAJAAkAgAQ4CAAECC0EAIQAMAgsgAEMAAIA/IAAqAgCVOAIADAELA0AgBSABSARAIAVBAnQgCWogBTYCACAFQQFqIQUMAQsLIAFBf2pBAnQgAGoiDCEKA0AgBiABSARAQwAAAAAhDSACIAZsQQJ0IABqIgUhB0F/IQQgBiEDA0AgASADRwRAIA0gByoCAIsiDl0hCCAOIA0gCBshDSACQQJ0IAdqIQcgAyAEIAgbIQQgA0EBaiEDDAELCyAEQX9GIA1D/+bbLl9yBEBBACEADAMFIARBAnQgCWoiAygCACEHIAMgBkECdCAJaiIDKAIANgIAIAMgBzYCAEEAIQcgBSEDIAIgBGxBAnQgAGohBANAIAEgB0cEQCAEKAIAIQggBCADKAIANgIAIAMgCDYCACAHQQFqIQcgA0EEaiEDIARBBGohBAwBCwsgBSoCACENQQEhBCAFIQMDQCABIARHBEAgAyADQQRqIgMqAgAgDZU4AgAgBEEBaiEEDAELCyAKQwAAgD8gDZU4AgBBACEIIAwhBANAIAEgCEcEQCAGIAhHBEAgAiAIbEECdCAAaiIDKgIAIQ0gBSEHQQEhCwNAIAEgC0cEQCADIANBBGoiAyoCACANIAcqAgCUkzgCACAHQQRqIQcgC0EBaiELDAELCyAEIA0gCioCAJSMOAIACyAIQQFqIQggAkECdCAEaiEEDAELCyAGQQFqIQYgAkECdCAKaiEKDAILAAsLQQAhBQNAIAUgAUgEQCAFIQMDQAJAIANBAnQgCWohBiADIAFODQAgBSAGKAIARg0AIANBAWohAwwBCwsgBiAFQQJ0IAlqKAIANgIAQQAhBCAFQQJ0IABqIQYgA0ECdCAAaiEDA0AgBCABSARAIAMoAgAhByADIAYoAgA2AgAgBiAHNgIAIARBAWohBCACQQJ0IAZqIQYgAkECdCADaiEDDAELCyAFQQFqIQUMAQsLCwsgCSQGIAAL/QEBBX9B8akBIQEjBiEDIwZBIGokBiADQgA3AwAgA0IANwMIIANCADcDECADQgA3AxhB8akBLAAAIgIEfwJ/QfKpASwAAEUEQCAAIQEDQCABQQFqIQQgAiABLAAARgRAIAQhAQwBCwsgASAAawwBCwNAIAJB/wFxIgJBBXZBAnQgA2oiBCAEKAIAQQEgAkEfcXRyNgIAIAFBAWoiASwAACICDQALIAAsAAAiAgRAAkAgACEBA0AgAkH/AXEiBEEFdkECdCADaigCAEEBIARBH3F0cUUNASABQQFqIgEsAAAiAg0ACwsFIAAhAQsgASAAawsFQQALIQUgAyQGIAULkwYCCn8CfCMGIQkjBkHQD2okBiABQfQDSgRAQQAhAAUCQAJAAkACQCABDgIAAQILQQAhAAwCCyAARAAAAAAAAPA/IAArAwCjOQMADAELA0AgBSABSARAIAVBAnQgCWogBTYCACAFQQFqIQUMAQsLIAFBf2pBA3QgAGoiDCEKA0AgBiABSARARAAAAAAAAAAAIQ0gAiAGbEEDdCAAaiIFIQdBfyEEIAYhAwNAIAEgA0cEQCANIAcrAwCZIg5jIQggDiANIAgbIQ0gAkEDdCAHaiEHIAMgBCAIGyEEIANBAWohAwwBCwsgBEF/RiANRLu919nffNs9ZXIEQEEAIQAMAwUgBEECdCAJaiIDKAIAIQcgAyAGQQJ0IAlqIgMoAgA2AgAgAyAHNgIAQQAhByAFIQMgAiAEbEEDdCAAaiEEA0AgASAHRwRAIAQrAwAhDSAEIAMrAwA5AwAgAyANOQMAIAdBAWohByADQQhqIQMgBEEIaiEEDAELCyAFKwMAIQ1BASEEIAUhAwNAIAEgBEcEQCADIANBCGoiAysDACANozkDACAEQQFqIQQMAQsLIApEAAAAAAAA8D8gDaM5AwBBACEIIAwhBANAIAEgCEcEQCAGIAhHBEAgAiAIbEEDdCAAaiIDKwMAIQ0gBSEHQQEhCwNAIAEgC0cEQCADIANBCGoiAysDACANIAcrAwCioTkDACAHQQhqIQcgC0EBaiELDAELCyAEIA0gCisDAKKaOQMACyAIQQFqIQggAkEDdCAEaiEEDAELCyAGQQFqIQYgAkEDdCAKaiEKDAILAAsLQQAhBQNAIAUgAUgEQCAFIQMDQAJAIANBAnQgCWohBiADIAFODQAgBSAGKAIARg0AIANBAWohAwwBCwsgBiAFQQJ0IAlqKAIANgIAQQAhBCAFQQN0IABqIQYgA0EDdCAAaiEDA0AgBCABSARAIAMrAwAhDSADIAYrAwA5AwAgBiANOQMAIARBAWohBCACQQN0IAZqIQYgAkEDdCADaiEDDAELCyAFQQFqIQUMAQsLCwsgCSQGIAALlAIBAX8CQAJAIAAgAXNBA3ENAAJAIAJBAEciAyABQQNxQQBHcQRAA0AgACABLAAAIgM6AAAgA0UNAiAAQQFqIQAgAkF/aiICQQBHIgMgAUEBaiIBQQNxQQBHcQ0ACwsgAwRAIAEsAAAEQCACQQNLBEADQCABKAIAIgNB//37d2ogA0GAgYKEeHFBgIGChHhzcUUEQCAAIAM2AgAgAUEEaiEBIABBBGohACACQXxqIgJBA0sNAQsLCwwDCwVBACECCwsMAQsgAgR/IAEhAyACIQEDfyAAIAMsAAAiAjoAACACRQRAIAEhAgwDCyADQQFqIQMgAEEBaiEAIAFBf2oiAQ0AQQALBUEACyECCyAAQQAgAhBFGgtAAQJ/IAIEQCABIQMgACEBA0AgA0EEaiEAIAFBBGohBCABIAMoAgA2AgAgAkF/aiICBEAgACEDIAQhAQwBCwsLCwMAAQssAQF/IwYhAiMGQRBqJAYgAiAANgIAIAIgATYCBEHbACACEDIQmgMaIAIkBgvWAQEFfyMGIQIjBkEgaiQGQQAQhgMEQANAQQEgAHRB/////wdxBEAgAEECdCAAQYaTAxCFAzYCAAsgAEEBaiIAQQZHDQALBQJAA0AgBEEBIAB0Qf////8HcSIDRUEAcQR/IABBAnQoAgAFIABBhpMDQafVAyADGxCFAwsiA0EAR2ohBCAAQQJ0IAJqIAM2AgAgAEEBaiIAQQZHDQALAkACQAJAIARB/////wdxDgIAAQILQczEAyEBDAILIAIoAgBB8IcBRgRAQYyIASEBCwsLCyACJAYgAQurAwIJfwJ8IAAoAgQiBUEBSCAAKAIIIgZBAUhyBH9BfwUgASgCBCAFRgR/IAEoAgggBUYEfyACKAIEIAVGBH8gAigCCCAGRgR/IAMoAgQgBUYEfyACKAIAIQIDQAJAIAQgBU4NACADKAIAIARBA3RqKwMAIg1EvInYl7LSnDxjDQBEAAAAAAAA8D8gDZmfoyEOIAQgBWwhDEEAIQcgAiEIA0AgBiAHRwRAQQAhCSABKAIAIAxBA3RqIQpEAAAAAAAAAAAhDSAAKAIAIAdBA3RqIQsDQCAFIAlHBEAgDSAKKwMAIAsrAwCioCENIAlBAWohCSAKQQhqIQogBkEDdCALaiELDAELCyAIIA4gDaI5AwAgB0EBaiEHIAhBCGohCAwBCwsgBEEBaiEEIAZBA3QgAmohAgwBCwsgAiEAA38gBCAFSAR/IAMoAgAgBEEDdGpEAAAAAAAAAAA5AwBBACEBA0AgASAGSARAIABEAAAAAAAAAAA5AwAgAUEBaiEBIABBCGohAAwBCwsgBEEBaiEEDAEFQQALCwVBfwsFQX8LBUF/CwVBfwsFQX8LCwuOAQECfwJAAkADQCACQbDaAGotAAAgAEcEQCACQQFqIgJB1wBHDQFB1wAhAgwCCwsgAg0AQZDbACEADAELQZDbACEAA0AgACEDA0AgA0EBaiEAIAMsAAAEQCAAIQMMAQsLIAJBf2oiAg0ACwsgASgCFCIBBH8gASgCACABKAIEIAAQmwUFQQALIgEgACABGws1ACABBH8CfwNAIAAgAUF/aiIBai0AAEEvRwRAIAEEQAwCBUEADAMLAAsLIAAgAWoLBUEACwusAQEDf0GcuAEhAiAAQZy4AXNBA3FFBEBBnLgBKAIAIgNB//37d2ogA0GAgYKEeHFBgIGChHhzcUUEQAN/IABBBGohASAAIAM2AgAgAkEEaiICKAIAIgNB//37d2ogA0GAgYKEeHFBgIGChHhzcQR/IAEFIAEhAAwBCwshAAsLIAAgAiwAACIBOgAAIAEEQANAIABBAWoiACACQQFqIgIsAAAiAToAACABDQALCws1AQJ/IAIgACgCECAAKAIUIgRrIgMgAyACSxshAyAEIAEgAxBMGiAAIAAoAhQgA2o2AhQgAguUCQIYfwd8IwYhGCMGQRBqJAYgGCEMIAAoAgQiBiAAKAIIRyAGQQJIcgR/QX8FIAEoAgQgBkYEfyAGEOcCIg0EfwJ/IAwgBkF/aiIRNgIEIAwgDSgCAEEIajYCACAAIAEgDBCHC0EASARAIA0QzwFBfwwBCyANKAIAIghEAAAAAAAAAAA5AwAgESEDA0AgA0EASgRAIAMhBwNAIAdBAEoEQCAHQQN0IAhqKwMAmSABKAIAIgUgB0F/aiICQQN0aisDAJkgB0EDdCAFaisDAJmgRI3ttaD3xrA+omQEQCACIQcMAgsLCyADQX9qIQkgAyAHRwRAAkAgA0EDdCAIaiESIAdBAWpBA3QgCGohE0EAIQUDQCAFQeMASw0BIAVBAWohBSASKwMAIhsgG6IiGiABKAIAIg4gCUEDdGoiFCsDACADQQN0IA5qIhUrAwAiG6FEAAAAAAAA4D+iIh8gH6KgnyEcIBMrAwAhHSAHIgJBA3QgDmorAwAgG6EgGiAfIByaIBwgH0QAAAAAAAAAAGMboKOgIRsDQCACIANIBEAgG5kiGiAdmWYEQCAaRLyJ2Jey0pw8ZAR8RAAAAAAAAPA/IB2aIBujIhwgHKJEAAAAAAAA8D+gn6MiGiEeIBwgGqIFRAAAAAAAAPA/IR5EAAAAAAAAAAALIRoFRAAAAAAAAPA/IBuaIB2jIhwgHKJEAAAAAAAA8D+gn6MhGiAcIBqiIR4LIAJBA3QgDmoiDysDACIcIAJBAWoiCkEDdCAOaiIEKwMAIh+hISAgDyAcIBogGiAgoiAeRAAAAAAAAABAoiAKQQN0IAhqIhArAwCioKIiHKE5AwAgBCAfIBygOQMAIAJBA3QgCGohBCACIAdKBEAgBCAeIAQrAwCiIB0gGqKhOQMACyAQIBArAwAiHCAaIB4gIKIgGkQAAAAAAAAAQKIgHKKhoqA5AwAgAiAGbCEWIAYgCmwhF0EAIQsDQCAGIAtHBEAgACgCACIPIAsgFmpBA3RqIgQrAwAhGyAEIB4gG6IgGiALIBdqQQN0IA9qIgQrAwAiHaKhOQMAIAQgGiAboiAeIB2ioDkDACALQQFqIQsMAQsLIAIgCUgEQCAQKwMAIRsgAkECakEDdCAIaiICKwMAIR0gAiAeIB2iOQMAIBogHaKaIR0LIAohAgwBCwsgEisDAJkgFCsDAJkgFSsDAJmgRI3ttaD3xrA+omQNAAsLCyAJIQMMAQsLQQAhAwNAIAMgEUcEQCABKAIAIgkgA0EDdGoiBSsDACIdIRogAyICQQFqIgchBANAIAQgBkgEQCAEQQN0IAlqKwMAIhsgGmQhCiAbIBogChshGiAEIAIgChshAiAEQQFqIQQMAQsLIAJBA3QgCWogHTkDACAFIBo5AwAgAyAGbEEDdCAAKAIAIgNqIQUgAiAGbEEDdCADaiECQQAhAwNAIAMgBkcEQCACKwMAIRsgAiAFKwMAOQMAIAUgGzkDACAFQQhqIQUgAkEIaiECIANBAWohAwwBCwsgByEDDAELCyANEM8BQQALBUF/CwVBfwsLIRkgDCQGIBkLLAAgAFBFBEADQCABQX9qIgEgAKdBB3FBMHI6AAAgAEIDiCIAUEUNAAsLIAELNAAgAFBFBEADQCABQX9qIgEgAiAAp0EPcUGg2gBqLQAAcjoAACAAQgSIIgBQRQ0ACwsgAQuhAgIJfwF8IAAoAgQhCSAAKAIIIgIgASgCBEYEQCABKAIIIAJGBEACQCABKAIAIgohBgNAIAMgAk4EQEEAIQAMAgtBACEEIAYhAQNAIAIgBEcEQCAEIANJBEAgASADIAIgBGxqQQN0IApqKwMAOQMABQJAIAAoAgAhBSABRAAAAAAAAAAAOQMAQQAhByADQQN0IAVqIQggBEEDdCAFaiEFRAAAAAAAAAAAIQsDQCAHIAlODQEgASALIAgrAwAgBSsDAKKgIgs5AwAgB0EBaiEHIAJBA3QgCGohCCACQQN0IAVqIQUMAAALAAsLIARBAWohBCABQQhqIQEMAQsLIANBAWohAyACQQN0IAZqIQYMAAALAAsFQX8hAAsFQX8hAAsgAAvWAgEGfyMGIQMjBkHgAWokBiADQaABaiIEQgA3AwAgBEIANwMIIARCADcDECAEQgA3AxggBEIANwMgIANB0AFqIgUgAigCADYCAEEAIAEgBSADQdAAaiICIAQQpAJBAEgEf0F/BSAAKAJMQX9KBH9BAQVBAAsaIAAoAgAhBiAALABKQQFIBEAgACAGQV9xNgIACyAAKAIwBEAgACABIAUgAiAEEKQCIQEFIAAoAiwhByAAIAM2AiwgACADNgIcIAAgAzYCFCAAQdAANgIwIAAgA0HQAGo2AhAgACABIAUgAiAEEKQCIQEgBwRAIABBAEEAIAAoAiRBP3FBygFqEQQAGiABQX8gACgCFBshASAAIAc2AiwgAEEANgIwIABBADYCECAAQQA2AhwgAEEANgIUCwsgACAAKAIAIgAgBkEgcXI2AgBBfyABIABBIHEbCyEIIAMkBiAICykCAX8BfCABKAIAQQdqQXhxIgIrAwAhAyABIAJBCGo2AgAgACADOQMAC8wXAxR/A34BfCMGIRQjBkGwBGokBiAUQZgEaiIMQQA2AgAgAb0iGkIAUwR/IAGaIh0hAUGh/gIhEiAdvSEaQQEFQaT+AkGn/gJBov4CIARBAXEbIARBgBBxGyESIARBgRBxQQBHCyETIBRBIGohBiAUIg4hESAOQZwEaiIKQQxqIQ8gGkKAgICAgICA+P8Ag0KAgICAgICA+P8AUQR/IABBICACIBNBA2oiAyAEQf//e3EQdSAAIBIgExByIABBvP4CQcD+AiAFQSBxQQBHIgUbQbT+AkG4/gIgBRsgASABYhtBAxByIABBICACIAMgBEGAwABzEHUgAwUCfyABIAwQigNEAAAAAAAAAECiIgFEAAAAAAAAAABiIgcEQCAMIAwoAgBBf2o2AgALIAVBIHIiC0HhAEYEQCASQQlqIBIgBUEgcSIJGyEIQQwgA2siB0UgA0ELS3JFBEBEAAAAAAAAIEAhHQNAIB1EAAAAAAAAMECiIR0gB0F/aiIHDQALIAgsAABBLUYEfCAdIAGaIB2hoJoFIAEgHaAgHaELIQELIA9BACAMKAIAIgZrIAYgBkEASBusIA8QvgEiB0YEQCAKQQtqIgdBMDoAAAsgE0ECciEKIAdBf2ogBkEfdUECcUErajoAACAHQX5qIgcgBUEPajoAACADQQFIIQwgBEEIcUUhDSAOIQUDQCAFIAkgARBzIgZBoNoAai0AAHI6AAAgASAGt6FEAAAAAAAAMECiIQEgBUEBaiIGIBFrQQFGBH8gDSAMIAFEAAAAAAAAAABhcXEEfyAGBSAGQS46AAAgBUECagsFIAYLIQUgAUQAAAAAAAAAAGINAAsCfyADRSAFQX4gEWtqIANOckUEQCAPIANBAmpqIAdrIQsgBwwBCyAFIA8gEWsgB2tqIQsgBwshBiAAQSAgAiAKIAtqIgMgBBB1IAAgCCAKEHIgAEEwIAIgAyAEQYCABHMQdSAAIA4gBSARayIFEHIgAEEwIAsgBSAPIAZrIgZqa0EAQQAQdSAAIAcgBhByIABBICACIAMgBEGAwABzEHUgAwwBCyAHBEAgDCAMKAIAQWRqIgg2AgAgAUQAAAAAAACwQaIhAQUgDCgCACEICyAGIAZBoAJqIAhBAEgbIgohBgNAIAYgARCKBSIHNgIAIAZBBGohBiABIAe4oUQAAAAAZc3NQaIiAUQAAAAAAAAAAGINAAsgCEEASgRAIAohBwNAIAhBHSAIQR1IGyENIAZBfGoiCCAHTwRAIA2tIRtBACEJA0AgCa0gCCgCAK0gG4Z8IhxCgJTr3AMQ9gEhGiAIIBwgGkKAlOvcA359PgIAIBqnIQkgCEF8aiIIIAdPDQALIAkEQCAHQXxqIgcgCTYCAAsLIAYgB0sEQAJAA38gBkF8aiIIKAIADQEgCCAHSwR/IAghBgwBBSAICwshBgsLIAwgDCgCACANayIINgIAIAhBAEoNAAsFIAohBwtBBiADIANBAEgbIQ0gCEEASARAIA1BGWpBCRA5QQFqIRAgC0HmAEYhFSAGIQMDQEEAIAhrIgZBCSAGQQlIGyEJIAogByADSQR/QQEgCXRBf2ohFkGAlOvcAyAJdiEXQQAhCCAHIQYDQCAGIAggBigCACIYIAl2ajYCACAXIBYgGHFsIQggBkEEaiIGIANJDQALIAcgB0EEaiAHKAIAGyEZIAgEfyADIAg2AgAgA0EEagUgAwshBiAZBSADIQYgByAHQQRqIAcoAgAbCyIDIBUbIgcgEEECdGogBiAGIAdrQQJ1IBBKGyEIIAwgCSAMKAIAaiIGNgIAIAZBAEgEQCADIQcgCCEDIAYhCAwBCwsFIAchAyAGIQgLIAohDCADIAhJBEAgDCADa0ECdUEJbCEHIAMoAgAiCkEKTwRAQQohBgNAIAdBAWohByAKIAZBCmwiBk8NAAsLBUEAIQcLIA1BACAHIAtB5gBGG2sgC0HnAEYiFSANQQBHIhZxQR90QR91aiIGIAggDGtBAnVBCWxBd2pIBH8gBkGAyABqIgZBCRA5IQkgBiAJQQlsayIGQQhIBEBBCiELA0AgBkEBaiEKIAtBCmwhCyAGQQdIBEAgCiEGDAELCwVBCiELCyAJQQJ0IAxqQYRgaiIGKAIAIgkgCxBIIRAgCCAGQQRqRiIXIAkgCyAQbGsiCkVxRQRARAEAAAAAAEBDRAAAAAAAAEBDIBBBAXEbIQFEAAAAAAAA4D9EAAAAAAAA8D9EAAAAAAAA+D8gFyAKIAtBAXYiEEZxGyAKIBBJGyEdIBMEQCAdmiAdIBIsAABBLUYiEBshHSABmiABIBAbIQELIAYgCSAKayIKNgIAIAEgHaAgAWIEQCAGIAogC2oiBzYCACAHQf+T69wDSwRAA0AgBkEANgIAIAZBfGoiBiADSQRAIANBfGoiA0EANgIACyAGIAYoAgBBAWoiBzYCACAHQf+T69wDSw0ACwsgDCADa0ECdUEJbCEHIAMoAgAiCkEKTwRAQQohCwNAIAdBAWohByAKIAtBCmwiC08NAAsLCwsgByEJIAZBBGoiBiAIIAggBksbIQYgAwUgByEJIAghBiADCyEKIAYgCksEfwJ/IAYhAwN/IANBfGoiBigCAARAIAMhBkEBDAILIAYgCksEfyAGIQMMAQVBAAsLCwVBAAshByAVBH8gFkEBcyANaiIDIAlKIAlBe0pxBH8gA0F/aiAJayEIIAVBf2oFIANBf2ohCCAFQX5qCyEFIARBCHEEfyAIBSAHBEAgBkF8aigCACINBEAgDUEKEE4EQEEAIQMFQQAhA0EKIQsDQCADQQFqIQMgDSALQQpsIgsQTkUNAAsLBUEJIQMLBUEJIQMLIAYgDGtBAnVBCWxBd2ohDSAFQSByQeYARgR/IAggDSADayIDQQAgA0EAShsiAyAIIANIGwUgCCAJIA1qIANrIgNBACADQQBKGyIDIAggA0gbCwsFIA0LIQNBACAJayEIIABBICACIAVBIHJB5gBGIhAEf0EAIQggCUEAIAlBAEobBSAPIAggCSAJQQBIG6wgDxC+ASILa0ECSARAA0AgC0F/aiILQTA6AAAgDyALa0ECSA0ACwsgC0F/aiAJQR91QQJxQStqOgAAIAtBfmoiCCAFOgAAIA8gCGsLIAMgE0EBampBASAEQQN2QQFxIANBAEciCxtqaiINIAQQdSAAIBIgExByIABBMCACIA0gBEGAgARzEHUgEARAIA5BCWoiCSEPIA5BCGohCCAMIAogCiAMSxsiCiEHA0AgBygCAK0gCRC+ASEFIAcgCkYEQCAFIAlGBEAgCEEwOgAAIAghBQsFIAUgDksEQCAOQTAgBSARaxBFGgNAIAVBf2oiBSAOSw0ACwsLIAAgBSAPIAVrEHIgB0EEaiIFIAxNBEAgBSEHDAELCyAEQQhxRSALQQFzcUUEQCAAQcT+AkEBEHILIABBMCAFIAZJIANBAEpxBH8DfyAFKAIArSAJEL4BIgcgDksEQCAOQTAgByARaxBFGgNAIAdBf2oiByAOSw0ACwsgACAHIANBCSADQQlIGxByIANBd2ohByAFQQRqIgUgBkkgA0EJSnEEfyAHIQMMAQUgBwsLBSADC0EJakEJQQAQdQUgAEEwIAogBiAKQQRqIAcbIgtJIANBf0pxBH8gBEEIcUUhEiAOQQlqIgwhE0EAIBFrIREgDkEIaiEJIAMhBSAKIQYDfyAMIAYoAgCtIAwQvgEiA0YEQCAJQTA6AAAgCSEDCwJAIAYgCkYEQCADQQFqIQcgACADQQEQciASIAVBAUhxBEAgByEDDAILIABBxP4CQQEQciAHIQMFIAMgDk0NASAOQTAgAyARahBFGgNAIANBf2oiAyAOSw0ACwsLIAAgAyATIANrIgMgBSAFIANKGxByIAZBBGoiBiALSSAFIANrIgVBf0pxDQAgBQsFIAMLQRJqQRJBABB1IAAgCCAPIAhrEHILIABBICACIA0gBEGAwABzEHUgDQsLIQAgFCQGIAIgACAAIAJIGws0ACAAIABiBH9BAAUgAEQAAAAAAADwQWYEf0EABSAARAAAAAAAAPC/ZQR/QQAFIACrCwsLCyYBAX8jBiECIwZBEGokBiACIAE2AgAgAEH2/QIgAhClAhogAiQGC1YBA38gACgCVCIDQQAgAkGAAmoiBRCmAiEEIAEgAyAEIANrIAUgBBsiASACIAEgAkkbIgIQTBogACACIANqNgIEIAAgASADaiIBNgIIIAAgATYCVCACC6UCAgp/AXwgACgCCCEGIAAoAgQiBSABKAIERgRAIAEoAgggBUYEQAJAIAEoAgAiCiEHA0AgAiAFTgRAQQAhAAwCCyACIAZsIQtBACEDIAchAQNAIAMgBUcEQCADIAJJBEAgASACIAMgBWxqQQN0IApqKwMAOQMABQJAIAAoAgAhBCABRAAAAAAAAAAAOQMAQQAhCCALQQN0IARqIQkgAyAGbEEDdCAEaiEERAAAAAAAAAAAIQwDQCAIIAZODQEgASAMIAkrAwAgBCsDAKKgIgw5AwAgCEEBaiEIIAlBCGohCSAEQQhqIQQMAAALAAsLIANBAWohAyABQQhqIQEMAQsLIAJBAWohAiAFQQN0IAdqIQcMAAALAAsFQX8hAAsFQX8hAAsgAAv7AwIDfwV+IAC9IgdCNIinQf8PcSECIAG9IgZCNIinQf8PcSEEIAdCgICAgICAgICAf4MhCQJ8AkAgBkIBhiIFUA0AAnwgAkH/D0YgAb1C////////////AINCgICAgICAgPj/AFZyDQEgB0IBhiIIIAVYBEAgAEQAAAAAAAAAAKIgACAFIAhRGw8LIAIEfiAHQv////////8Hg0KAgICAgICACIQFIAdCDIYiBUJ/VQRAQQAhAgNAIAJBf2ohAiAFQgGGIgVCf1UNAAsFQQAhAgsgB0EBIAJrrYYLIgggBAR+IAZC/////////weDQoCAgICAgIAIhAUgBkIMhiIFQn9VBEADQCADQX9qIQMgBUIBhiIFQn9VDQALCyAGQQEgAyIEa62GCyIGfSIFQn9VIQMgAiAESgRAAkADQAJAIAMEQCAFUA0BBSAIIQULIAVCAYYiCCAGfSIFQn9VIQMgAkF/aiICIARKDQEMAgsLIABEAAAAAAAAAACiDAILCyADBEAgAEQAAAAAAAAAAKIgBVANARoFIAghBQsgBUKAgICAgICACFQEQANAIAJBf2ohAiAFQgGGIgVCgICAgICAgAhUDQALCyAFQoCAgICAgIB4fCACrUI0hoQgBUEBIAJrrYggAkEAShsgCYS/CwwBCyAAIAGiIgAgAKMLC/kTAw5/An4HfCMGIQojBkGABGokBkEAIAIgA2oiEGshEQJAAkADQAJAAkACQCABQS5rDgMEAAEACyABIQYgByEBDAELIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLIQFBASEHDAELCwwBCyAAKAIEIgEgACgCaEkEfyAAIAFBAWo2AgQgAS0AAAUgABBUCyIGQTBGBH8DfyAUQn98IRQgACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAsiBkEwRg0AQQEhC0EBCwVBASELIAcLIQELIApBADYCAAJ8AkACQAJAAkAgBkEuRiIOIAZBUGoiDUEKSXIEQAJAQQAhByAGIQkgDSEGA0ACQCAOBEAgCw0BQQEhCyAVIRQFAkAgFUIBfCEVIAlBMEchDSAIQf0ATgRAIA1FDQEgCiAKKALwA0EBcjYC8AMMAQsgCEECdCAKaiIBIAwEfyAJQVBqIAEoAgBBCmxqBSAGCzYCACAMQQFqIgZBCUYhAUEAIAYgARshDCABIAhqIQggFacgByANGyEHQQEhAQsLIAAoAgQiBiAAKAJoSQR/IAAgBkEBajYCBCAGLQAABSAAEFQLIglBUGoiBkEKSSAJQS5GIg5yDQEgCSEGDAILCyABQQBHIQEMAgsFQQAhBwsgFCAVIAsbIRQgAUEARyIBIAZBIHJB5QBGcUUEQCAGQX9KBEAMAgUMAwsACyAUIAAgBRCRAyIUQoCAgICAgICAgH9RBH4gBUUEQCAAQgAQggFEAAAAAAAAAAAMBgsgACgCaARAIAAgACgCBEF/ajYCBAtCAAUgFAt8IRQMAwsgACgCaARAIAAgACgCBEF/ajYCBCABRQ0CDAMLCyABRQ0ADAELQaTFA0EcNgIAIABCABCCAUQAAAAAAAAAAAwBCyAEt0QAAAAAAAAAAKIgCigCACIARQ0AGiAUIBVRIBVCClNxBEAgBLcgALiiIAAgAnZFIAJBHkpyDQEaCyAUIANBfhA5rFUEQEGkxQNBxAA2AgAgBLdE////////73+iRP///////+9/ogwBCyAUIANBln9qrFMEQEGkxQNBxAA2AgAgBLdEAAAAAAAAEACiRAAAAAAAABAAogwBCyAMBEAgDEEJSARAIAhBAnQgCmoiBSgCACEBA0AgAUEKbCEBIAxBAWohACAMQQhIBEAgACEMDAELCyAFIAE2AgALIAhBAWohCAsgFKchASAHQQlIBEAgAUESSCAHIAFMcQRAIAFBCUYEQCAEtyAKKAIAuKIMAwsgAUEJSARAIAS3IAooAgC4okEAIAFrQQJ0QcDUAGooAgC3owwDCyACQRtqIAFBfWxqIgBBHkogCigCACIFIAB2RXIEQCAEtyAFuKIgAUECdEH40wBqKAIAt6IMAwsLCyABQQkQTyIABH9BACAAIABBCWogAUF/ShsiDGtBAnRBwNQAaigCACEGIAgEf0GAlOvcAyAGEDkhC0EAIQdBACEAQQAhBQNAIAcgBUECdCAKaiINKAIAIg4gBhBIIg9qIQkgDSAJNgIAIAsgDiAGIA9sa2whByABQXdqIAEgCUUgACAFRnEiCRshASAAQQFqQf8AcSAAIAkbIQAgBUEBaiIFIAhHDQALIAcEfyAIQQJ0IApqIAc2AgAgACEFIAhBAWoFIAAhBSAICwVBACEFQQALIQAgAUEJIAxraiEBIAUFIAghAEEACyEHQQAhBQNAAkAgAUESSCEMIAFBEkYhDSAHQQJ0IApqIQ4DQCAMRQRAIA1FDQIgDigCAEHf4KUETwRAQRIhAQwDCwtBACEIIABB/wBqIQsDQCAIrSALQf8AcSIJQQJ0IApqIgYoAgCtQh2GfCIUpyELIBRCgJTr3ANWBEAgFEKAlOvcAxD2ASIVpyEIIBQgFUKAlOvcA359pyELBUEAIQgLIAYgCzYCACAAIAAgCSALGyAHIAlGIg8gCSAAQf8AakH/AHFHchshBiAJQX9qIQsgD0UEQCAGIQAMAQsLIAVBY2ohBSAIRQ0ACyAGQf8AakH/AHEhCSAGQf4AakH/AHFBAnQgCmohDCAHQf8AakH/AHEiByAGRgRAIAwgCUECdCAKaigCACAMKAIAcjYCACAJIQALIAdBAnQgCmogCDYCACABQQlqIQEMAQsLA0ACQCAAQQFqQf8AcSEGIABB/wBqQf8AcUECdCAKaiEMA0ACQCABQRJGIQhBCUEBIAFBG0obIQkDQEEAIQ4CQAJAA0ACQCAAIAcgDmpB/wBxIgtGDQIgC0ECdCAKaigCACILIA5BAnRBqIoBaigCACINSQ0CIAsgDUsNACAOQQFqQQJPDQJBASEODAELCwwBCyAIDQQLIAUgCWohBSAAIAdGBEAgACEHDAELC0EBIAl0QX9qIQ5BgJTr3AMgCXYhD0EAIQggByELA0AgCCALQQJ0IApqIhIoAgAiEyAJdmohDSASIA02AgAgDyAOIBNxbCEIIAFBd2ogASANRSAHIAtGcSINGyEBIAdBAWpB/wBxIAcgDRshByALQQFqQf8AcSILIABHDQALIAgEQCAGIAdHDQEgDCAMKAIAQQFyNgIACwwBCwsgAEECdCAKaiAINgIAIAYhAAwBCwtBACEBA0AgAEEBakH/AHEhBiAAIAEgB2pB/wBxIglGBEAgBkF/akECdCAKakEANgIAIAYhAAsgFkQAAAAAZc3NQaIgCUECdCAKaigCALigIRYgAUEBaiIBQQJHDQALIBYgBLciGKIhFyAFQTVqIgYgA2siAyACSCEEIANBACADQQBKGyACIAQbIgFBNUgEQEQAAAAAAADwP0HpACABaxCfASAXEJADIhkhGiAXRAAAAAAAAPA/QTUgAWsQnwEQjwMiGyEWIBkgFyAboaAhFwVEAAAAAAAAAAAhFgsgB0ECakH/AHEiAiAARwRAAkAgAkECdCAKaigCACICQYDKte4BSQR8IAJFQQAgACAHQQNqQf8AcUYbDQEgGEQAAAAAAADQP6IgFqAFIAJBgMq17gFHBEAgGEQAAAAAAADoP6IgFqAhFgwCCyAYRAAAAAAAAOA/oiAWoCAYRAAAAAAAAOg/oiAWoCAAIAdBA2pB/wBxRhsLIRYLQTUgAWtBAUoEfCAWRAAAAAAAAPA/EI8DRAAAAAAAAAAAYQR8IBZEAAAAAAAA8D+gBSAWCwUgFgshFgsgFyAWoCAaoSEXIAZB/////wdxQX4gEGtKBHwCfCAFIBeZRAAAAAAAAEBDZkUiAEEBc2ohBSAXIBdEAAAAAAAA4D+iIAAbIRcgBUEyaiARTARAIBcgBCAAIAEgA0dycSAWRAAAAAAAAAAAYnFFDQEaC0GkxQNBxAA2AgAgFwsFIBcLIAUQjgMLIRwgCiQGIBwL8ggDCH8FfgN8IAAoAgQiBSAAKAJoSQR/IAAgBUEBajYCBCAFLQAABSAAEFQLIQUCQAJAA0ACQAJAIAVBLmsOAwMBAAELIAAoAgQiBSAAKAJoSQR/IAAgBUEBajYCBCAFLQAABSAAEFQLIQVBASEIDAELCwwBCyAAKAIEIgUgACgCaEkEfyAAIAVBAWo2AgQgBS0AAAUgABBUCyIFQTBGBH8DfyANQn98IQ0gACgCBCIFIAAoAmhJBH8gACAFQQFqNgIEIAUtAAAFIAAQVAsiBUEwRg0AQQEhCEEBCwVBAQshCQtEAAAAAAAA8D8hEyAFIQcgCCEFA0ACQCAHQSByIQgCQAJAIAdBUGoiC0EKSQ0AIAdBLkYiDCAIQZ9/akEGSXJFDQIgDEUNACAJBH5BLiEHDAMFQQEhCSAPCyENDAELIAhBqX9qIAsgB0E5ShshBSAPQghTBEAgBSAGQQR0aiEGBSAPQg5TBHwgE0QAAAAAAACwP6IiFCETIBIgFCAFt6KgBSAKQQEgBUUgCkEAR3IiBRshCiASIBIgE0QAAAAAAADgP6KgIAUbCyESCyAPQgF8IQ9BASEFCyAAKAIEIgcgACgCaEkEfyAAIAdBAWo2AgQgBy0AAAUgABBUCyEHDAELCyAFBHwCfCAPQghTBEAgDyEOA0AgBkEEdCEGIA5CAXwhECAOQgdTBEAgECEODAELCwsCfyAHQSByQfAARgR+IAAgBBCRAyIOQoCAgICAgICAgH9RBH4gBEUEQCAAQgAQggFEAAAAAAAAAAAMBAsgACgCaARAIAAgACgCBEF/ajYCBAtCAAUgDgsFIAAoAmgEQCAAIAAoAgRBf2o2AgQLQgALIREgA7dEAAAAAAAAAACiIAZFDQEaIBEgDSAPIAkbQgKGQmB8fCINQQAgAmusVQsEQEGkxQNBxAA2AgAgA7dE////////73+iRP///////+9/ogwBCyANIAJBln9qrFMEQEGkxQNBxAA2AgAgA7dEAAAAAAAAEACiRAAAAAAAABAAogwBCyAGQX9KBEADQCASRAAAAAAAAOA/ZkUiAEEBcyAGQQF0ciEGIBIgEiASRAAAAAAAAPC/oCAAG6AhEiANQn98IQ0gBkF/Sg0ACwsCfAJAIA1CICACrH18Ig4gAaxTBEAgDqciAUEATARAQQAhAUHUACEADAILC0HUACABayEAIAFBNUgNACADtyETRAAAAAAAAAAADAELRAAAAAAAAPA/IAAQnwEgA7ciExCQAwshFEQAAAAAAAAAACASIAZBAXFFIAFBIEggEkQAAAAAAAAAAGJxcSIAGyAToiAUIBMgACAGariioKAgFKEiEkQAAAAAAAAAAGEEQEGkxQNBxAA2AgALIBIgDacQjgMLBSAAKAJoRSIBRQRAIAAgACgCBEF/ajYCBAsgBARAIAFFBEAgACAAKAIEQX9qNgIEIAEgCUVyRQRAIAAgACgCBEF/ajYCBAsLBSAAQgAQggELIAO3RAAAAAAAAAAAogsLvgMBBH8gACgCCCIFIAAoAgQiAyAFIANIGyEGIAVBAkggA0ECSHIEf0F/BSABKAIIIAVGBH8gASgCBCAGRgR/IAIoAgQgBkYEfwJ/IAYgBhCLASIEKAIEIAZGBEAgBCgCCCAGRgRAIAMgBUgiAwRAIAAgBBCNBUEASARAIAQQSUF/DAQLBSAAIAQQhgVBAEgEQCAEEElBfwwECwsgBCACEIMFQQBIBEAgBBBJQX8MAwsgAwRAIAAgBCABIAIQ/gRBAEgEQCAEEElBfwwECwUCQEEAIQUgBCgCACEDIAEoAgAhAANAAkAgBSAGTg0AIAIoAgAgBUEDdGorAwBEvInYl7LSnDxjDQBBACEBA0AgASAGSARAIAAgAysDADkDACABQQFqIQEgA0EIaiEDIABBCGohAAwBCwsgBUEBaiEFDAELCyAFIQEDQCABIAZODQEgAigCACABQQN0akQAAAAAAAAAADkDAEEAIQMDQCADIAZIBEAgAEQAAAAAAAAAADkDACADQQFqIQMgAEEIaiEADAELCyABQQFqIQEMAAALAAsLIAQQSUEADAILCyAEEElBfwsFQX8LBUF/CwVBfwsLC9ITAg9/AXwjBiEOIwZBEGokBiAEKAIAIgchDCABIAJBf2oiEGxBAXQgB2ohBgNAIAUgAUgEQCAGQQA7AQAgDEEAOwEAIAxBAmohDCAFQQFqIQUgBkECaiEGDAELC0EAIQwgByIGIAFBf2oiEUEBdGohBQNAIAwgAkgEQCAFQQA7AQAgBkEAOwEAIAFBAXQgBmohBiAMQQFqIQwgAUEBdCAFaiEFDAELCyAEQZCAyABqIQZBACABayESIAAgAUEBaiIAaiENIAAgA2ohDEEBIQpBACEFIABBAXQgB2ohAwJ/AkADQAJAIAogEE4NAiAFIQBBASEIIAMhCwNAIAggEUgEQCANLQAAIAwtAABKBEACQCASQQF0IAtqIg8uAQAiA0EASgRAIAsgAzsBACADQQdsIgVBAnQgBGpB9P/PAGoiAyADKAIAQQFqNgIAIAVBAnQgBGpB+P/PAGoiAyAIIAMoAgBqNgIAIAVBAnQgBGpB/P/PAGoiAyAKIAMoAgBqNgIAIAVBAnQgBGpBjIDQAGogCjYCAAwBCyAPQX5qLgEAIgkhByAJQQBKIQUgDy4BAiIDQQBMBEAgBQRAIAsgCTsBACAHQQdsIgVBAnQgBGpB9P/PAGoiAyADKAIAQQFqNgIAIAVBAnQgBGpB+P/PAGoiAyAIIAMoAgBqNgIAIAVBAnQgBGpB/P/PAGoiAyAKIAMoAgBqNgIAIAVBAnQgBGpBhIDQAGoiAygCACAISARAIAMgCDYCAAsgBUECdCAEakGMgNAAaiAKNgIADAILIAtBfmouAQAiA0EASgRAIAsgAzsBACADQQdsIgVBAnQgBGpB9P/PAGoiAyADKAIAQQFqNgIAIAVBAnQgBGpB+P/PAGoiAyAIIAMoAgBqNgIAIAVBAnQgBGpB/P/PAGoiAyAKIAMoAgBqNgIAIAVBAnQgBGpBhIDQAGoiAygCACAITg0CIAMgCDYCAAUgAEH//wFKDQYgCyAAQQFqIgM7AQAgBEGQgMgAaiAAQQJ0aiADQRB0QRB1NgIAIARBkIDQAGogAEEHbCIAQQJ0akEBNgIAIABBAnQgBGpBlIDQAGogCDYCACAAQQJ0IARqQZiA0ABqIAo2AgAgAEECdCAEakGcgNAAaiAINgIAIABBAnQgBGpBoIDQAGogCDYCACAAQQJ0IARqQaSA0ABqIAo2AgAgAEECdCAEakGogNAAaiAKNgIAIAMhAAsMAQsgBQRAAkAgA0ECdCAEakGMgMgAaigCACIDIAdBAnQgBGpBjIDIAGooAgAiB0oEQCALIAc7AQAgBiEFQQAhCQNAIAkgAE4EQCAHIQMMAwsgAyAFKAIARgRAIAUgBzYCAAsgBUEEaiEFIAlBAWohCQwAAAsABSALIAM7AQAgAyAHSARAIAYhBUEAIQkDQCAJIABODQMgByAFKAIARgRAIAUgAzYCAAsgBUEEaiEFIAlBAWohCQwAAAsACwsLIANBEHRBEHVBB2wiBUECdCAEakH0/88AaiIDIAMoAgBBAWo2AgAgBUECdCAEakH4/88AaiIDIAggAygCAGo2AgAgBUECdCAEakH8/88AaiIDIAogAygCAGo2AgAgBUECdCAEakGMgNAAaiAKNgIADAELIAtBfmouAQAiBUEATARAIAsgAzsBACADQQdsIgVBAnQgBGpB9P/PAGoiAyADKAIAQQFqNgIAIAVBAnQgBGpB+P/PAGoiAyAIIAMoAgBqNgIAIAVBAnQgBGpB/P/PAGoiAyAKIAMoAgBqNgIAIAVBAnQgBGpBgIDQAGoiAygCACAISgRAIAMgCDYCAAsgBUECdCAEakGMgNAAaiAKNgIADAELAkAgA0ECdCAEakGMgMgAaigCACIDIAVBAnQgBGpBjIDIAGooAgAiB0oEQCALIAc7AQAgBiEFQQAhCQNAIAkgAE4EQCAHIQMMAwsgAyAFKAIARgRAIAUgBzYCAAsgBUEEaiEFIAlBAWohCQwAAAsABSALIAM7AQAgAyAHSARAIAYhBUEAIQkDQCAJIABODQMgByAFKAIARgRAIAUgAzYCAAsgBUEEaiEFIAlBAWohCQwAAAsACwsLIANBEHRBEHVBB2wiBUECdCAEakH0/88AaiIDIAMoAgBBAWo2AgAgBUECdCAEakH4/88AaiIDIAggAygCAGo2AgAgBUECdCAEakH8/88AaiIDIAogAygCAGo2AgALBSALQQA7AQALIA1BAWohDSAMQQFqIQwgCEEBaiEIIAtBAmohCwwBCwsgDUECaiENIAxBAmohDCAKQQFqIQogACEFIAtBBGohAwwBCwtBAEEDQailASAOED1BfwwBCyAEQQxqIQ1BASEAQQEhBwNAIAcgBUwEQCAHIAYoAgAiDEYEQCAAQQFqIQMFIAAhAyAMQQJ0IARqQYyAyABqKAIAIQALIAYgADYCACADIQAgB0EBaiEHIAZBBGohBgwBCwsgBCAAQX9qIgY2AgggBgR/IA1BACAGQQJ0EEUaIARBkIAoakEAIAZBBHQQRRpBACEDA0AgAyAGSARAIARBjIAIaiADQQJ0IgBBAnRqIAE2AgAgBEGMgAhqIABBAXJBAnRqQQA2AgAgBEGMgAhqIABBAnJBAnRqIAI2AgAgBEGMgAhqIABBA3JBAnRqQQA2AgAgA0EBaiEDDAELC0EAIQMDQCADIAVIBEAgBEEMaiAEQZCAyABqIANBAnRqKAIAQX9qIgJBAnRqIgAgBEGQgNAAaiADQQdsIgZBAnRqKAIAIAAoAgBqNgIAIARBkIAoaiACQQF0IgFBA3RqIgAgACsDACAGQQJ0IARqQZSA0ABqKAIAt6A5AwAgBEGQgChqIAFBAXJBA3RqIgAgACsDACAGQQJ0IARqQZiA0ABqKAIAt6A5AwAgBEGMgAhqIAJBAnQiAkECdGoiASgCACAGQQJ0IARqQZyA0ABqKAIAIgBKBEAgASAANgIACyAEQYyACGogAkEBckECdGoiASgCACAGQQJ0IARqQaCA0ABqKAIAIgBIBEAgASAANgIACyAEQYyACGogAkECckECdGoiASgCACAGQQJ0IARqQaSA0ABqKAIAIgBKBEAgASAANgIACyAEQYyACGogAkEDckECdGoiASgCACAGQQJ0IARqQaiA0ABqKAIAIgBIBEAgASAANgIACyADQQFqIQMMAQsLIAQoAgghAkEAIQMDfyADIAJIBH8gBEGQgChqIANBAXQiAUEDdGoiACAAKwMAIARBDGogA0ECdGooAgC3IhSjOQMAIARBkIAoaiABQQFyQQN0aiIAIAArAwAgFKM5AwAgA0EBaiEDDAEFQQALCwVBAAsLIRMgDiQGIBMLUwECfyMGIQIjBkEQaiQGIAIgACgCADYCAANAIAIoAgBBA2pBfHEiACgCACEDIAIgAEEEajYCACABQX9qIQAgAUEBSwRAIAAhAQwBCwsgAiQGIAMLxhQDEX8DfgF8IwYhCSMGQaACaiQGIAAoAkxBf0oEf0EBBUEACxogCUGIAmohDSAJQYQCaiESIAlBkAJqIRMgASwAACILBEACQAJAAkACQAJAA0ACQCALQf8BcRCyAQRAA0AgAUEBaiIDLQAAELIBBEAgAyEBDAELCyAAQgAQggEDQCAAKAIEIgMgACgCaEkEfyAAIANBAWo2AgQgAy0AAAUgABBUCxCyAQ0ACyAAKAJoBEAgACAAKAIEQX9qIgs2AgQFIAAoAgQhCwsgCyAAKAIIa6wgFCAAKQN4fHwhFAUCQCABLAAAQSVGIgcEQAJAAn8CQAJAIAFBAWoiBCwAACIDQSVrDgYDAQEBAQABC0EAIQogAUECagwBCyADQf8BcRCKAQRAIAEsAAJBJEYEQCACIAQtAABBUGoQkwUhCiABQQNqDAILCyACKAIAQQNqQXxxIgEoAgAhCiACIAFBBGo2AgAgBAsiAS0AABCKAQRAQQAhBANAIAEtAAAgBEEKbEFQamohBCABQQFqIgEtAAAQigENAAsFQQAhBAsgAUEBaiEHIAEsAAAiCEHtAEYEf0EAIQYgAUECaiEBIAciAywAACEIQQAhBSAKQQBHBSABIQMgByEBQQALIQsCQAJAAkACQAJAAkACQCAIQRh0QRh1QcEAaw46BQ4FDgUFBQ4ODg4EDg4ODg4OBQ4ODg4FDg4FDg4ODg4FDgUFBQUFAAUCDgEOBQUFDg4FAwUODgUOAw4LQX5BfyABLAAAQegARiIHGyEIIANBAmogASAHGyEBDAULQQNBASABLAAAQewARiIHGyEIIANBAmogASAHGyEBDAQLQQMhCAwDC0EBIQgMAgtBAiEIDAELQQAhCCADIQELQQEgCCABLQAAIgdBL3FBA0YiAxshDiAAAn8CQAJAAkACQCAHQSByIAcgAxsiDEH/AXEiB0EYdEEYdUHbAGsOFAEDAwMDAwMDAAMDAwMDAwMDAwMCAwsgBEEBIARBAUobDAMLIAQMAgsgCiAOIBQQlAMMBAsgAEIAEIIBA0AgACgCBCIDIAAoAmhJBH8gACADQQFqNgIEIAMtAAAFIAAQVAsQsgENAAsgACgCaARAIAAgACgCBEF/aiIINgIEBSAAKAIEIQgLIAggACgCCGusIBQgACkDeHx8IRQgBAsiEawiFhCCASAAKAIEIgMgACgCaCIESQRAIAAgA0EBajYCBAUgABBUQQBIDQggACgCaCEECyAEBEAgACAAKAIEQX9qNgIECwJAAkACQAJAAkACQAJAAkAgB0EYdEEYdUHBAGsOOAUHBwcFBQUHBwcHBwcHBwcHBwcHBwcHAQcHAAcHBwcHBQcAAwUFBQcEBwcHBwcCAQcHAAcDBwcBBwsgDEEQckHzAEYEQCAJQX9BgQIQRRogCUEAOgAAIAxB8wBGBEAgCUEAOgAhIAlBADYBCiAJQQA6AA4LBQJAIAkgAUEBaiIHLAAAQd4ARiIDIgRBgQIQRRogCUEAOgAAAkACQAJAIAFBAmogByADGyIBLAAAQS1rIgMEQCADQTBGBEAMAgUMAwsACyAJIARBAXMiCDoALiABQQFqIQEMAgsgCSAEQQFzIgg6AF4gAUEBaiEBDAELIARBAXMhCAsDQAJAAkAgASwAACIEDl4TAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEDAQsgAUEBaiIDLAAAIgQiB0EAIAdB3QBHG0UEQEEtIQQMAQsgAUF/ai0AACIBIARB/wFxSAR/A38gAUEBaiIBIAlqIAg6AAAgASADLAAAIgdB/wFxSQ0AIAMhASAHCwUgAyEBIAQLIQQLIARB/wFxQQFqIAlqIAg6AAAgAUEBaiEBDAAACwALCyARQQFqQR8gDEHjAEYiDBshBCALQQBHIRAgDkEBRiIRBEAgEARAIARBAnQQRCIFRQRAQQAhBkEAIQUMEQsFIAohBQsgDUEANgIAIA1BADYCBEEAIQYDQAJAIAVFIQcDQANAAkAgACgCBCIDIAAoAmhJBH8gACADQQFqNgIEIAMtAAAFIAAQVAsiA0EBaiAJaiwAAEUNAyATIAM6AAACQAJAIBIgE0EBIA0Q1wFBfmsOAgEAAgtBACEGDBULDAELCyAHRQRAIAZBAnQgBWogEigCADYCACAGQQFqIQYLIBAgBCAGRnFFDQALIAUgBEEBdEEBciIEQQJ0EOgBIgMEQCADIQUMAgVBACEGDBILAAsLIA0EfyANKAIARQVBAQsEfyAGIQQgBSEDQQAFQQAhBgwQCyEGBQJAIBAEQCAEEEQiBkUEQEEAIQZBACEFDBILQQAhBQNAA0AgACgCBCIDIAAoAmhJBH8gACADQQFqNgIEIAMtAAAFIAAQVAsiA0EBaiAJaiwAAEUEQCAFIQRBACEDQQAhBQwECyAFIAZqIAM6AAAgBUEBaiIFIARHDQALIAYgBEEBdEEBciIEEOgBIgMEQCADIQYMAQVBACEFDBMLAAALAAsgCkUEQANAIAAoAgQiBSAAKAJoSQR/IAAgBUEBajYCBCAFLQAABSAAEFQLQQFqIAlqLAAADQBBACEEQQAhBkEAIQNBACEFDAIACwALQQAhBAN/IAAoAgQiBSAAKAJoSQR/IAAgBUEBajYCBCAFLQAABSAAEFQLIgVBAWogCWosAAAEfyAEIApqIAU6AAAgBEEBaiEEDAEFQQAhA0EAIQUgCgsLIQYLCyAAKAJoBEAgACAAKAIEQX9qIgg2AgQFIAAoAgQhCAsgACkDeCAIIAAoAghrrHwiFVAgDEEBcyAVIBZRckVyDQsgEARAIBEEQCAKIAM2AgAFIAogBjYCAAsLIAxFBEAgAwRAIARBAnQgA2pBADYCAAsgBkUEQEEAIQYMCAsgBCAGakEAOgAACwwGC0EQIQQMBAtBCCEEDAMLQQohBAwCC0EAIQQMAQsgACAOQQAQkgMhFyAAKQN4QgAgACgCBCAAKAIIa6x9UQ0GIAoEQAJAAkACQCAODgMAAQIFCyAKIBe2OAIADAQLIAogFzkDAAwDCyAKIBc5AwAMAgsMAQsgACAEQQBCfxCTAyEVIAApA3hCACAAKAIEIAAoAghrrH1RDQUgDEHwAEYgCkEAR3EEQCAKIBU+AgAFIAogDiAVEJQDCwsgDyAKQQBHaiEPIAAoAgQgACgCCGusIBQgACkDeHx8IRQMAgsLIABCABCCASAAKAIEIgMgACgCaEkEfyAAIANBAWo2AgQgAy0AAAUgABBUCyEDIAMgASAHaiIBLQAARw0EIBRCAXwhFAsLIAFBAWoiASwAACILDQEMBgsLDAMLIAAoAmgEQCAAIAAoAgRBf2o2AgQLIANBf0ogD3INA0EAIQsMAQsgD0UNAAwBC0F/IQ8LIAsEQCAGEDggBRA4CwsLIAkkBiAPCwsAIAAgASACEIwFC3kBBX8gACgCBCEFIAAoAggiBiABKAIERgR/IAAoAgAhAAN/IAIgBUgEf0EAIQMgASgCACEEA0AgAyAGSARAIAAgACsDACAEKwMAoTkDACADQQFqIQMgBEEIaiEEIABBCGohAAwBCwsgAkEBaiECDAEFQQALCwVBfwsLLwECfyAAEKsCIgEoAgA2AjggASgCACICBEAgAiAANgI0CyABIAA2AgBBqMUDEA4L6wIBB38jBiEDIwZBMGokBiADQRhqIQQgA0EIaiEFIANBKGohBkH6/QIgASwAABC/AQRAQZgJEEQiAgRAIAJBAEGQARBFGgJ/IAFBKxC/AUUhCCABLAAAIQEgCAsEQCACQQhBBCABQfIARhs2AgALIAFB4QBGBEAgAyAANgIAIANBAzYCBEHdASADEBkiAUGACHFFBEAgBSAANgIAIAVBBDYCBCAFIAFBgAhyNgIIQd0BIAUQGRoLIAIgAigCAEGAAXIiATYCAAUgAigCACEBCyACIAA2AjwgAiACQZgBajYCLCACQYAINgIwIAJBfzoASyABQQhxRQRAIAQgADYCACAEQZOoATYCBCAEIAY2AghBNiAEEDNFBEAgAkEKOgBLCwsgAkECNgIgIAJBATYCJCACQQE2AiggAkECNgIMQejEAygCAEUEQCACQX82AkwLIAIQlwUFQQAhAgsFQaTFA0EcNgIACyADJAYgAgtwAQJ/IABBKxC/AUUhASAALAAAIgJB8gBHQQIgARsiASABQYABciAAQfgAEL8BRRsiASABQYCAIHIgAEHlABC/AUUbIgAgAEHAAHIgAkHyAEYbIgBBgARyIAAgAkH3AEYbIgBBgAhyIAAgAkHhAEYbC/gBAgZ/AXwgACgCBCIHQQFIIAAoAggiA0EBSHIEf0F/BSADIAEoAgRGBH8DQCACIANHBEAgASgCACACQQN0akQAAAAAAAAAADkDACACQQFqIQIMAQsLIAAoAgAhAANAIAUgB0cEQEEAIQYgASgCACEEIAAhAgNAIAMgBkcEQCAEIAIrAwAgBCsDAKA5AwAgBkEBaiEGIARBCGohBCACQQhqIQIMAQsLIANBA3QgAGohACAFQQFqIQUMAQsLIAe3IQhBACEAA38gACADRgR/QQAFIAEoAgAgAEEDdGoiAiACKwMAIAijOQMAIABBAWohAAwBCwsFQX8LCwvsAgELfyAAKAIIIAAoAgBBotrv1wZqIgYQsQEhBCAAKAIMIAYQsQEhBSAAKAIQIAYQsQEhAyAEIAFBAnZJBH8gBSABIARBAnRrIgdJIAMgB0lxBH8gAyAFckEDcQR/QQAFAn8gBUECdiEJAn8gA0ECdiENQQAhBQNAAkAgCSAFIARBAXYiB2oiC0EBdCIMaiIDQQJ0IABqKAIAIAYQsQEhCEEAIANBAWpBAnQgAGooAgAgBhCxASIDIAFJIAggASADa0lxRQ0DGkEAIAAgAyAIamosAAANAxogAiAAIANqELMBIgNFDQAgA0EASCEDQQAgBEEBRg0DGiAFIAsgAxshBSAHIAQgB2sgAxshBAwBCwsgDSAMaiICQQJ0IABqKAIACyAGELEBIQQgAkEBakECdCAAaigCACAGELEBIgIgAUkgBCABIAJrSXEEf0EAIAAgAmogACACIARqaiwAABsFQQALCwsFQQALBUEACws+AQF/IAAoAkQEQCAAKAKEASIBBEAgASAAKAKAATYCgAELIAAoAoABIgAEfyAAQYQBagVBlIoBCyABNgIACwvqAgIDfwF8IAAoAgQiBiAAKAIIIgUgBiAFSBshBCAGQQJIIAVBAkhyBEBBfyEABSABKAIIIAVGBEAgASgCBCAERgRAIAIoAgQgBEYEQCADKAIEIAVGBEAgABDfBSIEBEACQCAEIAMQmgVBAEgEQCAEEElBfyEADAELIAQgAxCWBUEASARAIAQQSUF/IQAMAQsgBrefIQcgBSAGbCEDQQAhAANAIAAgA0gEQCAEKAIAIABBA3RqIgUgBSsDACAHozkDACAAQQFqIQAMAQsLIAQgASACEJEFIQAgBBBJIAIoAgQhA0QAAAAAAAAAACEHQQAhAQNAIAEgA0gEQCAHIAIoAgAgAUEDdGorAwCgIQcgAUEBaiEBDAELC0EAIQEDQCABIANIBEAgAigCACABQQN0aiIEIAQrAwAgB6M5AwAgAUEBaiEBDAELCwsFQX8hAAsFQX8hAAsFQX8hAAsFQX8hAAsFQX8hAAsLIAALBABCAAvhAQEEfyMGIQQjBkEgaiQGIAQgATYCACAEIAIgACgCMCIDQQBHazYCBCAEIAAoAiw2AgggBCADNgIMAkACQCAAKAI8IARBAiAEQRBqIgMQMRCsAgRAIANBfzYCAEF/IQIMAQUgAygCACIDQQFIBEAgAyECDAIFIAMgBCgCBCIGSwRAIAAgACgCLCIFNgIEIAAgBSADIAZrajYCCCAAKAIwBEAgACAFQQFqNgIEIAEgAkF/amogBSwAADoAAAsFIAMhAgsLCwwBCyAAIAAoAgAgAkEwcUEQc3I2AgALIAQkBiACCwYAQaTFAwtGAgF/AX4jBiEDIwZBEGokBiAAKAI8IAGnIAFCIIinIAJB/wFxIAMQHRCsAgR+IANCfzcDAEJ/BSADKQMACyEEIAMkBiAEC7cCAQd/IwYhBiMGQSBqJAYgBkEQaiEHIAYiAyAAKAIcIgQ2AgAgAyAAKAIUIARrIgU2AgQgAyABNgIIIAMgAjYCDEECIQQgAiAFaiEFIAMhAQJAAkADQCAAKAI8IAEgBCAHEDAQrAIEfyAHQX82AgBBfwUgBygCAAsiAyAFRwRAIANBAEgNAiABQQhqIAEgAyABKAIEIghLIgkbIgEgAyAIQQAgCRtrIgggASgCAGo2AgAgASABKAIEIAhrNgIEIAQgCUEfdEEfdWohBCAFIANrIQUMAQsLIAAgACgCLCIBIAAoAjBqNgIQIAAgATYCHCAAIAE2AhQMAQsgAEEANgIQIABBADYCHCAAQQA2AhQgACAAKAIAQSByNgIAIARBAkYEf0EABSACIAEoAgRrCyECCyAGJAYgAgsOACAAKAI8EBhB//8DcQumAgECfwJAAkAgACgCFCIBQbN+akECTw0AIABBQGsoAgANACAAKAKMASAAKAJ0SQRAIAAoAgAiAUHFADYCFCABKAIAIQEgACABQf8BcUGsA2oRAQALIAAoArwDKAIEIQEgACABQf8BcUGsA2oRAQAgAEHSATYCFAwBCwJAAkAgAUHPAWsOBAABAQIBCyAAQdIBNgIUDAELIAAoAgAiAkEVNgIUIAIgATYCGCAAKAIAKAIAIQEgACABQf8BcUGsA2oRAQALIAAoAswDIgEoAhRFBEACQANAAkAgASgCACEBIAAgAUH/AHFBCGoRAABFDQAgACgCzAMiASgCFEUNAQwCCwtBAA8LCyAAKAIYKAIYIQEgACABQf8BcUGsA2oRAQAgABCdA0EBC/0GAQR/AkACQAJAAkACQAJAIAAoAhQiAUHIAWsOCwABAwICAgICAgQCBAsgAEHMA2oiASgCACgCBCECIAAgAkH/AXFBrANqEQEAIAAoAhgoAgghAiAAIAJB/wFxQawDahEBACAAQckBNgIUDAQLIABBzANqIQEMAwsgACgCzAMoAgAhASAAIAFB/wBxQQhqEQAADwtBAQ8LIAAoAgAiAkEVNgIUIAIgATYCGCAAKAIAKAIAIQEgACABQf8BcUGsA2oRAQBBAA8LIAEoAgAoAgAhASAAIAFB/wBxQQhqEQAAIgFBAUcEQCABDwsCQAJAAkACQAJAIAAoAiQiAUEBaw4EAAMBAgMLIAEhAgwDCyAAKALYASIDKAIAIQEgAygCsAEiAkEDRiABQQFGIgQgAygCWCIDQQJGcXEEf0EDIQJBAgUgBCADQSJGcSACQSNGcQR/QQchAkECBSABQdIARiADQccARnEgAkHCAEZxBH9BAiECQQIFIAFB8gBGIANB5wBGcSACQeIARnEEf0EGIQJBAgUgACgCnAIEf0EDIQJBAgUgACgCqAJFBEAgACgCACIEIAE2AhggBCADNgIcIAQgAjYCICAEQfEANgIUIAQoAgQhASAAQQEgAUE/cUGyBWoRAwBBAiEBQQMhAgwICwJAAkACQCAALACsAiIBDgIAAQILQQIhAUECIQIMCQtBAiEBQQMhAgwICyAAKAIAIgJB9AA2AhQgAiABQf8BcTYCGCAAKAIAKAIEIQEgAEF/IAFBP3FBsgVqEQMAQQIhAUEDIQIMBwsLCwsLIQEMAgsgACgCqAIEfwJAAkACQCAALACsAiIBDgMAAgECC0EEIQFBBCECDAQLQQQhAUEFIQIMAwsgACgCACICQfQANgIUIAIgAUH/AXE2AhggACgCACgCBCEBIABBfyABQT9xQbIFahEDAEEEIQFBBSECDAIFQQQhAkEECyEBDAELQQAhAUEAIQILIAAgAjYCKCAAIAE2AiwgACAAKAKsAyIBNgIwIAAgATYCNCAARAAAAAAAAPA/OQM4IABBQGtBADYCACAAQQA2AkQgAEEANgJIIABBATYCTCAAQQE2AlAgAEEANgJUIABBAjYCWCAAQQE2AlwgAEGAAjYCYCAAQQA2AogBIABBADYCZCAAQQA2AmggAEEANgJsIABBygE2AhRBAQuNAQECfyAAKAIUIgJBfnFByAFHBEAgACgCACIDQRU2AhQgAyACNgIYIAAoAgAoAgAhAiAAIAJB/wFxQawDahEBAAsCQAJAAkAgABClBSICQQFrDgIAAQILQQEPCyABBEAgACgCACIBQTU2AhQgASgCACEBIAAgAUH/AXFBrANqEQEACyAAEJ0DQQIPCyACCwcAIAAQngMLnwIBAn8gAEEANgIEIAFB2gBHBEAgACgCACIDQQ02AhQgA0HaADYCGCAAKAIAIAE2AhwgACgCACgCACEBIAAgAUH/AXFBrANqEQEACyACQegDRwRAIAAoAgAiAUEWNgIUIAFB6AM2AhggACgCACACNgIcIAAoAgAoAgAhASAAIAFB/wFxQawDahEBAAsCfyAAIQQgACgCACECIAAoAgwhAyAAQQRqQQBB5AMQRRogACACNgIAIAAgAzYCDCAAQQE2AhAgBAsQwgUgAEEANgIIIABBADYCGCAAQQA2ArgCIABCADcCpAEgAEIANwKsASAAQgA3ArQBIABCADcCvAEgAEIANwLEASAAQgA3AswBIAAQuAUgABCQBiAAQcgBNgIUCxUAIAAoAgAiAEEANgJsIABBADYCFAvpAgEKfyMGIQYjBkEwaiQGIAZBCGohBAJAAkACfyAAKAIAIgIoAhQiA0EASgRAIAMgAigCdEwEQCACKAJwIANBAnRqDAILCyACKAJ4IgVFDQEgAyACKAJ8IgBIDQEgAyACKAKAAUoNASADIABrQQJ0IAVqCygCACIFRQ0ADAELIAIgAzYCGCACKAJwKAIAIQULIAUhAAJAAkADQAJAIABBAWohAwJAIAAsAAAiAARAIABBJUYEQAwFBQwCCwALDAELIAMhAAwBCwsMAQsgAywAAEHzAEYEQCAGIAJBGGo2AgAgASAFIAYQvAEgBiQGDwsLIAIoAhwhByACKAIgIQggAigCJCEJIAIoAighCiACKAIsIQsgAigCMCEDIAIoAjQhACAEIAIoAhg2AgAgBCAHNgIEIAQgCDYCCCAEIAk2AgwgBCAKNgIQIAQgCzYCFCAEIAM2AhggBCAANgIcIAEgBSAEELwBIAYkBgtOAQN/IwYhASMGQdABaiQGIAAoAgAoAgwhAiAAIAEgAkE/cUGyBWoRAwACf0GkiAEoAgAhAyABQcgBaiICIAE2AgAgAwsgAhCLBSABJAYLeQEBfyAAKAIAIQIgAUEATgRAIAIoAmggAUgEQA8LIAIoAgghASAAIAFB/wFxQawDahEBAA8LAkACQCACKAJsIgFFDQAgAigCaEECSg0ADAELIAIoAgghASAAIAFB/wFxQawDahEBACACKAJsIQELIAIgAUEBajYCbAsmAQF/IAAoAgAoAgghASAAIAFB/wFxQawDahEBACAAEJ4DQQEQAQtlACAAQYwBNgIAIABBNTYCBCAAQY0BNgIIIABBNjYCDCAAQY4BNgIQIABBADYCaCAAQQA2AmwgAEEANgIUIABBgBg2AnAgAEH+ADYCdCAAQQA2AnggAEEANgJ8IABBADYCgAEgAAsrAQF/IAAoAgQoAgAhASAAQQBBhAEgAUE/cUHKAWoRBAAiAEEANgKAASAACysBAX8gACgCBCgCACEBIABBAEGYAiABQT9xQcoBahEEACIAQQA2ApQCIAALtwYBBn8gAiADaiEEAkACQAJAAkAgAkENSwRAIAEsAABBygBGBEAgASwAAUHGAEcNAiABLAACQckARw0CIAEsAANBxgBHDQIgASwABA0CIABBATYCnAIgACABLAAFIgc6AKACIAAgASwABiIIOgChAiAAIAEsAAciCToAogIgACABLQAJIAEtAAhBCHRyIgY7AaQCIAAgAS0ACyABLQAKQQh0ciIDOwGmAiAHQX9qQRh0QRh1Qf8BcUECTgRAIAAoAgAiAkH6ADYCFCACIAdB/wFxNgIYIAAoAgAgAC0AoQI2AhwgACgCACgCBCECIABBfyACQT9xQbIFahEDACAALACgAiEHIAAsAKECIQggAC4BpAIhBiAALgGmAiEDIAAsAKICIQkLIAAhAiAAKAIAIgUgB0H/AXE2AhggBSAIQf8BcTYCHCAFIAZB//8DcTYCICAFIANB//8DcTYCJCAFIAlB/wFxNgIoIAVB2QA2AhQgBSgCBCEDIAJBASADQT9xQbIFahEDACABLAAMIgYgASwADSIDckH/AXEEQCAAKAIAIgNB3AA2AhQgAyABLQAMNgIYIAAoAgAgAS0ADTYCHCAAKAIAKAIEIQMgAkEBIANBP3FBsgVqEQMAIAEsAAwhBiABLAANIQMLIAZB/wFxQQNsIANB/wFxbCAEQXJqIgNGBEAPCyAAKAIAIgFB2gA2AhQgASADNgIYIAAoAgAoAgQhACACQQEgAEE/cUGyBWoRAwAPCwUgAkEFSwRAIAEsAABBygBGDQILCwwBCyABLAABQcYARgRAIAEsAAJB2ABGBEAgASwAA0HYAEYEQCABLAAERQRAAkACQAJAAkAgASwABUEQaw4EAAEDAgMLIAAoAgAiAUHuADYCFAwICyAAKAIAIgFB7wA2AhQMBwsgACgCACIBQfAANgIUDAYLIAAoAgAiAkHbADYCFCACIAEtAAU2AhggACgCACAENgIcDAYLCwsLCyAAKAIAIgFBzwA2AhQgASAENgIYIAAoAgAoAgQhASAAQQEgAUE/cUGyBWoRAwAPCyABIAQ2AhgLIAAoAgAoAgQhASAAQQEgAUE/cUGyBWoRAwALygUBCX8jBiECIwZBEGokBgJAIAAoAhgiBCgCBCIDRQRAIAQoAgwhAyAAIANB/wBxQQhqEQAARQ0BIAQoAgQhAwsgBCgCACIGQQFqIQEgBi0AACEFIANBf2oiA0UEQCAEKAIMIQMgACADQf8AcUEIahEAAEUNASAEKAIAIQEgBCgCBCEDCyADQX9qIQMgAUEBaiEGQQ4gAS0AACAFQf8BcUEIdHIiAUF+aiIHQQAgAUECSxsgAUEPSxsiBQRAAkBBACEBA0ACQCADRQRAIAQoAgwhAyAAIANB/wBxQQhqEQAARQ0BIAQoAgQhAyAEKAIAIQYLIAEgAmogBiwAADoAACADQX9qIQMgBkEBaiEGIAFBAWoiASAFSQ0BDAILCwwCCwsgByAFayEIAkACQAJAIAAoArgDIgFB4AFrIgkEQCAJQQ5GBEAMAgUMAwsACyAAIAIgBSAIELEFDAILIAIsAABBwQBGIAVBC0txBEAgAiwAAUHkAEYEQCACLAACQe8ARgRAIAIsAANB4gBGBEAgAiwABEHlAEYEQCACLQAIIAItAAdBCHRyIQcgAi0ACiACLQAJQQh0ciEJIAIsAAshBSAAKAIAIgEgAi0ABiACLQAFQQh0cjYCGCABIAc2AhwgASAJNgIgIAEgBUH/AXE2AiQgAUHOADYCFCABKAIEIQEgAEEBIAFBP3FBsgVqEQMAIABBATYCqAIgACAFOgCsAgwGCwsLCwsgACgCACIBQdAANgIUIAEgBzYCGCAAKAIAKAIEIQEgAEEBIAFBP3FBsgVqEQMADAELIAAoAgAiBUHGADYCFCAFIAE2AhggACgCACgCACEBIAAgAUH/AXFBrANqEQEACyAEIAY2AgAgBCADNgIEIAhBAEwEQCACJAZBAQ8LIAAoAhgoAhAhAyAAIAggA0E/cUGyBWoRAwAgAiQGQQEPCyACJAZBAAuMAgEGfyAAKAIYIgIoAgQiAUUEQCACKAIMIQEgACABQf8AcUEIahEAAAR/IAIoAgQFQQAPCyEBCyACKAIAIgNBAWohBCADLQAAIQMgAUF/aiIBRQRAIAIoAgwhASAAIAFB/wBxQQhqEQAABH8gAigCACEEIAIoAgQFQQAPCyEBCyAELQAAIANB/wFxQQh0ciIGQX5qIQUgACgCACIDQd0ANgIUIAMgACgCuAM2AhggACgCACAFNgIcIAAoAgAoAgQhAyAAQQEgA0E/cUGyBWoRAwAgAiAEQQFqNgIAIAIgAUF/ajYCBCAGQQJNBEBBAQ8LIAAoAhgoAhAhASAAIAUgAUE/cUGyBWoRAwBBAQuBAQEGfyAAKAIEIgUgASgCBEYEfyAAKAIIIgQgASgCCEYEfwN/IAIgBUgEfyACIARsIQZBACEDA0AgAyAESARAIAAoAgAgAyAGaiIHQQN0aiABKAIAIAdBA3RqKwMAOQMAIANBAWohAwwBCwsgAkEBaiECDAEFQQALCwVBfwsFQX8LC6kBAQJ/IAAoArgDIgFFBEAgABCxAgR/IAAoArgDBUEADwshAQsgACgC0AMoAhQiAkHQAWogAUYEQCAAKAIAIgFB5AA2AhQgASACNgIYIAAoAgAoAgQhASAAQQMgAUE/cUGyBWoRAwAgAEEANgK4AwUgACgCGCgCFCEBIAAgAiABQT9xQYoBahECAEUEQEEADwsLIAAoAtADIgAgACgCFEEBakEHcTYCFEEBC6RUASl/IwYhKSMGQYACaiQGICkhCiAAKAK4AyEBA0ACQCABRQRAAn8gACgC0AMoAgwEQCAAELECRQRAQd4CIQEMBAsgACgCuAMMAQsgACgCGCIGKAIEIgFFBEAgBigCDCEBIAAgAUH/AHFBCGoRAABFBEBB3gIhAQwECyAGKAIEIQELIAYoAgAiBEEBaiECIAQsAAAhAyABQX9qIgQEfyACBSAGKAIMIQEgACABQf8AcUEIahEAAEUEQEHeAiEBDAQLIAYoAgQhBCAGKAIACyEBIANB/wFxIQUgASwAACIHQf8BcSECIANBf0cgB0FYR3IEQCAAKAIAIgNBNzYCFCADIAU2AhggACgCACACNgIcIAAoAgAoAgAhAyAAIANB/wFxQawDahEBAAsgACACNgK4AyAGIAFBAWo2AgAgBiAEQX9qNgIEIAILIQELAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCABQQFrDv4BEBISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIDBAUICggICAgGBwgJCAgIEBAQEBAQEBACAQALEQwSEg4ODg4ODg4ODg4ODg4ODg4SEhISEhISEg0SEhISEg8SC0EZIQEMEwtBywAhAQwSCyAAKAIAIgFB6AA2AhQgASgCBCEBIABBASABQT9xQbIFahEDACAAKALQA0EMaiIBKAIABEAgACgCACIBQcAANgIUIAEoAgAhASAAIAFB/wFxQawDahEBACAAKALQA0EMaiEBCyAAQgA3AOgBIABCADcA8AEgAEKBgoSIkKD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AKAIAIQMgACADQf8BcUGsA2oRAQALIABBpAFqIAFBAnRqIgEoAgAiA0UEQCABIAAQrwUiAzYCAAsgBEF/aiEJAn8CfwJAAkACQAJAAkACQAJAAkACQCACQQBHIgsEfyAEQYEBTg0JIANBATsBACADQQE7AQIgA0EBOwEEIANBATsBBiADQQE7AQggA0EBOwEKIANBATsBDCADQQE7AQ4gA0EBOwEQIANBATsBEiADQQE7ARQgA0EBOwEWIANBATsBGCADQQE7ARogA0EBOwEcIANBATsBHiADQQE7ASAgA0EBOwEiIANBATsBJCADQQE7ASYgA0EBOwEoIANBATsBKiADQQE7ASwgA0EBOwEuIANBATsBMCADQQE7ATIgA0EBOwE0IANBATsBNiADQQE7ATggA0EBOwE6IANBATsBPCADQQE7AT4gA0FAa0EBOwEAIANBATsBQiADQQE7AUQgA0EBOwFGIANBATsBSCADQQE7AUogA0EBOwFMIANBATsBTiADQQE7AVAgA0EBOwFSIANBATsBVCADQQE7AVYgA0EBOwFYIANBATsBWiADQQE7AVwgA0EBOwFeIANBATsBYCADQQE7AWIgA0EBOwFkIANBATsBZiADQQE7AWggA0EBOwFqIANBATsBbCADQQE7AW4gA0EBOwFwIANBATsBciADQQE7AXQgA0EBOwF2IANBATsBeCADQQE7AXogA0EBOwF8IANBATsBfiAJQQF1BSAEQcEATg0JIANBATsBACADQQE7AQIgA0EBOwEEIANBATsBBiADQQE7AQggA0EBOwEKIANBATsBDCADQQE7AQ4gA0EBOwEQIANBATsBEiADQQE7ARQgA0EBOwEWIANBATsBGCADQQE7ARogA0EBOwEcIANBATsBHiADQQE7ASAgA0EBOwEiIANBATsBJCADQQE7ASYgA0EBOwEoIANBATsBKiADQQE7ASwgA0EBOwEuIANBATsBMCADQQE7ATIgA0EBOwE0IANBATsBNiADQQE7ATggA0EBOwE6IANBATsBPCADQQE7AT4gA0FAa0EBOwEAIANBATsBQiADQQE7AUQgA0EBOwFGIANBATsBSCADQQE7AUogA0EBOwFMIANBATsBTiADQQE7AVAgA0EBOwFSIANBATsBVCADQQE7AVYgA0EBOwFYIANBATsBWiADQQE7AVw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Bf2o2AgQgAEEANgK4AyAKJAZBAQ8FIAFBywBGBEAgACgCACIBQdcANgIUIAEoAgQhASAAQQEgAUE/cUGyBWoRAwAgAEEANgK4AyAKJAZBAg8FIAFBrgFGBEAMAwUgAUHeAkYNAwsLC0EADwsgCiQGQQALQQEBfyAAKALQAyEBIABBADYC2AEgAEEANgKQASAAQQA2ArgDIAFBADYCDCABQQA2AhAgAUEANgIYIAFBADYCpAELiQMBAX8gACgCBCgCACEBIAAgAEEAQawBIAFBP3FBygFqEQQAIgE2AtADIAFBiwE2AgAgAUHXADYCBCABQdgANgIIIAFB2QA2AhwgAUEANgJgIAFBADYCZCABQdkANgIkIAFBADYCaCABQdkANgIoIAFBADYCbCABQdkANgIsIAFBADYCcCABQdkANgIwIAFBADYCdCABQdkANgI0IAFBADYCeCABQdkANgI4IAFBADYCfCABQdkANgI8IAFBADYCgAEgAUFAa0HZADYCACABQQA2AoQBIAFB2QA2AkQgAUEANgKIASABQdkANgJIIAFBADYCjAEgAUHZADYCTCABQQA2ApABIAFB2QA2AlAgAUEANgKUASABQdkANgJUIAFBADYCmAEgAUEANgKcASABQdkANgJcIAFBADYCoAEgAUHaADYCICABQdoANgJYIAAoAtADIQEgAEEANgLYASAAQQA2ApABIABBADYCuAMgAUEANgIMIAFBADYCECABQQA2AhggAUEANgKkAQseACAAQQEQrgIgAEEAEK4CIAAoAgQQOCAAQQA2AgQL2QcBB38CQAJAIAIgA2oiCSABKAIESw0AIAEoAgwgA0kNACABKAIARQ0ADAELIAAoAgAiA0EXNgIUIAMoAgAhAyAAIANB/wFxQawDahEBAAsCQAJAIAEoAhgiAyACSw0AIAkgAyABKAIQaksNAAwBCyABKAIoRQRAIAAoAgAiA0HHADYCFCADKAIAIQMgACADQf8BcUGsA2oRAQALIAEoAiQEQCABKAIIQQd0IQogASgCGCEGIAEoAhAiBUEASgRAAkAgAUEwaiELIAEoAhQiAyAFIAMgBUgbIgUgASgCHCAGayIDIAUgA0gbIgUgASgCBCAGayIDIAUgA0gbIgNBAU4EQCAGIApsIQVBACEGA0AgASgCNCEHIAAgCyABKAIAIAZBAnR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BzABqIAMgAkF/akkbKAIACzYCHCABQQA2AhQgAUEANgIYQQMLoQEBBH8DQAJAAkACQCAAIAFqLAAAIgMEQCADQS5GBEAMAgUMAwsACwwCCyABIQILIAFBAWohAQwBCwsgACABaiEDQZy4ARBgQQJqIQQCfwJAIAIEfyACIARqQYACSgR/QX8FDAILBSABIARqQYACSgR/QX8FIANBLjoAACABIQIMAgsLDAELIAAgAkEBampBADoAACAAEGAgAGoQgQVBAAsaC9oDAQ9/IAAoAsQDIQsgACgCzAJBf2ohDAJAAkADQAJAIAAoApABIgIgACgCmAEiA04EQCACIANHDQEgACgClAEgACgCnAFLDQELIAAoAswDKAIAIQIgACACQf8AcUEIahEAAA0BDAILCwwBC0EADwsgACgCJEEASgRAIAAoAtgBIQIDQCACKAI0BEAgACgCBCgCICEDIAAgC0HIAGogBEECdGooAgAgAigCDCIFIAAoApwBbCAFQQAgA0EfcUGiAmoRCAAhDSAAKAKcASAMSQR/IAIoAgwFIAIoAiAgAigCDCIFEE4hAyADIAUgAxsLIQkgACgC2ANBBGogBEECdGooAgAhDiAJQQBKBEAgBEECdCABaigCACEGQQAhByACIgUiDygCHCEDA0AgAwR/QQAhAyAHQQJ0IA1qKAIAIQhBACEKA38gACACIAggBiADIA5BP3FBmgZqEQUAIAhBgAFqIQggAyAPKAIkaiEDIApBAWoiCiACKAIcIhBJDQAgEAsFQQALIQMgBSgCKEECdCAGaiEGIAdBAWoiByAJRw0ACwsLIAJB2ABqIQIgBEEBaiIEIAAoAiRIDQALCyAAIAAoApwBQQFqIgE2ApwBQQNBBCABIAAoAswCSRsLnQUBE38jBiETIwZBEGokBiATIQYgACgCxAMhBCAAKALUAkEASgRAQQAhAQNAIAAoAgQoAiAhBSAAQdgCaiABQQJ0aigCACIDKAIMIQIgAUECdCAGaiAAIARByABqIAMoAgRBAnRqKAIAIAAoApQBIAJsIAJBASAFQR9xQaICahEIADYCACABQQFqIgEgACgC1AJIDQALCyAEKAIYIgUgBCgCHCIBSARAAkAgBEEgaiEMIAQoAhQhAyAAKALoAiECA0ACQCADIAJJBEAgAyECA0AgACgC1AIiDUEASgRAQQA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DIQsgACgCJEEATARADwsgACgC2AEhAQNAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgASIIKAIoIAEoAiQiBEEIdGpBgQJrDpAeAB4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBYBIB0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAIgIBwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBUgAyAgIBsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAEICAgIBogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBQgIAUgICAgIBkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgBiAgICAgIBggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBMgICAfICAgICAgIBcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBIgICAgCCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBEgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBAgICAgICAMICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA8gICAgICAgDiALQQAhAkEEIQMMIAtBACECQQUhAwwfC0EAIQJBBiEDDB4LQQAhAkEHIQMMHQtBACECQQghAwwcC0EAIQJBCSEDDBsLQQAhAkEKIQMMGgtBACECQQshAwwZC0EAIQJBDCEDDBgLQQAhAkENIQMMFwtBACECQQ4hAwwWC0EAIQJBDyEDDBULQQAhAkEQIQMMFAtBACECQREhAwwTC0EAIQJBEiEDDBILQQAhAkETIQMMEQtBACECQRQhAwwQC0EAIQJBFSEDDA8LQQAhAkEWIQMMDgtBACECQRchAwwNC0EAIQJBGCEDDAwLQQAhAkEZIQMMCwtBACECQRohAwwKC0EAIQJBGyEDDAkLQQAhAkEcIQMMCAtBACECQR0hAwwHC0EAIQJBHiEDDAYLQQAhAkEfIQMMBQtBACECQSAhAwwEC0EAIQJBISEDDAMLQQAhAkEiIQMMAgsCQAJAAkACQCAAKAJIIgEOAwABAgMLIAEhAkEjIQMMBAsgASECQSQhAwwDCyABIQJBJSEDDAILIAAoAgAiAUExNgIUIAEoAgAhASAAIAFB/wFxQawDahEBAAwBCyAAKAIAIgFBBzYCFCABIAQ2AhggACgCACAIKAIoNgIcIAAoAgAoAgAhASAAIAFB/wFxQawDahEBAAsgC0EEaiAJQQJ0aiADNgIAIAgoAjQEQCALQSxqIAlBAnR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DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCAwsgDiASp0HgCWosAAAiAKw3AwAgAEEASARAIAJBfzYCACAERAAAAAAAAPC/OQMAQXwMBQsMAwsgDiASpyIAQeAIaiwAACIBrDcDACAGBEAgBiAAQaAJai0AADYCAAsgAUEASARAIAJBfzYCACAERAAAAAAAAPC/OQMAQXwMBAsMAgsgBSASQQAgDhC1AyIAQQBIBEAgAkF/NgIAIAREAAAAAAAA8L85AwBBfAwDCyAAQQBHIAZBAEdxBEAgBiA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BDGwQUSICNgIEIAAgAjYCACAAIAFBDGwgAmo2AggLC+cBAQd/IAIgAWtBDBA5IQMgACgCACIEIQcgAyAAKAIIIARrQQwQOUsEQCAAEM8DQdWq1aoBIANJBEAQAAUgACADIAAoAgggACgCAGtBDBA5IgRBAXQiBSAFIANJG0HVqtWqASAEQarVqtUASRsQjAggACABIAIgAxDQAwsFIAMgACgCBCAEa0EMEDkiBkshBSAGQQxsIAFqIAIgBRsiCCABayIGQQwQOSEJIAYEQCAEIAEgBhDnARoLIAUEQCAAIAggAiADIAAoAgQgACgCAGtBDBA5axDQAwUgACAJQQxsIAdqNgIECwsLyAEBAn8jBiEEIwZBEGokBiAEQQRqIQMgBCACNgIAIABByABqIgIgBBDoAwRAQRAQBSEAIANCADcCACADQQA2AgggA0Ho8AFB6PABEGAQfiAAIAMQhgIgAEGI8gBBBRAECyACIAQQqwghACADIAEoAgAiAjYCACADIAEoAgQiATYCBCABBH8gASABKAIEQQFqNgIEIAMoAgQFQQALIQEgAyAAKAIANgIAIAAgAjYCACADIAAoAgQ2AgQgACABNgIEIAMQlQEgBCQGC8MBAQV/IAAoAgAiAyEFIAIgAWsiBCAAKAIIIANrSwRAIAAQzwNB/////wcgBEkEQBAABSAAIAQgACgCCCAAKAIAayIDQQF0IgUgBSAESRtB/////wcgA0H/////A0kbEIsIIAAgASACIAQQzgMLBSAEIAAoAgQgA2siBkshAyABIAZqIAIgAxsiByABayIGBEAgBSABIAYQ5wEaCyADBEAgACAHIAIgACgCACAEIAAoAgRrahDOAwUgACAFIAZqNgIECwsLNgECfyAAKAIEIAAoAgAiA2siAiABSQRAIAAgASACaxCKCAUgAiABSwRAIAAgASADajYCBAsLC4kCAQh/IAIgAWtBFBA5IQMgACgCACIEIQcgAyAAKAIIIARrQRQQOUsEQCAAEIcIQcyZs+YAIANJBEAQAAUgACADIAAoAgggACgCAGtBFBA5IgRBAXQiBSAFIANJG0HMmbPmACAEQebMmTNJGxDWAyAAIAEgAiADEM0DCwUCQCADIAAoAgQgBGtBFBA5IgZLIQUgBkEUbCABaiACIAUbIgggAWsiBkEUEDkhCiAGBEAgBCABIAY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CCCEDDAAACwALIApBDGwgDmogBDYCBCAKQQFqIQoMAQsLDAELQQBBA0G52AIgDxA9QQEQAQtBACEEQQAhCAJAAkADQCAIIAxIBEAgASgCACgCCCIHIAhBDGxqKAIIIQVBACECAkACQANAIAIgC04NASACQQFqIQMgACgCACgCCCACQQxsaigCCCAFRwRAIAMhAgwBCwsgBEEBaiEEDAELIAggC2ogBGsiD0EMbCAOaiEJIA9BDGwgDmogBTYCCCAJIAhBDGwgB2ooAgQiB0EMbBBEIgM2AgAgA0UNA0EAIQUDQCAFIAdIBEAgCSgCACAFQQxsaiICIAEoAgAoAgggCEEMbGooAgAgBUEMbGoiAykCADcCACACIAMoAgg2AgggBUEBaiEFDAELCyAPQQxsIA5qIAc2AgQLIAhBAWohCAwBCwsMAQtBAEEDQbnYAiAQED1BARABCyAAKAIAIgJBCGoiAygCACIEBEBBACEDA0AgAyACKAIMSARAIANBDGwgBGooAgAQOCADQQFqIQMgACgCACIEIQIgBCgCCCEEDAELCyAEEDggACgCAEEIaiEDCyADIA42AgAgACgCACAGNgIMIAEQ/wMLQQAFQQBBA0GguAEgDRA9QX8LIREgDSQGIBELowEBAn8gACgCACIBBH8gASgCACICBEAgAigCACEBIAJBADYCACABBEAgARDrAyABEDgLIAIQOCAAKAIAIQELIAEoAhwiAgRAIAIQOCAAKAIAIQELIAEoAiQiAgRAIAIQOCAAKAIAIQELIAEoAjQiAgRAIAIQOCAAKAIAIQELIAEoAiwiAgR/IAIQOCAAKAIABSABCxA4IABBADYCAEEABUF/CxoLjAEBA38jBiEEIwZBEGokBkEBQbwgEI0CIgMEQEEEEFEiBRC7CCADIAU2AgAgAyAANgIEIANBATYCCCADIAE2AgwgAyACNgIQIANBATYCFCADQX82AhggA0IANwIcIANCADcCJCADQgA3AiwgA0IANwI0IAQkBiADDwVBAEEDQbnYAiAEED1BARABC0EAC8cBAgJ/B30CfyMGIQYjBkFAayQGIAAqAgwgACoCLCIMIAGUkyEJIAAqAiQiByAClCAAKgIUkyEKIAAqAiAiCCAClCAAKgIQkyELIAcgAZQgACoCBJMhByAIIAGUIAAqAgCTIQggACoCHCENIAw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Bf2oiADYCCCAABH8gBUEAIABBAnQQRRogBEGQgChqQQAgAEEEdBBFGkEAIQcDQCAHIABIBEAgBEGMgAhqIAdBAnQiBkECdGogATYCACAEQYyACGogBkEBckECdGpBADYCACAEQYyACGogBkECckECdGogAjYCACAEQYyACGogBkEDckECdGpBADYCACAHQQFqIQcMAQsLQQAhAQNAIAEgA0gEQCAEQQxqIARBkIDIAGogAUECdGooAgBBf2oiAkECdGoiByAEQZCA0ABqIAFBB2wiAEECdGooAgAgBygCAGo2AgAgBEGQgChqIAJBAXQiB0EDdGoiBiAGKwMAIABBAnQgBGpBlIDQAGooAgC3oDkDACAEQZCAKGogB0EBckEDdGoiByAHKwMAIABBAnQgBGpBmIDQAGooAgC3oDkDACAEQYyACGogAkECdCICQQJ0aiIHKAIAIABBAnQgBGpBnIDQAGooAgAiBkoEQCAHIAY2AgALIARBjIAIaiACQQFyQQJ0aiIHKAIAIABBAnQgBGpBoIDQAGooAgAiBkgEQCAHIAY2AgALIARBjIAIaiACQQJyQQJ0aiIHKAIAIABBAnQgBGpBpIDQAGooAgAiBkoEQCAHIAY2AgALIARBjIAIaiACQQNyQQJ0aiICKAIAIABBAnQgBGpBqIDQAGooAgAiAEgEQCACIAA2AgALIAFBAWohAQwBCwsgBCgCCCEBQQAhAAN/IAAgAUgEfyAEQZCAKGogAEEBdCICQQN0aiIDIAMrAwAgBEEMaiAAQQJ0aigCALciFaM5AwAgBEGQgChqIAJBAXJBA3RqIgIgAisDACAVozkDACAAQQFqIQAMAQVBAAsLBUEACwshFCAPJAYgFAthAQN/IwYhAyMGQRBqJAYgAyECQRQQRCIBRQRAQQBBA0G52AIgAhA9QQEQAQsgASAAIAFBCGogAUEMaiABQQRqIAFBEGoQswkiADYCACAARQRAIAEQOEEAIQELIAIkBiABCyAAIAEgAiADrSAErUIghoQgBSAGIABBA3FB6gZqESUACykBAX4gASACrSADrUIghoQgBCAAQQNxQaYDahEUACIFQiCIpxADIAWnC3YBA38gAAR/IAAoAgAiAgR/A0AgAigCACEDIAEgAigCBEgEQCABQQJ0IANqKAIAKAIAEDggACgCACgCACABQQJ0aigCABA4IAFBAWohASAAKAIAIQIMAQsLIAMQOCAAKAIAEDggAEEANgIAQQAFQX8LBUF/CxoLIAAgASACIAMgBCAFrSAGrUIghoQgAEEHcUGeA2oRFQALBgBBFhACCwYAQRUQAguZBgEJfyMGIQkjBkEwaiQGIAkhBkEIEEQiB0UEQEEAQQNBudgCIAYQPUEBEAELIAZBIGohCCAGQRhqIQIgBkEQaiEBIAZBCGohAwJAAkACQCAHQQRqIgRBBEEBIAAQYUEBRw0AIAQoAgAiBEEBSA0AIAcgBEECdBBEIgM2AgAgA0UEQEEAQQNBudgCIAEQPUEBEAELQQAhAQJAAkADQCABIARIBEAgAUECdCADakEQEEQiBTYCACAFRQ0CIAFBAWohAQwBCwsMAQtBAEEDQbnYAiACED1BARABC0EAIQECQAJAAkACQAJAAkACQANAAkAgASAETg0GIAFBAnQgA2oiAigCAEEEakEEQQEgABBhQQFHDQAgAigCAEEIakEEQQEgABBhQQFHDQIgAigCAEEMakEEQQEgABBhQQFHDQMgAigCACIFKAIEIAUoAghsEEQhBSACKAIAIAU2AgAgBUUNBCABQQFqIQEgAigCACIFKAIAQQEgBSgCBCAFKAIIbCAAEGEgAigCACICKAIEIAIoAghsRg0BDAULC0EAIQIDQCABIAJHBEAgAkECdCADaigCACgCABA4IAJBAWohAgwBCwtBACEBA0AgASAERg0GIAFBAnQgA2ooAgAQOCABQQFqIQEMAAALAAtBACECA0AgASACRwRAIAJBAnQgA2ooAgAoAgAQOCACQQFqIQIMAQsLQQAhAQNAIAEgBEYNBSABQQJ0IANqKAIAEDggAUEBaiEBDAAACwALQQAhAgNAIAEgAkcEQCACQQJ0IANqKAIAKAIAEDggAkEBaiECDAELC0EAIQEDQCABIARGDQQgAUECdCADaigCABA4IAFBAWohAQwAAAsAC0EAQQNBudgCIAgQPUEBEAEMAgtBACECA0AgASACRwRAIAJBAnQgA2ooAgAoAgAQOCACQQFqIQIMAQsLQQAhAQNAIAEgBEYNAiABQQJ0IANqKAIAEDggAUEBaiEBDAAACwALIAAQagwBCyADEDgMAgsMAgtBAEEDQbe0ASADED0LIAcQOCAAEGpBACEHCyAGJAYgBwsGAEETEAILBgBBEBACC4IGAQ5/IwYhAyMGQeAAaiQGIAAQYEEGahBEIghFBEBBAEEDQbnYAiADED1BARABCyADQcgAaiEJIANBQGshCiADQThqIQwgA0EwaiENIANBKGohAiADQSBqIQQgA0EYaiEBIANBEGohByADQdAAaiELIANBCGoiBiAANgIAIAZBgbQBNgIEIAhB/LMBIAYQvAEgCEGIuQEQsAEhBSAIEDggBQR/An9BCBBEIgZFBEBBAEEDQbnYAiABED1BARABCwJAAkAgBkEEaiIBQQRBASAFEGFBAUcNACABKAIAIgdBAUgNACACIAc2AgBBAEEBQdC0ASACED0gBiAHQQJ0IgQQRCICNgIAIAJFBEBBAEEDQbnYAiANED1BARABCyACQRAQRCIBNgIAIAFFBEBBAEEDQbnYAiAMED1BARABCyAFELUJIgFFBEAgCiAANgIAIApBgbQBNgIEQQBBAkHutAEgChA9IAIoAgAQOCACEDggBhA4IAUQ+QIgBRC8CQwDCyABKAIEQQFHBEAgCSAANgIAIAlBgbQBNgIEQQBBAkHutAEgCRA9IAIoAgAQOCACEDggBhA4IAEQOCAFEGpBAAwDCyACKAIAIgAgASgCCDYCBCAAIAEoAgw2AgggACABKAIQNgIMIAAgASgCADYCACABEDggBUEEIARrQQIQ9AFBASEEAkACQAJAA0ACQCAEIAdODQMgC0EEQQEgBRBhQQFHDQAgBEECdCACaiACKAIAIAsqAgAQxAkiADYCACAARQ0CIARBAWohBAwBCwtBACEBA0AgASAERg0DIAFBAnQgAmoiACgCACgCABA4IAAoAgAQOCABQQFqIQEMAAALAAtBACEBA0AgASAERg0CIAFBAnQgAmoiACgCACgCABA4IAAoAgAQOCABQQFqIQEMAAALAAsgBRBqIAYMAwsgAhA4DAELQQBBA0G3tAEgBBA9CyAGEDggBRBqQQALBSAHIAA2AgAgB0GBtAE2AgRBAEEDQYe0ASAHED1BAAshDiADJAYgDgsIAEEEEAJBAAsIAEECEAJBAAsPAEEBEAJEAAAAAAAAAAALDwBBABACRAAAAAAAAAAAC5wDAhF/AX0jBiEJIwZBEGokBiAAKAIEsiABlCAAKgIMIhOVELsBIQogACgCCLIgAZQgE5UQuwEhC0EQEEQiBUUEQEEAQQNBudgCIAkQPUEBEAELIAlBCGohAyAFIAo2AgQgBSALNgIIIAUgATgCDCAFIAogC2wQRCICNgIAIAJFBEBBAEEDQbnYAiADED1BARABCwNAIAYgC0gEQCAAKgIMIhMgBrKUIAGVELsBIQ8gEyAGQQFqIgaylCABlRC7ASEEIAAoAggiAyAEIAQgA0obIRBBACEHIAIhBANAIAcgCkgEQCAAKgIMIhMgB7KUIAGVELsBIREgEyAHQQFqIgeylCABlRC7ASECIAAoAgQiDiACIAIgDkobIRJBACECQQAhAyAPIQgDQCAIIBBIBEAgACgCACARIgwgCCAObGpqIQ0DQCAMIBJIBEAgAiANLQAAaiECIAxBAWohDCANQQFqIQ0gA0EBaiEDDAELCyAIQQFqIQgMAQsLIAQgAiADEDk6AAAgBEEBaiEEDAELCyAEIQIMAQsLIAkkBiAFCxwAIAEgAiADIAQgBSAGIAcgAEEHcUHiBmoRDQALGgAgASACIAMgBCAFIAYgAEEHcUHaBmoRDAALGAAgASACIAMgBCAFIABBP3FBmgZqEQUACxYAIAEgAiADIAQgAEEfcUH6BWoRBwALFAAgASACIAMgAEEDcUH2BWoRBgALFAAgASACIAMgAEEBcUH0BWoRGAALFAAgASACIAMgAEEBcUHyBWoRGQALDgAgAEEBcUGqA2oRCwALHgAgASACIAMgBCAFIAYgByAIIABBD3FBjgNqEQ4ACxwAIAEgAiADIAQgBSAGIAcgAEEHcUGGA2oRDwALkgEBAn8gAARAIABBiLkBELABIgEEQAJAIAFBAEECEPQBIAEQ+AIhAiABQQBBABD0ASACQQFqEEQiAEUEQCABEGpBpMUDQTA2AgBBACEADAELIAAgAkEBIAEQYUUEQCAAEDggARBqQQAhAAwBCyAAIAJqQQA6AAAgARBqCwVBACEACwVBpMUDQRw2AgBBACEACyAACxoAIAEgAiADIAQgBSAGIABBP3FBxgJqEQoACxoAIAEgAiADIAQgBSAGIABBA3FBwgJqERsACxgAIAEgAiADIAQgBSAAQR9xQaICahEIAAsYACABIAIgAyAEIAUgAEEHcUGaAmoREwALFgAgASACIAMgBCAAQQ9xQYoCahEJAAsUACABIAIgAyAAQT9xQcoBahEEAAsSACABIAIgAEE/cUGKAWoRAgALGgAgASACIAMgBCAFIAYgAEEBcUGIAWoRIgALEAAgASAAQf8AcUEIahEAAAsNACAAQQFxQQZqERAAC88BAQV/IwYhBCMGQSBqJAYgBEEQaiEGIAFFQdCFASgCACAASnJFBEAgASwAAARAIAQgAigCADYCAEEAQQAgASAEEKkBIgcEQCAAQQRJBH8gAEECdEHAFWooAgAQYEEDagVBAAsiBSAHakEBahBEIQMgBQRAIAYgAEECdEHAFWooAgA2AgAgAyAFQQFqQd2zASAGEKMCGgsgAyAFaiAHQQFqIAEgAhCpARpBpIgBKAIAIQAgAxBgIgEgA0EBIAEgABCTAUcaIAMQOAsLCyAEJAYLEQAgASACIABBAXFBBGoRHgALDAAgASAAQQNxERIACykAIABEAAAAAAAA4D+gnCAARAAAAAAAAOA/oZsgAEQAAAAAAAAAAGYbCxAAIwNFBEAgACQDIAEkBAsLKwAgAEH/AXFBGHQgAEEIdUH/AXFBEHRyIABBEHVB/wFxQQh0ciAAQRh2cguRBwEIfyAAKAIEIgZBeHEhAgJAIAZBA3FFBEAgAUGAAkkNASACIAFBBGpPBEAgAiABa0GM1QMoAgBBAXRNBEAgAA8LCwwBCyAAIAJqIQQgAiABTwRAIAIgAWsiAkEPTQRAIAAPCyAAIAEgBkEBcXJBAnI2AgQgACABaiIBIAJBA3I2AgQgBCAEKAIEQQFyNgIEIAEgAhCQBCAADwtBxNEDKAIAIARGBEBBuNEDKAIAIAJqIgIgAU0NASAAIAEgBkEBcXJBAnI2AgQgACABaiIDIAIgAWsiAUEBcjYCBEHE0QMgAzYCAEG40QMgATYCACAADwtBwNEDKAIAIARGBEAgAkG00QMoAgBqIgMgAUkNASADIAFrIgJBD0sEQCAAIAEgBkEBcXJBAnI2AgQgACABaiIBIAJBAXI2AgQgACADaiIDIAI2AgAgAyADKAIEQX5xNgIEBSAAIAMgBkEBcXJBAnI2AgQgACADaiIBIAEoAgRBAXI2AgRBACEBQQAhAgtBtNEDIAI2AgBBwNEDIAE2AgAgAA8LIAQoAgQiA0ECcQ0AIAIgA0F4cWoiByABSQ0AIANBA3YhBSADQYACSQRAIAQoAggiAiAEKAIMIgNGBEBBrNEDQazRAygCAEEBIAV0QX9zcTYCAAUgAiADNgIMIAMgAjYCCAsFAkAgBCgCGCEIIAQgBCgCDCICRgRAAkAgBEEQaiIDQQRqIgUoAgAiAgRAIAUhAwUgAygCACICRQRAQQAhAgwCCwsDQAJAIAJBFGoiBSgCACIJRQRAIAJBEGoiBSgCACIJRQ0BCyAFIQMgCSECDAELCyADQQA2AgALBSAEKAIIIgMgAjYCDCACIAM2AggLIAgEQCAEKAIcIgNBAnRB3NMDaiIFKAIAIARGBEAgBSACNgIAIAJFBEBBsNEDQbDRAygCAEEBIAN0QX9zcTYCAAwDCwUgCEEQaiIDIAhBFGogAygCACAERhsgAjYCACACRQ0CCyACIAg2AhggBCgCECIDBEAgAiADNgIQIAMgAjYCGAsgBCgCFCIDBEAgAiADNgIUIAMgAjYCGAsLCwsgByABayICQRBJBEAgACAGQQFxIAdyQQJyNgIEIAAgB2oiASABKAIEQQFyNgIEBSAAIAEgBkEBcXJBAnI2AgQgACABaiIBIAJBA3I2AgQgACAHaiIDIAMoAgRBAXI2AgQgASACEJAECyAADwtBAAu/AQEEfyMGIQUjBkEQaiQGIAAsAAsiA0EASCIGBH8gACgCCEH/////B3FBf2ohBCAAKAIEBUEBIQQgA0H/AXELIQMgBCADayACSQRAIAAgBCACIANqIARrIAMgA0EAIAIgARCSBAUgAgRAIAYEfyAAKAIABSAACyIEIANBAnRqIAEgAhCnASACIANqIQEgACwAC0EASARAIAAgATYCBAUgACABOgALCyAFQQA2AgAgAUECdCAEaiAFEG4LCyAFJAYLsAEBBH8jBiEFIwZBEGokBiAALAALIgZBAEgiAwR/IAAoAghB/////wdxQX9qBUEBCyIEIAJJBEAgACAEIAIgBGsgAwR/IAAoAgQFIAZB/wFxCyIAQQAgACACIAEQkgQFIAMEfyAAKAIABSAACyIDIQQgAgRAIAQgASACEOkECyAFQQA2AgAgAkECdCADaiAFEG4gACwAC0EASARAIAAgAjYCBAUgACACOgALCwsgBSQGC7kBAQR/IwYhBSMGQRBqJAYgACwACyIDQQBIIgYEfyAAKAIIQf////8HcUF/aiEEIAAoAgQFQQohBCADQf8BcQshAyAEIANrIAJJBEAgACAEIAIgA2ogBGsgAyADQQAgAiABEJQEBSACBEAgAyAGBH8gACgCAAUgAAsiBGogASACEKgBIAIgA2ohASAALAALQQBIBEAgACABNgIEBSAAIAE6AAsLIAVBADoAACABIARqIAUQXwsLIAUkBgu3AQEEfyMGIQQjBkEQaiQGIAEEQCAALAALIgNBAEgEfyAAKAIEIQIgACgCCEH/////B3FBf2oFIANB/wFxIQJBCgsiBSACayABSQR/IAAgBSABIAJqIAVrIAIgAhDdAiAALAALBSADC0EASAR/IAAoAgAFIAALIgMgAmogAUEAEJUEIAEgAmohASAALAALQQBIBEAgACABNgIEBSAAIAE6AAsLIARBADoAACABIANqIAQQXwsgBCQGC60MAyJ/AX4CfCMGIQIjBkHgE2okBiACQdATaiEaIAJByBNqIQ4gAkG4E2ohCyACQbATaiEPIAJBqBNqIRAgAkGYE2ohDCACQZATaiERIAJBiBNqIRcgAkGAE2ohEiACQfgSaiEYIAJB8BJqIRMgAkHoEmohFCACQeASaiEIIAJB2BJqIQUgAkHQEmohFSACQcgSaiEDIAJBwBJqIQogAkGAEmohByACQYAQaiEGIAJB3BNqIRsgAkHYE2ohDSACQdQTaiEcIABBibYBELABIgkEQAJAIAYgCRDpASAVIA02AgAgBkGrtgEgFRCDAUEBRwRAIAUgADYCAEEAQQNB4K4BIAUQPSAJEGpBACEADAELIA0oAgAiBUHAAmwQRCIDRQRAQQBBA0G52AIgCBA9QQEQAQsgAUUhHUEAIQoCQAJAAkACQAJAAkACQANAAkAgBCAFTg0HIAYgCRDpASAEQcACbCADaiEFIBQgBEHAAmwgA2oiCEG4Amo2AgAgFCAbNgIEIARBwAJsIANqIAZBxa8BIBQQgwFBAUYEfyAFIAgpA7gCIiSnQf//AXFBACAkQoCA/v8Pg1AbNgIAQQIhCEEBBSAdDQEgAiAAEI4GRQ0DIAIgBkH/DyACEGBrEOwEIAUgASACEKoDIgU2AgAgBUEASA0EQQEhCEEACzYCBCAGIAkQ6QEgFyAEQcACbCADaiIWQQhqNgIAIAZB7bEBIBcQgwFBAUcNBCAGIAkQ6QEgDCAEQcACbCADakEQaiIZNgIAIAwgBEHAAmwgA2oiHkEYajYCBCAMIARBwAJsIANqQSBqNgIIIAwgBEHAAmwgA2oiH0EoajYCDCAGQdqyASAMEIMBQQRGBH9BAQUgECAVNgIAIBAgHDYCBCAGQeqyASAQEIMBQQJHDQZBAAshBSAIIApyIQoDQCAGIAkQ6QEgCyAEQcACbCADakEQaiAFQQV0ajYCACALIARBwAJsIANqIAVBBXRqQRhqNgIEIAsgBEHAAmwgA2ogBUEFdGpBIGo2AgggCyAEQcACbCADaiAFQQV0akEoajYCDCAGQdqyASALEIMBQQRHDQcgBUEBaiIFQQNJDQALIBkgBEHAAmwgA2pB8ABqEKkGIAcgFisDCCIlRAAAAAAAAOC/oiImOQMAIAcgJUQAAAAAAADgP6IiJTkDCCAHICU5AxAgByAlOQMYIAcgJTkDICAHICY5AyggByAmOQMwIAcgJjkDOCAEQcACbCADaiEIIARBwAJsIANqIRYgBEHAAmwgA2ohICAEQcACbCADaiEhIARBwAJsIANqISIgBEHAAmwgA2ohI0EAIQUDQCAFQQRHBEAgBEHAAmwgA2pB0AFqIAVBGGxqIB8rAyggGSsDACAFQQR0IAdqKwMAIiaiIB4rAxggBUEEdCAHaisDCCIloqCgOQMAIARBwAJsIANqIAVBGGxqICArA0ggJiAIKwMwoiAlIBYrAziioKA5A9gBIARBwAJsIANqIAVBGGxqICMrA2ggJiAhKwNQoiAlICIrA1iioKA5A+ABIAVBAWohBQwBCwsgBEEBaiEEIA0oAgAhBQwBCwsgEyAANgIAIBMgBjYCBEEAQQNBzK8BIBMQPQwGCyAYIAA2AgBBAEEDQcywASAYED0MBQsgEiAANgIAIBIgAjYCBEEAQQNBoLEBIBIQPQwECyARIAA2AgAgESAEQQFqNgIEQQBBA0HxsQEgERA9DAMLIA8gADYCACAPIARBAWo2AgRBAEEDQfCyASAPED0MAgsgDiAANgIAIA4gBEEBajYCBEEAQQNB8LIBIA4QPQwBCyAJEGpBiAEQRCIARQRAQQBBA0G52AIgGhA9QQEQAQsgACADNgIAIAAgDSgCADYCBCAAQQA2AoABIABBADYCaCAKQQNxQQNGBEAgAEECNgJsBSAKQQFxBEAgAEEANgJsBSAAQQE2AmwLCyAARAAAAAAAAOA/OQNwIABEAAAAAAAA4D85A3gMAQsgCRBqIAMQOEEAIQALBSAKIAA2AgBBAEEDQauuASAKED1BpMUDKAIAEL0BIQAgA0Gn1QM2AgAgAyAANgIEQQBBA0GltgEgAxA9QQAhAAsgAiQGIAAL4hMCEH8BfCMGIRMjBkEQaiQGIBMhDyAEKAIAIgghByABIAJBf2oiEGxBAXQgCGohBQNAIAwgAUgEQCAFQQA7AQAgB0EAOwEAIAdBAmohByAFQQJqIQUgDEEBaiEMDAELCyAIIQcgAUF/aiIRQQF0IAhqIQVBACEMA0AgDCACSARAIAVBADsBACAHQQA7AQAgAUEBdCAHaiEHIAFBAXQgBWohBSAMQQFqIQwMAQsLIARBkIDIAGohB0EAIAFrIRIgACABQQFqIgBqIQ5BASENQQAhBSAAIAQoAgRqIQwgAEEBdCAIaiEIAn8CQANAAkAgDSAQTg0CIAUhAEEBIQoDQCAKIBFIBEAgDi0AACADSgRAAkAgDEF/OgAAIBJBAXQgCGoiBS4BACIGQQBKBEAgCCAGOwEAIAZBB2wiBUECdCAEakH0/88AaiIGIAYoAgBBAWo2AgAgBUECdCAEakH4/88AaiIGIAogBigCAGo2AgAgBUECdCAEakH8/88AaiIGIA0gBigCAGo2AgAgBUECdCAEakGMgNAAaiANNgIADAELIAVBfmouAQAiBiEJIAZBAEohCyAFLgECIgVBAEwEQCALBEAgCCAGOwEAIAlBB2wiBUECdCAEakH0/88AaiIGIAYoAgBBAWo2AgAgBUECdCAEakH4/88AaiIGIAogBigCAGo2AgAgBUECdCAEakH8/88AaiIGIA0gBigCAGo2AgAgBUECdCAEakGEgNAAaiIGKAIAIApIBEAgBiAKNgIACyAFQQJ0IARqQYyA0ABqIA02AgAMAgsgCEF+ai4BACIFQQBKBEAgCCAFOwEAIAVBB2wiBUECdCAEakH0/88AaiIGIAYoAgBBAWo2AgAgBUECdCAEakH4/88AaiIGIAogBigCAGo2AgAgBUECdCAEakH8/88AaiIGIA0gBigCAGo2AgAgBUECdCAEakGEgNAAaiIFKAIAIApODQIgBSAKNgIABSAAQf//AUoNBiAIIABBAWoiBTsBACAEQZCAyABqIABBAnRqIAVBEHRBEHU2AgAgBEGQgNAAaiAAQQdsIgBBAnRqQQE2AgAgAEECdCAEakGUgNAAaiAKNgIAIABBAnQgBGpBmIDQAGogDTYCACAAQQJ0IARqQZyA0ABqIAo2AgAgAEECdCAEakGggNAAaiAKNgIAIABBAnQgBGpBpIDQAGogDTYCACAAQQJ0IARqQaiA0ABqIA02AgAgBSEACwwBCyALBEACQCAFQQJ0IARqQYyAyABqKAIAIgUgCUECdCAEakGMgMgAaigCACIGSgRAIAggBjsBACAHIQlBACELA0AgCyAATgRAIAYhBQwDCyAFIAkoAgBGBEAgCSAGNgIACyAJQQRqIQkgC0EBaiELDAAACwAFIAggBTsBACAFIAZIBEAgByEJQQAhCwNAIAsgAE4NAyAGIAkoAgBGBEAgCSAFNgIACyAJQQRqIQkgC0EBaiELDAAACwALCwsgBUEQdEEQdUEHbCIFQQJ0IARqQfT/zwBqIgYgBigCAEEBajYCACAFQQJ0IARqQfj/zwBqIgYgCiAGKAIAajYCACAFQQJ0IARqQfz/zwBqIgYgDSAGKAIAajYCACAFQQJ0IARqQYyA0ABqIA02AgAMAQsgCEF+ai4BACIGQQBMBEAgCCAFOwEAIAVBB2wiBUECdCAEakH0/88AaiIGIAYoAgBBAWo2AgAgBUECdCAEakH4/88AaiIGIAogBigCAGo2AgAgBUECdCAEakH8/88AaiIGIA0gBigCAGo2AgAgBUECdCAEakGAgNAAaiIGKAIAIApKBEAgBiAKNgIACyAFQQJ0IARqQYyA0ABqIA02AgAMAQsCQCAFQQJ0IARqQYyAyABqKAIAIgUgBkECdCAEakGMgMgAaigCACIGSgRAIAggBjsBACAHIQlBACELA0AgCyAATgRAIAYhBQwDCyAFIAkoAgBGBEAgCSAGNgIACyAJQQRqIQkgC0EBaiELDAAACwAFIAggBTsBACAFIAZIBEAgByEJQQAhCwNAIAsgAE4NAyAGIAkoAgBGBEAgCSAFNgIACyAJQQRqIQkgC0EBaiELDAAACwALCwsgBUEQdEEQdUEHbCIFQQJ0IARqQfT/zwBqIgYgBigCAEEBajYCACAFQQJ0IARqQfj/zwBqIgYgCiAGKAIAajYCACAFQQJ0IARqQfz/zwBqIgUgDSAFKAIAajYCAAsFIAhBADsBACAMQQA6AAALIA5BAWohDiAMQQFqIQwgCkEBaiEKIAhBAmohCAwBCwsgDkECaiEOIA1BAWohDSAAIQUgDEECaiEMIAhBBGohCAwBCwtBAEEDQailASAPED1BfwwBCyAEQQxqIQxBASEAQQEhCANAIAggBUwEQCAIIAcoAgAiBkYEQCAAQQFqIQMFIAAhAyAGQQJ0IARqQYyAyABqKAIAIQALIAcgADYCACADIQAgCEEBaiEIIAdBBGohBwwBCwsgBCAAQX9qIgA2AgggAAR/IAxBACAAQQJ0EEUaIARBkIAoakEAIABBBHQQRRpBACEDA0AgAyAASARAIARBjIAIaiADQQJ0IgdBAnRqIAE2AgAgBEGMgAhqIAdBAXJBAnRqQQA2AgAgBEGMgAhqIAdBAnJBAnRqIAI2AgAgBEGMgAhqIAdBA3JBAnRqQQA2AgAgA0EBaiEDDAELC0EAIQEDQCABIAVIBEAgBEEMaiAEQZCAyABqIAFBAnRqKAIAQX9qIgJBAnRqIgMgBEGQgNAAaiABQQdsIgBBAnRqKAIAIAMoAgBqNgIAIARBkIAoaiACQQF0IgNBA3RqIgcgBysDACAAQQJ0IARqQZSA0ABqKAIAt6A5AwAgBEGQgChqIANBAXJBA3RqIgMgAysDACAAQQJ0IARqQZiA0ABqKAIAt6A5AwAgBEGMgAhqIAJBAnQiAkECdGoiAygCACAAQQJ0IARqQZyA0ABqKAIAIgdKBEAgAyAHNgIACyAEQYyACGogAkEBckECdGoiAygCACAAQQJ0IARqQaCA0ABqKAIAIgdIBEAgAyAHNgIACyAEQYyACGogAkECckECdGoiAygCACAAQQJ0IARqQaSA0ABqKAIAIgdKBEAgAyAHNgIACyAEQYyACGogAkEDckECdGoiAigCACAAQQJ0IARqQaiA0ABqKAIAIgBIBEAgAiAANgIACyABQQFqIQEMAQsLIAQoAgghAUEAIQADfyAAIAFIBH8gBEGQgChqIABBAXQiAkEDdGoiAyADKwMAIARBDGogAEECdGooAgC3IhWjOQMAIARBkIAoaiACQQFyQQN0aiICIAIrAwAgFaM5AwAgAEEBaiEADAEFQQALCwVBAAsLIRQgDyQGIBQLrgEBBH8jBiEFIwZBEGokBiAALAALIgZBAEgiAwR/IAAoAghB/////wdxQX9qBUEKCyIEIAJJBEAgACAEIAIgBGsgAwR/IAAoAgQFIAZB/wFxCyIAQQAgACACIAEQlAQFIAMEfyAAKAIABSAACyIDIQQgAgRAIAQgASACEOcBGgsgBUEAOgAAIAIgA2ogBRBfIAAsAAtBAEgEQCAAIAI2AgQFIAAgAjoACwsLIAUkBgtAAQJ/Qdi1AhBgIgJBDWoQUSIBIAI2AgAgASACNgIEIAFBADYCCCABQQxqIgFB2LUCIAJBAWoQTBogACABNgIACy4AA0AgACgCAEEBRg0ACyAAKAIARQRAIABBATYCACABQbwEEQEAIABBfzYCAAsLVAEBfyAAKAIIBEAgACAAKAIIIgFBf2o2AgggAUUEQCAAKAIAKAIQIQEgACABQf8BcUGsA2oRAQALBSAAKAIAKAIQIQEgACABQf8BcUGsA2oRAQALCxsAIAAgASgCACIANgIAIAAgACgCBEEBajYCBAtOAQN/IAIgAWtBAnYhByABIQADQCAAIAJHBEAgBCAAKAIAIgZB/wFxIAMgBkGAAUkbOgAAIARBAWohBCAAQQRqIQAMAQsLIAdBAnQgAWoLEQAgAUH/AXEgAiABQYABSRsLKQADQCABIAJHBEAgAyABLAAANgIAIANBBGohAyABQQFqIQEMAQsLIAILCgAgAUEYdEEYdQtBAANAIAEgAkcEQCABIAEoAgAiAEGAAUkEf0G0iAEoAgAgASgCAEECdGooAgAFIAALNgIAIAFBBGohAQwBCwsgAgseACABQYABSQR/QbSIASgCACABQQJ0aigCAAUgAQsLnQwCAn8UfCAAKwMIIgogACsDKCILoiAAKwMQIgkgACsDICIQoqEhBCAJIAArAxgiDaIgACsDACIIIAuioSEHIAggEKIgCiANoqEiAyADoiAEIASiIAcgB6KgoJ8iBUQAAAAAAAAAAGIEQCADIAWjIQYgCCAHIAWjIhGiIgMgCiAEIAWjIg+iIhOhIhJEAAAAAAAAAABiBHwgDyEEIAghBSAKIQ4gESEHIAkFIAkgCiAIIAaiIAkgD6KhRAAAAAAAAAAAYiIBGyEOQQFBAiABGyECIA4gDyAGIAEbIgSiIhIhEyAIIAkgARsiBSAGIBEgARsiB6IiAyASoSESIBEgDyABGyEGIAogCCABGwshDCAIIA2iIAogEKKgIAkgC6KgIgiaIAggCEQAAAAAAAAAAGMbIghEAAAAAAAA8D+gn0QAAAAAAADwPyAIoZ+gRAAAAAAAAOA/oiEUIBJEAAAAAAAAAABiBEAgDiAGoiAMIAeioSASoyIOIA6iIAUgBqIgDCAEoqEgEyADoSIDoyIIIAiioEQAAAAAAADwP6AhCiAOIBQgB6IgEqMiBaIgCCAUIASiIAOjIgmioCIPIA+iIAogBSAFoiAJIAmioEQAAAAAAADwv6CioSIDRAAAAAAAAAAAY0UEQCAFIA4gA58iDCAPoSAKoyIRoqAhAyAJIAggEaKgIRIgBSAOIA+aIAyhIAqjIgqioCEFIAkgCCAKoqAhCCANAnwCQAJAAkAgAkEDcUEBaw4CAAECCyAIIQ4gCiEIIAUhCiASIQ8gESESIAMhESAEIQMgByEEIAYMAgsgBSEOIAMhDyAGIQMgBwwBCyAKIQ4gBSEKIBEhDyADIREgBCEDIAYhBCAHCyIFoiIVIBAgA6IiFqEiE0QAAAAAAAAAAGIEfyADIQcgDSEJIBAhDCAFIQZBAAUgCyAQIA0gBKIgCyADoqFEAAAAAAAAAABiIgEbIQwgDSALIAEbIgkgBCAFIAEbIgaiIgshFSAMIAMgBCABGyIHoiIEIRYgCyAEoSETIBAgDSABGyELIAUgAyABGyEEQQFBAiABGwshAiATRAAAAAAAAAAAYgRAIAwgBKIgCyAGoqEgE6MiAyADoiAJIASiIAsgB6KhIBYgFaEiBaMiBCAEoqBEAAAAAAAA8D+gIQ0gAyAUIAaiIBOjIgaiIAQgFCAHoiAFoyIHoqAiCyALoiANIAYgBqIgByAHoqBEAAAAAAAA8L+goqEiBUQAAAAAAAAAAGNFBEAgBiADIAWfIhAgC6EgDaMiCaKgIQwgByAEIAmioCEFIAYgAyALmiAQoSANoyIDoqAhBiAHIAQgA6KgIQcCQAJAAkACQCACQQNxQQFrDgIAAQILIAchBCADIQcgBiEDIAUhBiAJIQUgDCEJDAILIAYhBCAMIQYMAQsgAyEEIAYhAyAJIQYgDCEJCyAKIAmiIAggBaKgIA4gBqKgIgyaIAwgDEQAAAAAAAAAAGMbIQwgCiADoiAIIAeioCAOIASioCINmiANIA1EAAAAAAAAAABjGyENIBEgCaIgEiAFoqAgDyAGoqAiC5ogCyALRAAAAAAAAAAAYxsiCyARIAOiIBIgB6KgIA8gBKKgIhCaIBAgEEQAAAAAAAAAAGMbIhBjBEAgCyAMYwRAIAsgDWMEQCAAIBE5AwAgACASOQMIIAAgDzkDECAAIAk5AxggACAFOQMgIAAgBjkDKAUgACAKOQMAIAAgCDkDCCAAIA45AxAgACADOQMYIAAgBzkDICAAIAQ5AygLBSAAIAo5AwAgACAIOQMIIAAgDjkDECAMIA1jBEAgACAJOQMYIAAgBTkDICAAIAY5AygFIAAgAzkDGCAAIAc5AyAgACAEOQMoCwsFIBAgDGMEQCAQIA1jBEAgACAROQMAIAAgEjkDCCAAIA85AxAFIAAgCjkDACAAIAg5AwggACAOOQMQCyAAIAM5AxggACAHOQMgIAAgBDkDKAUgACAKOQMAIAAgCDkDCCAAIA45AxAgDCANYwRAIAAgCTkDGCAAIAU5AyAgACAGOQMoBSAAIAM5AxggACAHOQMgIAAgBDkDKAsLCwsLCwsLC0EAA0AgASACRwRAIAEgASgCACIAQYABSQR/QaSKASgCACABKAIAQQJ0aigCAAUgAAs2AgAgAUEEaiEBDAELCyACCx4AIAFBgAFJBH9BpIoBKAIAIAFBAnRqKAIABSABCwtKAANAAkAgAiADRgRAIAMhAgwBCyACKAIAQYABTw0AIAFBoIoBKAIAIAIoAgBBAXRqLgEAcUH//wNxBEAgAkEEaiECDAILCwsgAgtKAANAAkAgAiADRgRAIAMhAgwBCyACKAIAQYABSQRAIAFBoIoBKAIAIAIoAgBBAXRqLgEAcUH//wNxDQELIAJBBGohAgwBCwsgAgtGAANAIAEgAkcEQCADIAEoAgBBgAFJBH9BoIoBKAIAIAEoAgBBAXRqLwEABUEACzsBACADQQJqIQMgAUEEaiEBDAELCyACCykAIAJBgAFJBH8gAUGgigEoAgAgAkEBdGouAQBxQf//A3FBAEcFQQALCyAAIABCADcCACAAQQA2AgggAEHMogFBzKIBELQBEMsBCyAAIABCADcCACAAQQA2AgggAEHkogFB5KIBELQBEMsBCwwAIAAgAUEQahDeAgsHACAAKAIMCwcAIAAoAggLCwAgABCZBCAAEDgLHgAgAEIANwIAIABBADYCCCAAQY2jA0GNowMQYBB+Cx4AIABCADcCACAAQQA2AgggAEGTowNBk6MDEGAQfgsMACAAIAFBDGoQ3gILBwAgACwACQsHACAALAAICwsAIAAQmgQgABA4CyoBAXxBfyAAKwMAIAErAwChIgJEAAAAAAAAAABkIAJEAAAAAAAAAABjGwszAANAIAEgAkcEQCAEIAEsAAAiACADIABBf0obOgAAIARBAWohBCABQQFqIQEMAQsLIAILEgAgASACIAFBGHRBGHVBf0obCykAA0AgASACRwRAIAMgASwAADoAACADQQFqIQMgAUEBaiEBDAELCyACCwQAIAELRAADQCABIAJHBEAgASABLAAAIgBBf0oEf0G0iAEoAgAgASwAAEECdGooAgBB/wFxBSAACzoAACABQQFqIQEMAQsLIAILLQAgAUEYdEEYdUF/SgR/QbSIASgCACABQRh0QRh1QQJ0aigCAEH/AXEFIAELC0QAA0AgASACRwRAIAEgASwAACIAQX9KBH9BpIoBKAIAIAEsAABBAnRqKAIAQf8BcQUgAAs6AAAgAUEBaiEBDAELCyACCysAIAFBGHRBGHVBf0oEf0GkigEoAgAgAUH/AXFBAnRqKAIAQf8BcQUgAQsLCwAgABCbBCAAEDgLNwECfyAAKAIAIgEhAiABBEAgACACNgIEIAEgAEEQakYEQCAAQQA6AIABBSAAKAIIGiABEDgLCwsLACAAEJwEIAAQOAuQBgECfyACIAA2AgAgBSADNgIAIAIoAgAhAANAAkAgACABTwRAQQAhAAwBCyAALgEAIgZB//8DcSIDQf//wwBLBEBBAiEADAELIAZB//8DcUGAAUgEQCAEIAUoAgAiAGtBAUgEQEEBIQAMAgsgBSAAQQFqNgIAIAAgBjoAAAUCQCAGQf//A3FBgBBIBEAgBCAFKAIAIgBrQQJIBEBBASEADAQLIAUgAEEBajYCACAAIANBBnZBwAFyOgAAIAUgBSgCACIAQQFqNgIAIAAgA0E/cUGAAXI6AAAMAQsgBkH//wNxQYCwA0gEQCAEIAUoAgAiAGtBA0gEQEEBIQAMBAsgBSAAQQFqNgIAIAAgA0EMdkHgAXI6AAAgBSAFKAIAIgBBAWo2AgAgACADQQZ2QT9xQYABcjoAACAFIAUoAgAiAEEBajYCACAAIANBP3FBgAFyOgAADAELIAZB//8DcUGAuANOBEAgBkH//wNxQYDAA0gEQEECIQAMBAsgBCAFKAIAIgBrQQNIBEBBASEADAQLIAUgAEEBajYCACAAIANBDHZB4AFyOgAAIAUgBSgCACIAQQFqNgIAIAAgA0EGdkE/cUGAAXI6AAAgBSAFKAIAIgBBAWo2AgAgACADQT9xQYABcjoAAAwBCyABIABrQQRIBEBBASEADAMLIABBAmohBiAALwECIgBBgPgDcUGAuANHBEBBAiEADAMLIAQgBSgCAGtBBEgEQEEBIQAMAwsgAEH/B3EgA0HAB3EiB0EKdEGAgARqIANBCnRBgPgDcXJyQf//wwBLBEBBAiEADAMLIAIgBjYCACAFIAUoAgAiBkEBajYCACAGIAdBBnZBAWoiBkECdkHwAXI6AAAgBSAFKAIAIgdBAWo2AgAgByAGQQR0QTBxIANBAnZBD3FyQYABcjoAACAFIAUoAgAiBkEBajYCACAGIANBBHRBMHEgAEEGdkEPcXJBgAFyOgAAIAUgBSgCACIDQQFqNgIAIAMgAEE/cUGAAXI6AAALCyACIAIoAgBBAmoiADYCAAwBCwsgAAu8BgEFfyACIAA2AgAgBSADNgIAA0ACQCACKAIAIgMgAU8EQEEAIQAMAQsgBSgCACIIIARPBEBBASEADAELIAMsAAAiBkH/AXEiCUH//8MASwRAQQIhAAwBCyACIAZBf0oEfyAIIAZB/wFxOwEAIANBAWoFAn8gBkH/AXFBwgFIBEBBAiEADAMLIAZB/wFxQeABSARAIAEgA2tBAkgEQEEBIQAMBAsgAy0AASIAQcABcUGAAUcEQEECIQAMBAsgCUEGdEHAD3EgAEE/cXIiAEH//8MASwRAQQIhAAwECyAIIAA7AQAgA0ECagwBCyAGQf8BcUHwAUgEQCABIANrQQNIBEBBASEADAQLIAMsAAEhByADLQACIQACQAJAAkAgBkFgayIGBEAgBkENRgRADAIFDAMLAAsgB0HgAXFBoAFHBEBBAiEADAcLDAILIAdB4AFxQYABRwRAQQIhAAwGCwwBCyAHQcABcUGAAUcEQEECIQAMBQsLIABBwAFxQYABRwRAQQIhAAwECyAAQT9xIAlBDHQgB0E/cUEGdHJyIgBB//8DcUH//8MASwRAQQIhAAwECyAIIAA7AQAgA0EDagwBCyAGQf8BcUH1AU4EQEECIQAMAwsgASADa0EESARAQQEhAAwDCyADLAABIQcgAy0AAiEAIAMtAAMhAwJAAkACQAJAIAZBcGsOBQACAgIBAgsgB0HwAGpBGHRBGHVB/wFxQTBOBEBBAiEADAYLDAILIAdB8AFxQYABRwRAQQIhAAwFCwwBCyAHQcABcUGAAUcEQEECIQAMBAsLIABBwAFxQYABRwRAQQIhAAwDCyADQcABcUGAAUcEQEECIQAMAwsgBCAIa0EESARAQQEhAAwDCyADQT9xIgYgAEEGdCIKQcAfcSAHQf8BcSIDQQx0QYDgD3EgCUEHcSIHQRJ0cnJyQf//wwBLBEBBAiEADAMLIAggA0EEdkEDcSAHQQJ0ckEGdEHA/wBqIANBAnRBPHEgAEEEdkEDcXJyQYCwA3I7AQAgBSAIQQJqNgIAIAggBiAKQcAHcXJBgLgDcjsBAiACKAIAQQRqCws2AgAgBSAFKAIAQQJqNgIADAELCyAAC5MEAQd/IAEhByAAIQEDQAJAIAEgB0kgBiACSXFFDQAgASwAACIDQf8BcSIIQf//wwBLDQAgA0F/SgR/IAFBAWoFAn8gA0H/AXFBwgFIDQIgA0H/AXFB4AFIBEAgByABa0ECSA0DIAEtAAEiBEHAAXFBgAFHIAhBBnRBwA9xIARBP3FyQf//wwBLcg0DIAFBAmoMAQsgA0H/AXFB8AFIBEAgByABa0EDSA0DIAEsAAEhBCABLQACIQUCQAJAAkAgA0FgayIDBEAgA0ENRgRADAIFDAMLAAsgBEHgAXFBoAFHDQYMAgsgBEHgAXFBgAFHDQUMAQsgBEHAAXFBgAFHDQQLIAVBwAFxQYABRyAFQT9xIAhBDHRBgOADcSAEQT9xQQZ0cnJB///DAEtyDQMgAUEDagwBCyAHIAFrQQRIIAIgBmtBAklyIANB/wFxQfUBTnINAiABLAABIQUgAS0AAiEEIAEtAAMhCQJAAkACQAJAIANBcGsOBQACAgIBAgsgBUHwAGpBGHRBGHVB/wFxQTBODQUMAgsgBUHwAXFBgAFHDQQMAQsgBUHAAXFBgAFHDQMLIAlBwAFxQYABRyAJQT9xIARBBnRBwB9xIAhBEnRBgIDwAHEgBUE/cUEMdHJyckH//8MAS3IgBEHAAXFBgAFHcg0CIAZBAWohBiABQQRqCwshASAGQQFqIQYMAQsLIAEgAGsLCwAgAiADIAQQkwoLTQEBfyMGIQAjBkEQaiQGIABBBGoiASACNgIAIAAgBTYCACACIAMgASAFIAYgABCSCiEIIAQgASgCADYCACAHIAAoAgA2AgAgACQGIAgLTQEBfyMGIQAjBkEQaiQGIABBBGoiASACNgIAIAAgBTYCACACIAMgASAFIAYgABCRCiEIIAQgASgCADYCACAHIAAoAgA2AgAgACQGIAgLCwAgABCeBCAAEDgLKgEBfyAAKAIIIgAEQCAAEGIhARCbAyEAIAEEQCABEGIaCwVBASEACyAAC3MBBH8gAyEFA0ACQCACIAVGIAYgBE9yDQAgACgCCBBiIQdBACACIAUgAmsgAUHIxQMgARsQ1wEhAyAHBEAgBxBiGgsCQAJAIANBfmsOAwICAAELQQEhAwsgBkEBaiEGIAMgCGohCCACIANqIQIMAQsLIAgLUAEEfyAAKAIIEGIhAQJ/IwYhAyMGQRBqJAYgAwskBiABBEAgARBiGgsgACgCCCIABH8gABBiIQAQmwMhBCAABEAgABBiGgsgBEEBRgVBAQsLmAEBAn8jBiEFIwZBEGokBiAEIAI2AgAgACgCCBBiIQIgBSIAQQAQngEhASACBEAgAhBiGgsgAUEBakECSQR/QQIFIAFBf2oiASADIAQoAgBrSwR/QQEFA38gAQR/IAAsAAAhAiAEIAQoAgAiA0EBajYCACADIAI6AAAgAEEBaiEAIAFBf2ohAQwBBUEACwsLCyEGIAUkBiAGC/kDAQZ/IwYhDCMGQRBqJAYgDCEJIAIhCANAAkAgAyAIRgRAIAMhCAwBCyAILAAABEAgCEEBaiEIDAILCwsgByAFNgIAIAQgAjYCACAGIQogCCEGAkACQAJAA0ACQCACIANGIAUgCkZyDQMgCSABKQIANwMAIAAoAggQYiEIIAUgBCAGIAJrIAogBWtBAnUgARDwBCELIAgEQCAIEGIaCyALQX9GDQAgByAHKAIAIAtBAnRqIgU2AgAgBSAKRg0CIAQoAgAhAiADIAZGBEAgAyEGBSAAKAIIEGIhBgJ/IAUgAkEBIAEQ1wEhDSAGBEAgBhBiGgsgDQsEQEECIQAMBgsgByAHKAIAQQRqNgIAIAQgBCgCAEEBaiICNgIAIAIhBgNAAkAgAyAGRgRAIAMhBgwBCyAGLAAABEAgBkEBaiEGDAILCwsgBygCACEFCwwBCwsCQAJAA0ACQCAHIAU2AgAgAiAEKAIARg0DIAAoAggQYiEIIAUgAiAGIAJrIAkQ1wEhASAIBEAgCBBiGgsCQAJAIAFBfmsOAwQCAAELQQEhAQsgASACaiECIAcoAgBBBGohBQwBCwsgBCACNgIAQQIhAAwECyAEIAI2AgBBASEADAMLIAQgAjYCACACIANHIQAMAgsgBCgCACECCyACIANHIQALIAkkBiAAC5gEAQZ/IwYhDSMGQRBqJAYgDSIKQQhqIQsgAiEIA0ACQCADIAhGBEAgAyEIDAELIAgoAgAEQCAIQQRqIQgMAgsLCyAHIAU2AgAgBCACNgIAIAYhCSAIIQYCQAJAAkADQAJAIAIgA0YgBSAJRnINAyAKIAEpAgA3AwAgACgCCBBiIQggBSAEIAYgAmtBAnUgCSAFaxDoBCEMIAgEQCAIEGIaCwJAAkAgDEF/aw4CAgABC0EBIQAMBQsgByAMIAcoAgBqIgU2AgAgBSAJRg0CIAMgBkYEQCADIQYgBCgCACECBSAAKAIIEGIhBSALQQAQngEhAiAFBEAgBRBiGgsgAkF/RgRAQQIhAAwGCyACIAkgBygCAGtLBEBBASEADAYLIAshBQNAIAIEQCAFLAAAIQYgByAHKAIAIghBAWo2AgAgCCAGOgAAIAVBAWohBSACQX9qIQIMAQsLIAQgBCgCAEEEaiICNgIAIAIhBgNAAkAgAyAGRgRAIAMhBgwBCyAGKAIABEAgBkEEaiEGDAILCwsgBygCACEFCwwBCwsgByAFNgIAA0ACQCACIAQoAgBGDQAgAigCACEDIAAoAggQYiEBIAUgAxCeASEDIAEEQCABEGIaCyADQX9GDQAgByADIAcoAgBqIgU2AgAgAkEEaiECDAELCyAEIAI2AgBBAiEADAILIAQoAgAhAgsgAiADRyEACyAKJAYgAAsRACADIAJrIgAgBCAAIARJGwuPAwEBfyACIAA2AgAgBSADNgIAIAIoAgAhAANAAkAgACABTwRAQQAhAAwBCyAAKAIAIgBBgHBxQYCwA0YgAEH//8MAS3IEQEECIQAMAQsgAEGAAUkEQCAEIAUoAgAiA2tBAUgEQEEBIQAMAgsgBSADQQFqNgIAIAMgADoAAAUCQCAAQYAQSQRAIAQgBSgCACIDa0ECSARAQQEhAAwECyAFIANBAWo2AgAgAyAAQQZ2QcABcjoAAAwBCyAEIAUoAgAiA2shBiAAQYCABEkEQCAGQQNIBEBBASEADAQLIAUgA0EBajYCACADIABBDHZB4AFyOgAABSAGQQRIBEBBASEADAQLIAUgA0EBajYCACADIABBEnZB8AFyOgAAIAUgBSgCACIDQQFqNgIAIAMgAEEMdkE/cUGAAXI6AAALIAUgBSgCACIDQQFqNgIAIAMgAEEGdkE/cUGAAXI6AAALIAUgBSgCACIDQQFqNgIAIAMgAEE/cUGAAXI6AAALIAIgAigCAEEEaiIANgIADAELCyAAC7kFAQV/IAIgADYCACAFIAM2AgADQAJAIAIoAgAiBiABTwRAQQAhAAwBCyAFKAIAIgogBE8EQEEBIQAMAQsgBiwAACIHQf8BcSEDIAdBf0oEfyADQf//wwBLBH9BAiEADAIFQQELBQJ/IAdB/wFxQcIBSARAQQIhAAwDCyAHQf8BcUHgAUgEQCABIAZrQQJIBEBBASEADAQLIAYtAAEiAEHAAXFBgAFHBEBBAiEADAQLQQIgA0EGdEHAD3EgAEE/cXIiA0H//8MATQ0BGkECIQAMAwsgB0H/AXFB8AFIBEAgASAGa0EDSARAQQEhAAwECyAGLAABIQggBi0AAiEAAkACQAJAIAdBYGsiBwRAIAdBDUYEQAwCBQwDCwALIAhB4AFxQaABRwRAQQIhAAwHCwwCCyAIQeABcUGAAUcEQEECIQAMBgsMAQsgCEHAAXFBgAFHBEBBAiEADAULCyAAQcABcUGAAUcEQEECIQAMBAtBAyAAQT9xIANBDHRBgOADcSAIQT9xQQZ0cnIiA0H//8MATQ0BGkECIQAMAwsgB0H/AXFB9QFOBEBBAiEADAMLIAEgBmtBBEgEQEEBIQAMAwsgBiwAASEJIAYtAAIhACAGLQADIQgCQAJAAkACQCAHQXBrDgUAAgICAQILIAlB8ABqQRh0QRh1Qf8BcUEwTgRAQQIhAAwGCwwCCyAJQfABcUGAAUcEQEECIQAMBQsMAQsgCUHAAXFBgAFHBEBBAiEADAQLCyAAQcABcUGAAUcEQEECIQAMAwsgCEHAAXFBgAFHBEBBAiEADAMLIAhBP3EgAEEGdEHAH3EgA0ESdEGAgPAAcSAJQT9xQQx0cnJyIgNB///DAEsEf0ECIQAMAwVBBAsLCyEAIAogAzYCACACIAAgBmo2AgAgBSAFKAIAQQRqNgIADAELCyAAC4UEAQd/IAEhBiAAIQEDQAJAIAEgBkkgCCACSXFFDQAgASwAACIDQf8BcSEHIANBf0oEfyAHQf//wwBLDQEgAUEBagUCfyADQf8BcUHCAUgNAiADQf8BcUHgAUgEQCAGIAFrQQJIDQMgAS0AASIEQcABcUGAAUcgB0EGdEHAD3EgBEE/cXJB///DAEtyDQMgAUECagwBCyADQf8BcUHwAUgEQCAGIAFrQQNIDQMgASwAASEEIAEtAAIhBQJAAkACQCADQWBrIgMEQCADQQ1GBEAMAgUMAwsACyAEQeABcUGgAUcNBgwCCyAEQeABcUGAAUcNBQwBCyAEQcABcUGAAUcNBAsgBUHAAXFBgAFHIAVBP3EgB0EMdEGA4ANxIARBP3FBBnRyckH//8MAS3INAyABQQNqDAELIAYgAWtBBEggA0H/AXFB9QFOcg0CIAEsAAEhBSABLQACIQQgAS0AAyEJAkACQAJAAkAgA0Fwaw4FAAICAgECCyAFQfAAakEYdEEYdUH/AXFBME4NBQwCCyAFQfABcUGAAUcNBAwBCyAFQcABcUGAAUcNAwsgCUHAAXFBgAFHIAlBP3EgBEEGdEHAH3EgB0ESdEGAgPAAcSAFQT9xQQx0cnJyQf//wwBLciAEQcABcUGAAUdyDQIgAUEEagsLIQEgCEEBaiEIDAELCyABIABrCwsAIAIgAyAEEKEKC00BAX8jBiEAIwZBEGokBiAAQQRqIgEgAjYCACAAIAU2AgAgAiADIAEgBSAGIAAQoAohCCAEIAEoAgA2AgAgByAAKAIANgIAIAAkBiAIC00BAX8jBiEAIwZBEGokBiAAQQRqIgEgAjYCACAAIAU2AgAgAiADIAEgBSAGIAAQnwohCCAEIAEoAgA2AgAgByAAKAIANgIAIAAkBiAIC8MEAQh/IwYhBCMGQbABaiQGIARBqAFqIQwgBCEBIARBpAFqIQogBEGgAWohByAEQZgBaiECIARBkAFqIQsgBEGAAWoiCEIANwIAIAhBADYCCANAIAZBA0cEQCAGQQJ0IAhqQQA2AgAgBkEBaiEGDAELCyACQQA2AgQgAkGsoAE2AgAgBSgCACAFIAUsAAsiA0EASCIJGyIGIAUoAgQgA0H/AXEgCRtBAnRqIQMgAUEgaiEJQQAhBQJAAkADQCAFQQJHIAYgA0lxBEAgByAGNgIAIAIgDCAGIAMgByABIAkgCiACKAIAKAIMQQ9xQY4DahEOACIFQQJGIAYgBygCAEZyDQIgASEGA0AgBiAKKAIASQRAIAggBiwAABDMASAGQQFqIQYMAQsLIAcoAgAhBgwBCwsMAQsQAAsCfyAIKAIAIAggCCwAC0EASBsiAyENIABCADcCACAAQQA2AghBACECA0AgAkEDRwRAIAJBAnQgAGpBADYCACACQQFqIQIMAQsLIAtBADYCBCALQdygATYCACANCxBgIANqIgUhBiABQYABaiEJQQAhAgJAAkADQCACQQJHIAMgBUlxRQ0BIAcgAzYCACALIAwgAyADQSBqIAUgBiADa0EgShsgByABIAkgCiALKAIAKAIQQQ9xQY4DahEOACICQQJGIAMgBygCAEZyRQRAIAEhAwNAIAMgCigCAEkEQCAAIAMoAgAQjgIgA0EEaiEDDAELCyAHKAIAIQMMAQsLEAAMAQsgCBBHIAQkBgsLgAIBAn8jBiEBIwZBEGokBiABQgA3AgAgAUEANgIIA0AgBkEDRwRAIAZBAnQgAWpBADYCACAGQQFqIQYMAQsLIAUoAgAgBSAFLAALIgNBAEgiBBsiAiAFKAIEIANB/wFxIAQbaiEDIAIhBQNAIAUgA0kEQCABIAUsAAAQzAEgBUEBaiEFDAELCwJ/IAEoAgAgASABLAALQQBIGyICIQcgAEIANwIAIABBADYCCEEAIQMDQCADQQNHBEAgA0ECdCAAakEANgIAIANBAWohAwwBCwsgBwsQYCACaiEDA0AgAiADSQRAIAAgAiwAABDMASACQQFqIQIMAQsLIAEQRyABJAYLwgUBEn8jBiEGIwZB4ANqJAYgBkHMA2oiCyADEDsgC0GgzgMQOiEMIAUsAAsiB0EASCEAIAUoAgQgB0H/AXEgABsEfyAFKAIAIAUgABsoAgAgDEEtIAwoAgAoAixBP3FBigFqEQIARgVBAAshDiAGQdQDaiEPIAZByANqIRAgBkHEA2ohESAGQawDaiEHIAZBoANqIQggBkGcA2ohCSAGQbgDaiIKQgA3AgAgCkEANgIIQQAhAANAIABBA0cEQCAAQQJ0IApqQQA2AgAgAEEBaiEADAELCyAHQgA3AgAgB0EANgIIQQAhAANAIABBA0cEQCAAQQJ0IAdqQQA2AgAgAEEBaiEADAELCyAIQgA3AgAgCEEANgIIQQAhAANAIABBA0cEQCAAQQJ0IAhqQQA2AgAgAEEBaiEADAELCyACIA4gCyAPIBAgESAKIAcgCCAJEKMEIAUsAAsiAEEASCESIAUoAgQgAEH/AXEgEhsiEyAJKAIAIglKBH8gBygCBCAHLAALIgBB/wFxIABBAEgbIQIgCCgCBCAILAALIgBB/wFxIABBAEgbIRQgCUEBaiATIAlrQQF0agUgBygCBCAHLAALIgBB/wFxIABBAEgbIQIgCCgCBCAILAALIgBB/wFxIABBAEgbIRQgCUECagshFiAGIQAgAiAUIBZqaiICQeQASwRAIAJBAnQQRCIAIQIgAARAIAAhDSACIRUFEAALBSAAIQ0LIA0gBkGYA2ogBkGUA2ogAygCBCAFKAIAIAUgEhsiACATQQJ0IABqIAwgDiAPIBAoAgAgESgCACAKIAcgCCAJEKIEIAYgASgCADYCkAMgBigCmAMhACAGKAKUAyEBIAZB0ANqIgIgBigCkAM2AgAgAiANIAAgASADIAQQpQEhFyAVBEAgFRA4CyAIEEcgBxBHIAoQRyALEDwgBiQGIBcLuAYBFX8jBiEGIwZB4AdqJAYgBkGIB2ohCCAGQZADaiEAIAZB2AdqIgkgBkGgBmoiBzYCACAGQZAHaiINIAU5AwAgB0HkAEHSngMgDRCjAiIHQeMASwRAEFwhACAIIAU5AwAgCSAAQdKeAyAIEJsBIQAgCSgCACIIRQRAEAALIABBAnQQRCIHIQogBwRAIAchDCAAIQsgCiEQIAghEQUQAAsFIAAhDCAHIQsLIAZB1AdqIg4gAxA7IA5BoM4DEDoiEigCACgCMCEAIBIgCSgCACIHIAcgC2ogDCAAQQ9xQYoCahEJABogCwR/IAkoAgAsAABBLUYFQQALIRMgBkHcB2ohFCAGQdAHaiEVIAZBzAdqIRYgBkG0B2ohByAGQagHaiEIIAZBpAdqIQkgBkHAB2oiCkIANwIAIApBADYCCEEAIQADQCAAQQNHBEAgAEECdCAKakEANgIAIABBAWohAAwBCwsgB0IANwIAIAdBADYCCEEAIQADQCAAQQNHBEAgAEECdCAHakEANgIAIABBAWohAAwBCwsgCEIANwIAIAhBADYCCEEAIQADQCAAQQNHBEAgAEECdCAIakEANgIAIABBAWohAAwBCwsgAiATIA4gFCAVIBYgCiAHIAggCRCjBCALIAkoAgAiCUoEfyAHKAIEIAcsAAsiAEH/AXEgAEEASBshAiAIKAIEIAgsAAsiAEH/AXEgAEEASBshFyAJQQFqIAsgCWtBAXRqBSAHKAIEIAcsAAsiAEH/AXEgAEEASBshAiAIKAIEIAgsAAsiAEH/AXEgAEEASBshFyAJQQJqCyEZIAYhACACIBcgGWpqIgJB5ABLBEAgAkECdBBEIgAhAiAABEAgACEPIAIhGAUQAAsFIAAhDwsgDyAGQaAHaiAGQZwHaiADKAIEIAwgC0ECdCAMaiASIBMgFCAVKAIAIBYoAgAgCiAHIAggCRCiBCAGIAEoAgA2ApgHIAYoAqAHIQAgBigCnAchASANIAYoApgHNgIAIA0gDyAAIAEgAyAEEKUBIRogGARAIBgQOAsgCBBHIAcQRyAKEEcgDhA8IBAEQCAQEDgLIBEEQCAREDgLIAYkBiAaC7wFARJ/IwYhBiMGQbABaiQGIAZBmAFqIgsgAxA7IAtBgM4DEDohDCAFLAALIgdBAEghACAFKAIEIAdB/wFxIAAbBH8gBSgCACAFIAAbLQAAIAxBLSAMKAIAKAIcQT9xQYoBahECAEH/AXFGBUEACyEOIAZBpAFqIQ8gBkGhAWohECAGQaABaiERIAZBgAFqIQcgBkH0AGohCCAGQfAAaiEJIAZBjAFqIgpCADcCACAKQQA2AghBACEAA0AgAEEDRwRAIABBAnQgCmpBADYCACAAQQFqIQAMAQsLIAdCADcCACAHQQA2AghBACEAA0AgAEEDRwRAIABBAnQgB2pBADYCACAAQQFqIQAMAQsLIAhCADcCACAIQQA2AghBACEAA0AgAEEDRwRAIABBAnQgCGpBADYCACAAQQFqIQAMAQsLIAIgDiALIA8gECARIAogByAIIAkQpQQgBSwACyIAQQBIIRIgBSgCBCAAQf8BcSASGyITIAkoAgAiCUoEfyAHKAIEIAcsAAsiAEH/AXEgAEEASBshAiAIKAIEIAgsAAsiAEH/AXEgAEEASBshFCAJQQFqIBMgCWtBAXRqBSAHKAIEIAcsAAsiAEH/AXEgAEEASBshAiAIKAIEIAgsAAsiAEH/AXEgAEEASBshFCAJQQJqCyEWIAYhACACIBQgFmpqIgJB5ABLBEAgAhBEIgAhAiAABEAgACENIAIhFQUQAAsFIAAhDQsgDSAGQewAaiAGQegAaiADKAIEIAUoAgAgBSASGyIAIAAgE2ogDCAOIA8gECwAACARLAAAIAogByAIIAkQpAQgBiABKAIANgJkIAYoAmwhACAGKAJoIQEgBkGcAWoiAiAGKAJkNgIAIAIgDSAAIAEgAyAEEJcBIRcgFQRAIBUQOAsgCBBHIAcQRyAKEEcgCxA8IAYkBiAXC68GARV/IwYhBiMGQaADaiQGIAZByAJqIQggBkHwAGohACAGQZADaiIJIAZB4AFqIgc2AgAgBkHQAmoiDSAFOQMAIAdB5ABB0p4DIA0QowIiB0HjAEsEQBBcIQAgCCAFOQMAIAkgAEHSngMgCBCbASEAIAkoAgAiCEUEQBAACyAAEEQiByEKIAcEQCAHIQwgACELIAohECAIIREFEAALBSAAIQwgByELCyAGQYwDaiIOIAMQOyAOQYDOAxA6IhIoAgAoAiAhACASIAkoAgAiByAHIAtqIAwgAEEPcUGKAmoRCQAaIAsEfyAJKAIALAAAQS1GBUEACyETIAZBmANqIRQgBkGVA2ohFSAGQZQDaiEWIAZB9AJqIQcgBkHoAmohCCAGQeQCaiEJIAZBgANqIgpCADcCACAKQQA2AghBACEAA0AgAEEDRwRAIABBAnQgCmpBADYCACAAQQFqIQAMAQsLIAdCADcCACAHQQA2AghBACEAA0AgAEEDRwRAIABBAnQgB2pBADYCACAAQQFqIQAMAQsLIAhCADcCACAIQQA2AghBACEAA0AgAEEDRwRAIABBAnQgCGpBADYCACAAQQFqIQAMAQsLIAIgEyAOIBQgFSAWIAogByAIIAkQpQQgCyAJKAIAIglKBH8gBygCBCAHLAALIgBB/wFxIABBAEgbIQIgCCgCBCAILAALIgBB/wFxIABBAEgbIRcgCUEBaiALIAlrQQF0agUgBygCBCAHLAALIgBB/wFxIABBAEgbIQIgCCgCBCAILAALIgBB/wFxIABBAEgbIRcgCUECagshGSAGIQAgAiAXIBlqaiICQeQASwRAIAIQRCIAIQIgAARAIAAhDyACIRgFEAALBSAAIQ8LIA8gBkHgAmogBkHcAmogAygCBCAMIAsgDGogEiATIBQgFSwAACAWLAAAIAogByAIIAkQpAQgBiABKAIANgLYAiAGKALgAiEAIAYoAtwCIQEgDSAGKALYAjYCACANIA8gACABIAMgBBCXASEaIBgEQCAYEDgLIAgQRyAHEEcgChBHIA4QPCAQBEAgEBA4CyARBEAgERA4CyAGJAYgGgvlBgEGfyMGIQojBkEQaiQGIAAEfyABQfjPAxA6IgEoAgAoAiwFIAFB8M8DEDoiASgCACgCLAshACAKQQxqIgsgASAAQT9xQbIFahEDACACIAsoAgA2AAAgCiABIAEoAgAoAiBBP3FBsgVqEQMAIAgsAAtBAEgEQAJ/IAgoAgAhDCALQQA2AgAgDAsgCxBuIAhBADYCBCAILAALQQBIBEAgCCgCCBogCCgCABA4IAhBADYCCAsFIAtBADYCACAIIAsQbiAIQQA6AAsLIAggCikCADcCACAIIAooAgg2AghBACEAA0AgAEEDRwRAIABBAnQgCmpBADYCACAAQQFqIQAMAQsLIAoQRyAKIAEgASgCACgCHEE/cUGyBWoRAwAgBywAC0EASARAAn8gBygCACENIAtBADYCACANCyALEG4gB0EANgIEIAcsAAtBAEgEQCAHKAIIGiAHKAIAEDggB0EANgIICwUgC0EANgIAIAcgCxBuIAdBADoACwsgByAKKQIANwIAIAcgCigCCDYCCEEAIQADQCAAQQNHBEAgAEECdCAKakEANgIAIABBAWohAAwBCwsgChBHIAMgASABKAIAKAIMQf8AcUEIahEAADYCACAEIAEgASgCACgCEEH/AHFBCGoRAAA2AgAgCiABIAEoAgAoAhRBP3FBsgVqEQMAIAUsAAtBAEgEQAJ/IAUoAgAhDiALQQA6AAAgDgsgCxBfIAVBADYCBCAFLAALQQBIBEAgBSgCCBogBSgCABA4IAVBADYCCAsFIAtBADoAACAFIAsQXyAFQQA6AAsLIAUgCikCADcCACAFIAooAgg2AghBACEAA0AgAEEDRwRAIABBAnQgCmpBADYCACAAQQFqIQAMAQsLIAoQRyAKIAEgASgCACgCGEE/cUGyBWoRAwAgBiwAC0EASARAAn8gBigCACEPIAtBADYCACAPCyALEG4gBkEANgIEIAYsAAtBAEgEQCAGKAIIGiAGKAIAEDggBkEANgIICwUgC0EANgIAIAYgCxBuIAZBADoACwsgBiAKKQIANwIAIAYgCigCCDYCCEEAIQADQCAAQQNHBEAgAEECdCAKakEANgIAIABBAWohAAwBCwsgChBHIAkgASABKAIAKAIkQf8AcUEIahEAADYCACAKJAYL2QIBB38jBiEDIwZBEGokBiAALAALIgZBAEgiBwR/IAAoAgh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qIQAMAQsLIAoQRyAKIAEgASgCACgCHEE/cUGyBWoRAwAgBywAC0EASARAAn8gBygCACENIAtBADoAACANCyALEF8gB0EANgIEIAcsAAtBAEgEQCAHKAIIGiAHKAIAEDggB0EANgIICwUgC0EAOgAAIAcgCxBfIAdBADoACwsgByAKKQIANwIAIAcgCigCCDYCCEEAIQADQCAAQQNHBEAgAEECdCAKakEANgIAIABBAWohAAwBCwsgChBHIAMgASABKAIAKAIMQf8AcUEIahEAADoAACAEIAEgASgCACgCEEH/AHFBCGoRAAA6AAAgCiABIAEoAgAoAhRBP3FBsgVqEQMAIAUsAAtBAEgEQAJ/IAUoAgAhDiALQQA6AAAgDgsgCxBfIAVBADYCBCAFLAALQQBIBEAgBSgCCBogBSgCABA4IAVBADYCCAsFIAtBADoAACAFIAsQXyAFQQA6AAsLIAUgCikCADcCACAFIAooAgg2AghBACEAA0AgAEEDRwRAIABBAnQgCmpBADYCACAAQQFqIQAMAQsLIAoQRyAKIAEgASgCACgCGEE/cUGyBWoRAwAgBiwAC0EASARAAn8gBigCACEPIAtBADoAACAPCyALEF8gBkEANgIEIAYsAAtBAEgEQCAGKAIIGiAGKAIAEDggBkEANgIICwUgC0EAOgAAIAYgCxBfIAZBADoACwsgBiAKKQIANwIAIAYgCigCCDYCCEEAIQADQCAAQQNHBEAgAEECdCAKakEANgIAIABBAWohAAwBCwsgChBHIAkgASABKAIAKAIkQf8AcUEIahEAADYCACAKJAYL2wIBB38jBiEDIwZBEGokBiAALAALIgVBAEgiBwR/IAAoAghB/////wdxQX9qIQQgACgCBAVBCiEEIAVB/wFxCyEGIAIgAWsiCARAAkAgBwR/IAAoAgQhBSAAKAIABSAFQf8BcSEFIAALIgchCSABIAUgB2pJIAkgAU1xBEAgA0IANwIAIANBADYCCCADIAEgAhD+AyAAIAMoAgAgAyADLAALIgBBAEgiARsgAygCBCAAQf8BcSABGxDjCSADEEcMAQsgBCAGayAISQRAIAAgBCAGIAhqIARrIAYgBhDdAgsgAiAGIAFraiEHIAYgACwAC0EASAR/IAAoAgAFIAALIgVqIQQDQCABIAJHBEAgBCABEF8gBEEBaiEEIAFBAWohAQwBCwsgA0EAOgAAIAUgB2ogAxBfIAYgCGohASAALAALQQBIBEAgACABNgIEBSAAIAE6AAsLCwsgAyQGC7UEAQh/IwYhACMGQYABaiQGIABB8ABqIgggADYCACAIQZEBNgIEIABB5ABqIgsgBBA7IAtBgM4DEDohByAAQfwAaiIKQQA6AAAgACACKAIAIgk2AmggBCgCBCEMIABB+ABqIgQgACgCaDYCACABIAQgAyALIAwgBSAKIAcgCCAAQewAaiAAQeQAahCoBARAIAYsAAtBAEgEQAJ/IAYoAgAhDSAEQQA6AAAgDQsgBBBfIAZBADYCBAUgBEEAOgAAIAYgBBBfIAZBADoACwsgCiwAAARAIAYgB0EtIAcoAgAoAhxBP3FBigFqEQIAEMwBCyAHQTAgBygCACgCHEE/cUGKAWoRAgAhBCAAKAJsIgdBf2ohCiAIKAIAIQMDQAJAIAMgCk8NACADLQAAIARB/wFxRw0AIANBAWohAwwBCwsgBiADIAcQsAoLIAEoAgAiAwR/IAMoAgwiBCADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAQsAAAQQgtBfxBBBH8gAUEANgIAQQEFIAEoAgBFCwVBAQshAwJAAkACQCAJRQ0AIAkoAgwiBCAJKAIQRgR/IAkgCSgCACgCJEH/AHFBCGoRAAAFIAQsAAAQQgtBfxBBBEAgAkEANgIADAEFIANFDQILDAILIAMNAAwBCyAFIAUoAgBBAnI2AgALIAEoAgAhDiALEDwgCCgCACEBIAhBADYCACABBEAgASAIKAIEQf8BcUGsA2oRAQALIAAkBiAOC/sTAhF/AXwjBiEUIwZBEGokBiAUIRAgAUECEDkhDSACQQIQOSEPIAQoAgAiByECIA0gD0F/aiIRbEEBdCAHaiEFA0AgCyANSARAIAVBADsBACACQQA7AQAgAkECaiECIAVBAmohBSALQQFqIQsMAQsLIAchAiANQX9qIhJBAXQgB2ohBUEAIQsDQCALIA9IBEAgBUEAOwEAIAJBADsBACANQQF0IAJqIQIgDUEBdCAFaiEFIAtBAWohCwwBCwsgBEGQgMgAaiECQQAgDWshEyAAIAFBAXRBAmpqIQ5BASEMQQAhBSANQQFqIgAgBCgCBGohCyAAQQF0IAdqIQcCfwJAA0ACQCAMIBFODQIgBSEAQQEhCQNAIAkgEkgEQCAOLQAAIANKBEACQCALQX86AAAgE0EBdCAHaiIFLgEAIgZBAEoEQCAHIAY7AQAgBkEHbCIFQQJ0IARqQfT/zwBqIgYgBigCAEEBajYCACAFQQJ0IARqQfj/zwBqIgYgCSAGKAIAajYCACAFQQJ0IARqQfz/zwBqIgYgDCAGKAIAajYCACAFQQJ0IARqQYyA0ABqIAw2AgAMAQsgBUF+ai4BACIGIQggBkEASiEKIAUuAQIiBUEATARAIAoEQCAHIAY7AQAgCEEHbCIFQQJ0IARqQfT/zwBqIgYgBigCAEEBajYCACAFQQJ0IARqQfj/zwBqIgYgCSAGKAIAajYCACAFQQJ0IARqQfz/zwBqIgYgDCAGKAIAajYCACAFQQJ0IARqQYSA0ABqIgYoAgAgCUgEQCAGIAk2AgALIAVBAnQgBGpBjIDQAGogDDYCAAwCCyAHQX5qLgEAIgVBAEoEQCAHIAU7AQAgBUEHbCIFQQJ0IARqQfT/zwBqIgYgBigCAEEBajYCACAFQQJ0IARqQfj/zwBqIgYgCSAGKAIAajYCACAFQQJ0IARqQfz/zwBqIgYgDCAGKAIAajYCACAFQQJ0IARqQYSA0ABqIgUoAgAgCU4NAiAFIAk2AgAFIABB//8BSg0GIAcgAEEBaiIFOwEAIARBkIDIAGogAEECdGogBUEQdEEQdTYCACAEQZCA0ABqIABBB2wiAEECdGpBATYCACAAQQJ0IARqQZSA0ABqIAk2AgAgAEECdCAEakGYgNAAaiAMNgIAIABBAnQgBGpBnIDQAGogCTYCACAAQQJ0IARqQaCA0ABqIAk2AgAgAEECdCAEakGkgNAAaiAMNgIAIABBAnQgBGpBqIDQAGogDDYCACAFIQALDAELIAoEQAJAIAVBAnQgBGpBjIDIAGooAgAiBSAIQQJ0IARqQYyAyABqKAIAIgZKBEAgByAGOwEAIAIhCEEAIQoDQCAKIABOBEAgBiEFDAMLIAUgCCgCAEYEQCAIIAY2AgALIAhBBGohCCAKQQFqIQoMAAALAAUgByAFOwEAIAUgBkgEQCACIQhBACEKA0AgCiAATg0DIAYgCCgCAEYEQCAIIAU2AgALIAhBBGohCCAKQQFqIQoMAAALAAsLCyAFQRB0QRB1QQdsIgVBAnQgBGpB9P/PAGoiBiAGKAIAQQFqNgIAIAVBAnQgBGpB+P/PAGoiBiAJIAYoAgBqNgIAIAVBAnQgBGpB/P/PAGoiBiAMIAYoAgBqNgIAIAVBAnQgBGpBjIDQAGogDDYCAAwBCyAHQX5qLgEAIgZBAEwEQCAHIAU7AQAgBUEHbCIFQQJ0IARqQfT/zwBqIgYgBigCAEEBajYCACAFQQJ0IARqQfj/zwBqIgYgCSAGKAIAajYCACAFQQJ0IARqQfz/zwBqIgYgDCAGKAIAajYCACAFQQJ0IARqQYCA0ABqIgYoAgAgCUoEQCAGIAk2AgALIAVBAnQgBGpBjIDQAGogDDYCAAwBCwJAIAVBAnQgBGpBjIDIAGooAgAiBSAGQQJ0IARqQYyAyABqKAIAIgZKBEAgByAGOwEAIAIhCEEAIQoDQCAKIABOBEAgBiEFDAMLIAUgCCgCAEYEQCAIIAY2AgALIAhBBGohCCAKQQFqIQoMAAALAAUgByAFOwEAIAUgBkgEQCACIQhBACEKA0AgCiAATg0DIAYgCCgCAEYEQCAIIAU2AgALIAhBBGohCCAKQQFqIQoMAAALAAsLCyAFQRB0QRB1QQdsIgVBAnQgBGpB9P/PAGoiBiAGKAIAQQFqNgIAIAVBAnQgBGpB+P/PAGoiBiAJIAYoAgBqNgIAIAVBAnQgBGpB/P/PAGoiBSAMIAUoAgBqNgIACwUgB0EAOwEAIAtBADoAAAsgDkECaiEOIAtBAWohCyAJQQFqIQkgB0ECaiEHDAELCyABIA5qQQRqIQ4gDEEBaiEMIAAhBSALQQJqIQsgB0EEaiEHDAELC0EAQQNBqKUBIBAQPUF/DAELIARBDGohB0EBIQBBASEDA0AgAyAFTARAIAMgAigCACILRgRAIABBAWohAQUgACEBIAtBAnQgBGpBjIDIAGooAgAhAAsgAiAANgIAIAEhACADQQFqIQMgAkEEaiECDAELCyAEIABBf2oiADYCCCAABH8gB0EAIABBAnQQRRogBEGQgChqQQAgAEEEdBBFGkEAIQEDQCABIABIBEAgBEGMgAhqIAFBAnQiAkECdGogDTYCACAEQYyACGogAkEBckECdGpBADYCACAEQYyACGogAkECckECdGogDzYCACAEQYyACGogAkEDckECdGpBADYCACABQQFqIQEMAQsLQQAhAQNAIAEgBUgEQCAEQQxqIARBkIDIAGogAUECdGooAgBBf2oiAkECdGoiAyAEQZCA0ABqIAFBB2wiAEECdGooAgAgAygCAGo2AgAgBEGQgChqIAJBAXQiA0EDdGoiByAHKwMAIABBAnQgBGpBlIDQAGooAgC3oDkDACAEQZCAKGogA0EBckEDdGoiAyADKwMAIABBAnQgBGpBmIDQAGooAgC3oDkDACAEQYyACGogAkECdCICQQJ0aiIDKAIAIABBAnQgBGpBnIDQAGooAgAiB0oEQCADIAc2AgALIARBjIAIaiACQQFyQQJ0aiIDKAIAIABBAnQgBGpBoIDQAGooAgAiB0gEQCADIAc2AgALIARBjIAIaiACQQJyQQJ0aiIDKAIAIABBAnQgBGpBpIDQAGooAgAiB0oEQCADIAc2AgALIARBjIAIaiACQQNyQQJ0aiICKAIAIABBAnQgBGpBqIDQAGooAgAiAEgEQCACIAA2AgALIAFBAWohAQwBCwsgBCgCCCEBQQAhAAN/IAAgAUgEfyAEQZCAKGogAEEBdCICQQN0aiIDIAMrAwAgBEEMaiAAQQJ0aigCALciFqM5AwAgBEGQgChqIAJBAXJBA3RqIgIgAisDACAWozkDACAAQQFqIQAMAQVBAAsLBUEACwshFSAQJAYgFQueBQELfyMGIQcjBkGAAmokBiAHQdgBaiEOIAchDyAHQegBaiIJIAdB8ABqIgo2AgAgCUGRATYCBCAHQeABaiINIAQQOyANQYDOAxA6IQAgB0H6AWoiDEEAOgAAIAcgAigCADYC3AEgBCgCBCELIAdB8AFqIgQgBygC3AE2AgAgASAEIAMgDSALIAUgDCAAIAkgB0HkAWogCkHkAGoQqAQEQCAAQfqcA0GEnQMgBCAAKAIAKAIgQQ9xQYoCahEJABogBygC5AEiCyAJKAIAIgprIgBB4gBKBEAgAEECahBEIgAhAyAABEAgACEIIAMhEAUQAAsFIA8hCAsgDCwAAARAIAhBLToAACAIQQFqIQgLIARBCmohAyAEIQwDQCAKIAtJBEAgCiwAACELIAQhAANAAkAgACADRgRAIAMhAAwBCyAALAAAIAtHBEAgAEEBaiEADAILCwsgCCAAIAxrQfqcA2osAAA6AAAgCkEBaiEKIAhBAWohCCAHKALkASELDAELCyAIQQA6AAAgDiAGNgIAIA9BhZ0DIA4QgwFBAUcEQBAACyAQBEAgEBA4CwsgASgCACIABH8gACgCDCIDIAAoAhBGBH8gACAAKAIAKAIkQf8AcUEIahEAAAUgAywAABBCC0F/EEEEfyABQQA2AgBBAQUgASgCAEULBUEBCyEDAkACQAJAIAIoAgAiAEUNACAAKAIMIgQgACgCEEYEfyAAIAAoAgAoAiRB/wBxQQhqEQAABSAELAAAEEILQX8QQQRAIAJBADYCAAwBBSADRQ0CCwwCCyADDQAMAQsgBSAFKAIAQQJyNgIACyABKAIAIREgDRA8IAkoAgAhACAJQQA2AgAgAARAIAAgCSgCBEH/AXFBrANqEQEACyAHJAYgEQuTAQECfyMGIQYjBkGAAWokBiAGQfQAaiIHIAZB5ABqNgIAIAAgBiAHIAMgBCAFEKwEIAZB6ABqIgNCADcDACAGQfAAaiIEIAY2AgAgAigCACABa0ECdSEFIAAoAgAQYiEAIAEgBCAFIAMQ/gIhAyAABEAgABBiGgsgA0F/RgRAEAAFIAIgA0ECdCABajYCACAGJAYLC7EBACMGIQIjBkGgA2okBiACQZADaiIDIAJBkANqNgIAIABBCGogAiADIAQgBSAGELQKIAMoAgAhBSACIQMgASgCACEAA0AgAyAFRwRAIAMoAgAhASAABH9BACAAIAAoAhgiBCAAKAIcRgR/IAAgASAAKAIAKAI0QT9xQYoBahECAAUgACAEQQRqNgIYIAQgATYCACABC0F/EEEbBUEACyEAIANBBGohAwwBCwsgAiQGIAALuQEAIwYhAiMGQfAAaiQGIAJB5ABqIgMgAkHkAGo2AgAgAEEIaiACIAMgBCAFIAYQrAQgAygCACEFIAIhAyABKAIAIQADQCADIAVHBEAgAywAACEBIAAEf0EAIAAgACgCGCIEIAAoAhxGBH8gACgCACgCNCEEIAAgARBCIARBP3FBigFqEQIABSAAIARBAWo2AhggBCABOgAAIAEQQgtBfxBBGwVBAAshACADQQFqIQMMAQsLIAIkBiAAC40EAQN/IAAoAgAiBAR/IAQoAgwiBSAEKAIQRgR/IAQgBCgCACgCJEH/AHFBCGoRAAAFIAUoAgALQX8QQQR/IABBADYCAEEBBSAAKAIARQsFQQELIQUCQAJAAkAgASgCACIEBEAgBCgCDCIGIAQoAhBGBH8gBCAEKAIAKAIkQf8AcUEIahEAAAUgBigCAAtBfxBBBEAgAUEANgIABSAFBEAMBAUMAwsACwsgBUUEQEEAIQQMAgsLIAIgAigCAEEGcjYCAAwBCyADIAAoAgAiBSgCDCIGIAUoAhBGBH8gBSAFKAIAKAIkQf8AcUEIahEAAAUgBigCAAtBACADKAIAKAI0QT9xQcoBahEEAEH/AXFBJUcEQCACIAIoAgBBBHI2AgAMAQsgACgCACIDKAIMIgUgAygCEEYEQCADIAMoAgAoAihB/wBxQQhqEQAAGgUgAyAFQQRqNgIMIAUoAgAaCyAAKAIAIgMEfyADKAIMIgUgAygCEEYEfyADIAMoAgAoAiRB/wBxQQhqEQAABSAFKAIAC0F/EEEEfyAAQQA2AgBBAQUgACgCAEULBUEBCyEAAkACQCAERQ0AIAQoAgwiAyAEKAIQRgR/IAQgBCgCACgCJEH/AHFBCGoRAAAFIAMoAgALQX8QQQRAIAFBADYCAAwBBSAADQMLDAELIABFDQELIAIgAigCAEECcjYCAAsLUgEBfyMGIQUjBkEQaiQGIAUgAigCADYCACAFQQRqIgIgBSgCADYCACABIAIgAyAEQQQQmQEhASADKAIAQQRxRQRAIAAgAUGUcWo2AgALIAUkBgthAQF/IwYhBSMGQRBqJAYgBSACKAIANgIAIAVBBGoiAiAFKAIANgIAIAEgAiADIARBARCZASEBIAMoAgAiAkEEcUUgAUEHSHEEQCAAIAE2AgAFIAMgAkEEcjYCAAsgBSQGC2EBAX8jBiEFIwZBEGokBiAFIAIoAgA2AgAgBUEEaiICIAUoAgA2AgAgASACIAMgBEECEJkBIQEgAygCACICQQRxRSABQT1IcQRAIAAgATYCAAUgAyACQQRyNgIACyAFJAYLqwIBBHxEAAAAAAAA8D8gASsDGCIDEOcEIgShIQIgAxDmBCEDIAAgBCABKwMAIgUgBaIgAqKgOQMAIAAgAiABKwMAIAErAwiioiADIAErAxCioTkDCCAAIAIgASsDACABKwMQoqIgAyABKwMIoqA5AxAgACABKwMgOQMYIAAgAiABKwMIIAErAwCioiADIAErAxCioDkDICAAIAQgAiABKwMIIgUgBaKioDkDKCAAIAIgASsDCCABKwMQoqIgAyABKwMAoqE5AzAgACABKwMoOQM4IABBQGsgAiABKwMQIAErAwCioiADIAErAwiioTkDACAAIAIgASsDECABKwMIoqIgAyABKwMAoqA5A0ggACAEIAIgASsDECICIAKioqA5A1AgACABKwMwOQNYC+IBAQR/IwYhByMGQRBqJAYgAEEIaiIAKAIAKAIIIQYgACAGQf8AcUEIahEAACIALAALIgZBAEgEfyAAKAIEBSAGQf8BcQshBiAHQQRqIQhBACAALAAXIglBAEgEfyAAKAIQBSAJQf8BcQtrIAZGBEAgBCAEKAIAQQRyNgIABQJAIAcgAygCADYCACAIIAcoAgA2AgAgAiAIIAAgAEEYaiAFIARBABCVAiAAayICRSABKAIAIgBBDEZxBEAgAUEANgIADAELIAJBDEYgAEEMSHEEQCABIABBDGo2AgALCwsgByQGC/YDAQN/A0ACQCAAKAIAIgQEfyAEKAIMIgUgBCgCEEYEfyAEIAQoAgAoAiRB/wBxQQhqEQAABSAFKAIAC0F/EEEEfyAAQQA2AgBBAQUgACgCAEULBUEBCyEFAkACQCABKAIAIgRFDQAgBCgCDCIGIAQoAhBGBH8gBCAEKAIAKAIkQf8AcUEIahEAAAUgBigCAAtBfxBBBEAgAUEANgIADAEFIAVFDQMLDAELIAUEf0EAIQQMAgVBAAshBAsgA0GAwAAgACgCACIFKAIMIgYgBSgCEEYEfyAFIAUoAgAoAiRB/wBxQQhqEQAABSAGKAIACyADKAIAKAIMQT9xQcoBahEEAEUNACAAKAIAIgQoAgwiBSAEKAIQRgRAIAQgBCgCACgCKEH/AHFBCGoRAAAaBSAEIAVBBGo2AgwgBSgCABoLDAELCyAAKAIAIgMEfyADKAIMIgUgAygCEEYEfyADIAMoAgAoAiRB/wBxQQhqEQAABSAFKAIAC0F/EEEEfyAAQQA2AgBBAQUgACgCAEULBUEBCyEAAkACQAJAIARFDQAgBCgCDCIDIAQoAhBGBH8gBCAEKAIAKAIkQf8AcUEIahEAAAUgAygCAAtBfxBBBEAgAUEANgIADAEFIABFDQILDAILIAANAAwBCyACIAIoAgBBAnI2AgALC2EBAX8jBiEFIwZBEGokBiAFIAIoAgA2AgAgBUEEaiICIAUoAgA2AgAgASACIAMgBEECEJkBIQEgAygCACICQQRxRSABQTxIcQRAIAAgATYCAAUgAyACQQRyNgIACyAFJAYLZAEBfyMGIQUjBkEQaiQGIAUgAigCADYCACAFQQRqIgIgBSgCADYCACABIAIgAyAEQQIQmQEhASADKAIAIgJBBHFFIAFBDUhxBEAgACABQX9qNgIABSADIAJBBHI2AgALIAUkBgtiAQF/IwYhBSMGQRBqJAYgBSACKAIANgIAIAVBBGoiAiAFKAIANgIAIAEgAiADIARBAxCZASEBIAMoAgAiAkEEcUUgAUHuAkhxBEAgACABNgIABSADIAJBBHI2AgALIAUkBgtkAQF/IwYhBSMGQRBqJAYgBSACKAIANgIAIAVBBGoiAiAFKAIANgIAIAEgAiADIARBAhCZASEBIAMoAgAiAkEEcUUgAUF/akEMSXEEQCAAIAE2AgAFIAMgAkEEcjYCAAsgBSQGC2EBAX8jBiEFIwZBEGokBiAFIAIoAgA2AgAgBUEEaiICIAUoAgA2AgAgASACIAMgBEECEJkBIQEgAygCACICQQRxRSABQRhIcQRAIAAgATYCAAUgAyACQQRyNgIACyAFJAYLZAEBfyMGIQUjBkEQaiQGIAUgAigCADYCACAFQQRqIgIgBSgCADYCACABIAIgAyAEQQIQmQEhASADKAIAIgJBBHFFIAFBf2pBH0lxBEAgACABNgIABSADIAJBBHI2AgALIAUkBguwAQECfCAAIAErAwAiAyADoiABKwMIIgIgAqKgIAErAxAiAiACoqAiAkQAAAAAAAAAAGEEfCAARAAAAAAAAPA/OQMAIABEAAAAAAAAAAA5AwhEAAAAAAAAAAAhAkQAAAAAAAAAAAUgACADIAKfIgKjOQMAIAAgASsDCCACozkDCCABKwMQIAKjCzkDECAAIAI5AxggACABKwMYOQMgIAAgASsDIDkDKCAAIAErAyg5AzAL9AEBAn9BkMADLAAARQRAQZDAAxBwBEBBsLsDIQADQCAAQgA3AgAgAEEANgIIQQAhAQNAIAFBA0cEQCABQQJ0IABqQQA2AgAgAUEBaiEBDAELCyAAQQxqIgBB2LwDRw0AC0GQwAMQbwsLQbC7A0GQmgEQVkG8uwNBrJoBEFZByLsDQciaARBWQdS7A0HomgEQVkHguwNBkJsBEFZB7LsDQbSbARBWQfi7A0HQmwEQVkGEvANB9JsBEFZBkLwDQYScARBWQZy8A0GUnAEQVkGovANBpJwBEFZBtLwDQbScARBWQcC8A0HEnAEQVkHMvANB1JwBEFYL2AIBAn9BgMADLAAARQRAQYDAAxBwBEBBkLkDIQADQCAAQgA3AgAgAEEANgIIQQAhAQNAIAFBA0cEQCABQQJ0IABqQQA2AgAgAUEBaiEBDAELCyAAQQxqIgBBsLsDRw0AC0GAwAMQbwsLQZC5A0GIlgEQVkGcuQNBqJYBEFZBqLkDQcyWARBWQbS5A0HklgEQVkHAuQNB/JYBEFZBzLkDQYyXARBWQdi5A0GglwEQVkHkuQNBtJcBEFZB8LkDQdCXARBWQfy5A0H4lwEQVkGIugNBmJgBEFZBlLoDQbyYARBWQaC6A0HgmAEQVkGsugNB8JgBEFZBuLoDQYCZARBWQcS6A0GQmQEQVkHQugNB/JYBEFZB3LoDQaCZARBWQei6A0GwmQEQVkH0ugNBwJkBEFZBgLsDQdCZARBWQYy7A0HgmQEQVkGYuwNB8JkBEFZBpLsDQYCaARBWC3wBAn9B8L8DLAAARQRAQfC/AxBwBEBB8LgDIQADQCAAQgA3AgAgAEEANgIIQQAhAQNAIAFBA0cEQCABQQJ0IABqQQA2AgAgAUEBaiEBDAELCyAAQQxqIgBBiLkDRw0AC0HwvwMQbwsLQfC4A0HwlQEQVkH8uANB/JUBEFYLRABByL8DLAAARQRAQci/AxBwBEBBjM8DQgA3AgBBlM8DQQA2AgBBjM8DQaSUAUGklAEQtAEQywFByL8DEG8LC0GMzwMLRABB0L8DLAAARQRAQdC/AxBwBEBBmM8DQgA3AgBBoM8DQQA2AgBBmM8DQciUAUHIlAEQtAEQywFB0L8DEG8LC0GYzwMLRABB2L8DLAAARQRAQdi/AxBwBEBBpM8DQgA3AgBBrM8DQQA2AgBBpM8DQeyUAUHslAEQtAEQywFB2L8DEG8LC0GkzwMLRABB4L8DLAAARQRAQeC/AxBwBEBBsM8DQgA3AgBBuM8DQQA2AgBBsM8DQZyVAUGclQEQtAEQywFB4L8DEG8LC0GwzwMLMQBB6L8DLAAARQRAQei/AxBwBEAQxwpBvM8DQfC4AzYCAEHovwMQbwsLQbzPAygCAAsxAEH4vwMsAABFBEBB+L8DEHAEQBDGCkHAzwNBkLkDNgIAQfi/AxBvCwtBwM8DKAIACzEAQYjAAywAAEUEQEGIwAMQcARAEMUKQcTPA0GwuwM2AgBBiMADEG8LC0HEzwMoAgALggwBBX8jBiEHIwZBkAFqJAYgB0HwAGohCiAHQUBrIQsgBEEANgIAIAdBgAFqIgggAxA7IAhBoM4DEDohCSAIEDwCfwJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIAZBGHRBGHVBJWsOVRYXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcAARcEFwUXBgcXFxcKFxcXFw4PEBcXFxMVFxcXFxcXFwABAgMDFxcBFwgXFwkLFwwXDRcLFxcREhQXCyAHIAIoAgA2AnwgCCAHKAJ8NgIAIAAgBUEYaiABIAggBCAJELEEDBcLIAcgAigCADYCeCAIIAcoAng2AgAgACAFQRBqIAEgCCAEIAkQsAQMFgsgAEEIaiIGKAIAKAIMIQkgBiAJQf8AcUEIahEAACEGIAcgASgCADYCdCAHIAIoAgA2AmwgBigCACAGIAYsAAsiCUEASCILGyECIAYoAgQgCUH/AXEgCxtBAnQgAmohBiAKIAcoAnQ2AgAgCCAHKAJsNgIAIAEgACAKIAggAyAEIAUgAiAGEKMBNgIADBULIAcgAigCADYCaCAIIAcoAmg2AgAgBUEMaiABIAggBCAJEMMKDBQLIAcgASgCADYCZCAHIAIoAgA2AmAgCiAHKAJkNgIAIAggBygCYDYCACABIAAgCiAIIAMgBCAFQaDwAEHA8AAQowE2AgAMEwsgByABKAIANgJcIAcgAigCADYCWCAKIAcoAlw2AgAgCCAHKAJYNgIAIAEgACAKIAggAyAEIAVBwPAAQeDwABCjATYCAAwSCyAHIAIoAgA2AlQgCCAHKAJUNgIAIAVBCGogASAIIAQgCRDCCgwRCyAHIAIoAgA2AlAgCCAHKAJQNgIAIAVBCGogASAIIAQgCRDBCgwQCyAHIAIoAgA2AkwgCCAHKAJMNgIAIAVBHGogASAIIAQgCRDACgwPCyAHIAIoAgA2AkggCCAHKAJINgIAIAVBEGogASAIIAQgCRC/CgwOCyAHIAIoAgA2AkQgCCAHKAJENgIAIAVBBGogASAIIAQgCRC+CgwNCyALIAIoAgA2AgAgCCALKAIANgIAIAEgCCAEIAkQvQoMDAsgByACKAIANgI8IAggBygCPDYCACAAIAVBCGogASAIIAQgCRC8CgwLCyAHIAEoAgA2AjggByACKAIANgI0IAogBygCODYCACAIIAcoAjQ2AgAgASAAIAogCCADIAQgBUHg8ABBjPEAEKMBNgIADAoLIAcgASgCADYCMCAHIAIoAgA2AiwgCiAHKAIwNgIAIAggBygCLDYCACABIAAgCiAIIAMgBCAFQZDxAEGk8QAQowE2AgAMCQsgByACKAIANgIoIAggBygCKDYCACAFIAEgCCAEIAkQugoMCAsgByABKAIANgIkIAcgAigCADYCICAKIAcoAiQ2AgAgCCAHKAIgNgIAIAEgACAKIAggAyAEIAVBsPEAQdDxABCjATYCAAwHCyAHIAIoAgA2AhwgCCAHKAIcNgIAIAVBGGogASAIIAQgCRC5CgwGCyAAKAIAKAIUIQYgByABKAIANgIYIAcgAigCADYCFCAKIAcoAhg2AgAgCCAHKAIUNgIAIAAgCiAIIAMgBCAFIAZBP3FBxgJqEQoADAYLIABBCGoiBigCACgCGCEJIAYgCUH/AHFBCGoRAAAhBiAHIAEoAgA2AhAgByACKAIANgIMIAYoAgAgBiAGLAALIglBAEgiCxshAiAGKAIEIAlB/wFxIAsbQQJ0IAJqIQYgCiAHKAIQNgIAIAggBygCDDYCACABIAAgCiAIIAMgBCAFIAIgBhCjATYCAAwECyAHIAIoAgA2AgggCCAHKAIINgIAIAVBFGogASAIIAQgCRCvBAwDCyAHIAIoAgA2AgQgCCAHKAIENgIAIAVBFGogASAIIAQgCRC4CgwCCyAHIAIoAgA2AgAgCCAHKAIANgIAIAEgCCAEIAkQtwoMAQsgBCAEKAIAQQRyNgIACyABKAIACyEMIAckBiAMC1kBA38jBiEGIwZBEGokBiAGQQRqIgcgAxA7IAdBoM4DEDohAyAHEDwgBiACKAIANgIAIAcgBigCADYCACAFQRRqIAEgByAEIAMQrwQgASgCACEIIAYkBiAIC1sBA38jBiEGIwZBEGokBiAGQQRqIgcgAxA7IAdBoM4DEDohAyAHEDwgBiACKAIANgIAIAcgBigCADYCACAAIAVBEGogASAHIAQgAxCwBCABKAIAIQggBiQGIAgLWwEDfyMGIQYjBkEQaiQGIAZBBGoiByADEDsgB0GgzgMQOiEDIAcQPCAGIAIoAgA2AgAgByAGKAIANgIAIAAgBUEYaiABIAcgBCADELEEIAEoAgAhCCAGJAYgCAunAQEEfyMGIQcjBkEQaiQGIABBCGoiBigCACgCFCEIIAYgCEH/AHFBCGoRAAAhBiAHIAEoAgA2AgQgByACKAIANgIAIAYoAgAgBiAGLAALIgJBAEgiCBshASAGKAIEIAJB/wFxIAgbQQJ0IAFqIQIgB0EIaiIGIAcoAgQ2AgAgB0EMaiIIIAcoAgA2AgAgACAGIAggAyAEIAUgASACEKMBIQkgByQGIAkLYAECfyMGIQYjBkEQaiQGIAYgASgCADYCBCAGIAIoAgA2AgAgBkEIaiIBIAYoAgQ2AgAgBkEMaiICIAYoAgA2AgAgACABIAIgAyAEIAVB0PEAQfDxABCjASEHIAYkBiAHC50EAQN/IAAoAgAiBAR/IAQoAgwiBSAEKAIQRgR/IAQgBCgCACgCJEH/AHFBCGoRAAAFIAUsAAAQQgtBfxBBBH8gAEEANgIAQQEFIAAoAgBFCwVBAQshBQJAAkACQCABKAIAIgQEQCAEKAIMIgYgBCgCEEYEfyAEIAQoAgAoAiRB/wBxQQhqEQAABSAGLAAAEEILQX8QQQRAIAFBADYCAAUgBQRADAQFDAMLAAsLIAVFBEBBACEEDAILCyACIAIoAgBBBnI2AgAMAQsgAyAAKAIAIgUoAgwiBiAFKAIQRgR/IAUgBSgCACgCJEH/AHFBCGoRAAAFIAYsAAAQQgtB/wFxQQAgAygCACgCJEE/cUHKAWoRBABB/wFxQSVHBEAgAiACKAIAQQRyNgIADAELIAAoAgAiAygCDCIFIAMoAhBGBEAgAyADKAIAKAIoQf8AcUEIahEAABoFIAMgBUEBajYCDCAFLAAAEEIaCyAAKAIAIgMEfyADKAIMIgUgAygCEEYEfyADIAMoAgAoAiRB/wBxQQhqEQAABSAFLAAAEEILQX8QQQR/IABBADYCAEEBBSAAKAIARQsFQQELIQACQAJAIARFDQAgBCgCDCIDIAQoAhBGBH8gBCAEKAIAKAIkQf8AcUEIahEAAAUgAywAABBCC0F/EEEEQCABQQA2AgAMAQUgAA0DCwwBCyAARQ0BCyACIAIoAgBBAnI2AgALC1IBAX8jBiEFIwZBEGokBiAFIAIoAgA2AgAgBUEEaiICIAUoAgA2AgAgASACIAMgBEEEEJoBIQEgAygCAEEEcUUEQCAAIAFBlHFqNgIACyAFJAYLYQEBfyMGIQUjBkEQaiQGIAUgAigCADYCACAFQQRqIgIgBSgCADYCACABIAIgAyAEQQEQmgEhASADKAIAIgJBBHFFIAFBB0hxBEAgACABNgIABSADIAJBBHI2AgALIAUkBgthAQF/IwYhBSMGQRBqJAYgBSACKAIANgIAIAVBBGoiAiAFKAIANgIAIAEgAiADIARBAhCaASEBIAMoAgAiAkEEcUUgAUE9SHEEQCAAIAE2AgAFIAMgAkEEcjYCAAsgBSQGC+IBAQR/IwYhByMGQRBqJAYgAEEIaiIAKAIAKAIIIQYgACAGQf8AcUEIahEAACIALAALIgZBAEgEfyAAKAIEBSAGQf8BcQshBiAHQQRqIQhBACAALAAXIglBAEgEfyAAKAIQBSAJQf8BcQtrIAZGBEAgBCAEKAIAQQRyNgIABQJAIAcgAygCADYCACAIIAcoAgA2AgAgAiAIIAAgAEEYaiAFIARBABCWAiAAayICRSABKAIAIgBBDEZxBEAgAUEANgIADAELIAJBDEYgAEEMSHEEQCABIABBDGo2AgALCwsgByQGC5QEAQN/A0ACQCAAKAIAIgQEfyAEKAIMIgUgBCgCEEYEfyAEIAQoAgAoAiRB/wBxQQhqEQAABSAFLAAAEEILQX8QQQR/IABBADYCAEEBBSAAKAIARQsFQQELIQUCQAJAIAEoAgAiBEUNACAEKAIMIgYgBCgCEEYEfyAEIAQoAgAoAiRB/wBxQQhqEQAABSAGLAAAEEILQX8QQQRAIAFBADYCAAwBBSAFRQ0DCwwBCyAFBH9BACEEDAIFQQALIQQLIAAoAgAiBSgCDCIGIAUoAhBGBH8gBSAFKAIAKAIkQf8AcUEIahEAAAUgBiwAABBCCyIFQf8BcUEYdEEYdUF/TA0AIAMoAgggBUEYdEEYdUEBdGouAQBBgMAAcUUNACAAKAIAIgQoAgwiBSAEKAIQRgRAIAQgBCgCACgCKEH/AHFBCGoRAAAaBSAEIAVBAWo2AgwgBSwAABBCGgsMAQsLIAAoAgAiAwR/IAMoAgwiBSADKAIQRgR/IAMgAygCACgCJEH/AHFBCGoRAAAFIAUsAAAQQgtBfxBBBH8gAEEANgIAQQEFIAAoAgBFCwVBAQshAAJAAkACQCAERQ0AIAQoAgwiAyAEKAIQRgR/IAQgBCgCACgCJEH/AHFBCGoRAAAFIAMsAAAQQgtBfxBBBEAgAUEANgIADAEFIABFDQILDAILIAANAAwBCyACIAIoAgBBAnI2AgALC2EBAX8jBiEFIwZBEGokBiAFIAIoAgA2AgAgBUEEaiICIAUoAgA2AgAgASACIAMgBEECEJoBIQEgAygCACICQQRxRSABQTxIcQRAIAAgATYCAAUgAyACQQRyNgIACyAFJAYLZAEBfyMGIQUjBkEQaiQGIAUgAigCADYCACAFQQRqIgIgBSgCADYCACABIAIgAyAEQQIQmgEhASADKAIAIgJBBHFFIAFBDUhxBEAgACABQX9qNgIABSADIAJBBHI2AgALIAUkBgtiAQF/IwYhBSMGQRBqJAYgBSACKAIANgIAIAVBBGoiAiAFKAIANgIAIAEgAiADIARBAxCaASEBIAMoAgAiAkEEcUUgAUHuAkhxBEAgACABNgIABSADIAJBBHI2AgALIAUkBgtkAQF/IwYhBSMGQRBqJAYgBSACKAIANgIAIAVBBGoiAiAFKAIANgIAIAEgAiADIARBAhCaASEBIAMoAgAiAkEEcUUgAUF/akEMSXEEQCAAIAE2AgAFIAMgAkEEcjYCAAsgBSQGC2EBAX8jBiEFIwZBEGokBiAFIAIoAgA2AgAgBUEEaiICIAUoAgA2AgAgASACIAMgBEECEJoBIQEgAygCACICQQRxRSABQRhIcQRAIAAgATYCAAUgAyACQQRyNgIACyAFJAYL8QQBAX8gAEIANwMAIABCADcDCCAAQgA3AxAgAEIANwMYIABCADcDICAAQgA3AyggAEIANwMwIABCADcDOCAAQUBrRAAAAAAAAPC/OQMAIABCADcDSCAAQgA3A1AgAEIANwNYIABCADcDYCAARAAAAAAAAPA/OQNoIABCADcDcCAAQgA3A3ggAEIANwOAASAAQgA3A4gBIABCADcDkAEgAEIANwOYASAARAAAAAAAAPA/OQOgASAAQagBaiIBQgA3AwAgAUIANwMIIAFCADcDECABQgA3AxggAUIANwMgIAFCADcDKCABQgA3AzAgAUIANwM4IAFBQGtCADcDACAARAAAAAAAAPC/OQPwASAAQgA3A/gBIABCADcDgAIgAEIANwOIAiAAQgA3A5ACIABCADcDmAIgAEIANwOgAiAARAAAAAAAAPC/OQOoAiAAQgA3A7ACIABCADcDuAIgAEIANwPAAiAAQgA3A8gCIABEAAAAAAAA8D85A9ACIABB2AJqIgFCADcDACABQgA3AwggAUIANwMQIAFCADcDGCABQgA3AyAgAUIANwMoIAFCADcDMCABQgA3AzggAUFAa0IANwMAIAFCADcDSCABQgA3A1AgAUIANwNYIAFCADcDYCABQgA3A2ggAEQAAAAAAADwPzkDyAMgAEIANwPQAyAAQgA3A9gDIABCADcD4AMgAEIANwPoAyAAQgA3A/ADIABCADcD+AMgAEQAAAAAAADwPzkDgAQgAEIANwOIBCAAQgA3A5AEIABCADcDmAQgAEIANwOgBCAAQgA3A6gEIABCADcDsAQgAEQAAAAAAADwPzkDuAQLZAEBfyMGIQUjBkEQaiQGIAUgAigCADYCACAFQQRqIgIgBSgCADYCACABIAIgAyAEQQIQmgEhASADKAIAIgJBBHFFIAFBf2pBH0lxBEAgACABNgIABSADIAJBBHI2AgALIAUkBgv0AQECf0HAvwMsAABFBEBBwL8DEHAEQEHAtwMhAANAIABCADcCACAAQQA2AghBACEBA0AgAUEDRwRAIAFBAnQgAGpBADYCACABQQFqIQEMAQsLIABBDGoiAEHouANHDQALQcC/AxBvCwtBwLcDQfCXAxBXQcy3A0H3lwMQV0HYtwNB/pcDEFdB5LcDQYaYAxBXQfC3A0GQmAMQV0H8twNBmZgDEFdBiLgDQaCYAxBXQZS4A0GpmAMQV0GguANBrZgDEFdBrLgDQbGYAxBXQbi4A0G1mAMQV0HEuANBuZgDEFdB0LgDQb2YAxBXQdy4A0HBmAMQVwvYAgECf0GwvwMsAABFBEBBsL8DEHAEQEGgtQMhAANAIABCADcCACAAQQA2AghBACEBA0AgAUEDRwRAIAFBAnQgAGpBADYCACABQQFqIQEMAQsLIABBDGoiAEHAtwNHDQALQbC/AxBvCwtBoLUDQe6WAxBXQay1A0H2lgMQV0G4tQNB/5YDEFdBxLUDQYWXAxBXQdC1A0GLlwMQV0HctQNBj5cDEFdB6LUDQZSXAxBXQfS1A0GZlwMQV0GAtgNBoJcDEFdBjLYDQaqXAxBXQZi2A0GylwMQV0GktgNBu5cDEFdBsLYDQcSXAxBXQby2A0HIlwMQV0HItgNBzJcDEFdB1LYDQdCXAxBXQeC2A0GLlwMQV0HstgNB1JcDEFdB+LYDQdiXAxBXQYS3A0HclwMQV0GQtwNB4JcDEFdBnLcDQeSXAxBXQai3A0HolwMQV0G0twNB7JcDEFcLfAECf0GgvwMsAABFBEBBoL8DEHAEQEGAtQMhAANAIABCADcCACAAQQA2AghBACEBA0AgAUEDRwRAIAFBAnQgAGpBADYCACABQQFqIQEMAQsLIABBDGoiAEGYtQNHDQALQaC/AxBvCwtBgLUDQeiWAxBXQYy1A0HrlgMQVwtCAEH4vgMsAABFBEBB+L4DEHAEQEHIzgNCADcCAEHQzgNBADYCAEHIzgNBtZYDQbWWAxBgEH5B+L4DEG8LC0HIzgMLQgBBgL8DLAAARQRAQYC/AxBwBEBB1M4DQgA3AgBB3M4DQQA2AgBB1M4DQb6WA0G+lgMQYBB+QYC/AxBvCwtB1M4DC0IAQYi/AywAAEUEQEGIvwMQcARAQeDOA0IANwIAQejOA0EANgIAQeDOA0HHlgNBx5YDEGAQfkGIvwMQbwsLQeDOAwupAgEGfCABKwMYIAErAwAiCCACKwMAIgSiIAErAwggAisDCCIHoqAgASsDECACKwMQIgOioKAhBSABKwM4IAQgASsDIKIgByABKwMooqAgAyABKwMwoqCgIQYgASsDWCAEIAFBQGsiAisDACIEoiAHIAErA0iioCADIAErA1CioKAiA0QAAAAAAAAAAGEEf0F/BSAAIAggA6IgBSAEoqEgAyADoiIEozkDACAAIAMgASsDCKIgBSABKwNIoqEgBKM5AwggACADIAErAxCiIAUgASsDUKKhIASjOQMQIAAgAyABKwMgoiAGIAIrAwCioSAEozkDGCAAIAMgASsDKKIgBiABKwNIoqEgBKM5AyAgACADIAErAzCiIAYgASsDUKKhIASjOQMoQQALC0IAQZC/AywAAEUEQEGQvwMQcARAQezOA0IANwIAQfTOA0EANgIAQezOA0HTlgNB05YDEGAQfkGQvwMQbwsLQezOAwsxAEGYvwMsAABFBEBBmL8DEHAEQBDkCkH4zgNBgLUDNgIAQZi/AxBvCwtB+M4DKAIACzEAQai/AywAAEUEQEGovwMQcARAEOMKQfzOA0GgtQM2AgBBqL8DEG8LC0H8zgMoAgALMQBBuL8DLAAARQRAQbi/AxBwBEAQ4gpBgM8DQcC3AzYCAEG4vwMQbwsLQYDPAygCAAv4CwEFfyMGIQcjBkGQAWokBiAHQfAAaiEKIAdBQGshCyAEQQA2AgAgB0GAAWoiCCADEDsgCEGAzgMQOiEJIAgQPAJ/AkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgBkEYdEEYdUElaw5VFhcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwABFwQXBRcGBxcXFwoXFxcXDg8QFxcXExUXFxcXFxcXAAECAwMXFwEXCBcXCQsXDBcNFwsXFxESFBcLIAcgAigCADYCfCAIIAcoAnw2AgAgACAFQRhqIAEgCCAEIAkQtgQMFwsgByACKAIANgJ4IAggBygCeDYCACAAIAVBEGogASAIIAQgCRC1BAwWCyAAQQhqIgYoAgAoAgwhCSAGIAlB/wBxQQhqEQAAIQYgByABKAIANgJ0IAcgAigCADYCbCAGKAIAIAYgBiwACyICQQBIIgkbIgsgBigCBCACQf8BcSAJG2ohAiAKIAcoAnQ2AgAgCCAHKAJsNgIAIAEgACAKIAggAyAEIAUgCyACEKQBNgIADBULIAcgAigCADYCaCAIIAcoAmg2AgAgBUEMaiABIAggBCAJEOEKDBQLIAcgASgCADYCZCAHIAIoAgA2AmAgCiAHKAJkNgIAIAggBygCYDYCACABIAAgCiAIIAMgBCAFQcWYA0HNmAMQpAE2AgAMEwsgByABKAIANgJcIAcgAigCADYCWCAKIAcoAlw2AgAgCCAHKAJYNgIAIAEgACAKIAggAyAEIAVBzZgDQdWYAxCkATYCAAwSCyAHIAIoAgA2AlQgCCAHKAJUNgIAIAVBCGogASAIIAQgCRDfCgwRCyAHIAIoAgA2AlAgCCAHKAJQNgIAIAVBCGogASAIIAQgCRDeCgwQCyAHIAIoAgA2AkwgCCAHKAJMNgIAIAVBHGogASAIIAQgCRDdCgwPCyAHIAIoAgA2AkggCCAHKAJINgIAIAVBEGogASAIIAQgCRDcCgwOCyAHIAIoAgA2AkQgCCAHKAJENgIAIAVBBGogASAIIAQgCRDbCgwNCyALIAIoAgA2AgAgCCALKAIANgIAIAEgCCAEIAkQ2goMDAsgByACKAIANgI8IAggBygCPDYCACAAIAVBCGogASAIIAQgCRDZCgwLCyAHIAEoAgA2AjggByACKAIANgI0IAogBygCODYCACAIIAcoAjQ2AgAgASAAIAogCCADIAQgBUHVmANB4JgDEKQBNgIADAoLIAcgASgCADYCMCAHIAIoAgA2AiwgCiAHKAIwNgIAIAggBygCLDYCACABIAAgCiAIIAMgBCAFQeCYA0HlmAMQpAE2AgAMCQsgByACKAIANgIoIAggBygCKDYCACAFIAEgCCAEIAkQ2AoMCAsgByABKAIANgIkIAcgAigCADYCICAKIAcoAiQ2AgAgCCAHKAIgNgIAIAEgACAKIAggAyAEIAVB5ZgDQe2YAxCkATYCAAwHCyAHIAIoAgA2AhwgCCAHKAIcNgIAIAVBGGogASAIIAQgCRDXCgwGCyAAKAIAKAIUIQYgByABKAIANgIYIAcgAigCADYCFCAKIAcoAhg2AgAgCCAHKAIUNgIAIAAgCiAIIAMgBCAFIAZBP3FBxgJqEQoADAYLIABBCGoiBigCACgCGCEJIAYgCUH/AHFBCGoRAAAhBiAHIAEoAgA2AhAgByACKAIANgIMIAYoAgAgBiAGLAALIgJBAEgiCRsiCyAGKAIEIAJB/wFxIAkbaiECIAogBygCEDYCACAIIAcoAgw2AgAgASAAIAogCCADIAQgBSALIAIQpAE2AgAMBAsgByACKAIANgIIIAggBygCCDYCACAFQRRqIAEgCCAEIAkQtAQMAwsgByACKAIANgIEIAggBygCBDYCACAFQRRqIAEgCCAEIAkQ1goMAgsgByACKAIANgIAIAggBygCADYCACABIAggBCAJENUKDAELIAQgBCgCAEEEcjYCAAsgASgCAAshDCAHJAYgDAtZAQN/IwYhBiMGQRBqJAYgBkEEaiIHIAMQOyAHQYDOAxA6IQMgBxA8IAYgAigCADYCACAHIAYoAgA2AgAgBUEUaiABIAcgBCADELQEIAEoAgAhCCAGJAYgCAtbAQN/IwYhBiMGQRBqJAYgBkEEaiIHIAMQOyAHQYDOAxA6IQMgBxA8IAYgAigCADYCACAHIAYoAgA2AgAgACAFQRBqIAEgByAEIAMQtQQgASgCACEIIAYkBiAIC1sBA38jBiEGIwZBEGokBiAGQQRqIgcgAxA7IAdBgM4DEDohAyAHEDwgBiACKAIANgIAIAcgBigCADYCACAAIAVBGGogASAHIAQgAxC2BCABKAIAIQggBiQGIAgLogEBBH8jBiEHIwZBEGokBiAAQQhqIgYoAgAoAhQhCCAGIAhB/wBxQQhqEQAAIQYgByABKAIANgIEIAcgAigCADYCACAGKAIAIAYgBiwACyIBQQBIIgIbIgggBigCBCABQf8BcSACG2ohASAHQQhqIgIgBygCBDYCACAHQQxqIgYgBygCADYCACAAIAIgBiADIAQgBSAIIAEQpAEhCSAHJAYgCQtgAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACAAIAEgAiADIAQgBUHtmANB9ZgDEKQBIQcgBiQGIAcL3wUCA38GfCMGIQUjBkHgBmokBiABIAIrAxggAisDACADKwMAoiACKwMIIAMrAwgiCKKgIAIrAxAgAysDECIJoqCgOQMAIAEgAisDOCACKwMgIAMrAwAiB6IgCCACKwMooqAgCSACKwMwoqCgOQMIIAEgAisDWCAHIAJBQGsiBCsDAKIgAisDSCADKwMIIgiioCAJIAIrA1CioKA5AxAgBUHABGoiASAHIAIrAwAiCqI5AwAgASAIIAqiOQMIIAEgCiADKwMQIgmiOQMQIAEgByACKwMIIguiOQMYIAEgCCALojkDICABIAkgC6I5AyggASAHIAIrAxAiDKI5AzAgASAIIAyiOQM4IAFBQGsgCSAMojkDACABIAo5A0ggASALOQNQIAEgDDkDWCABIAcgAisDICIKojkDYCABIAggCqI5A2ggASAJIAqiOQNwIAEgByACKwMoIguiOQN4IAEgCCALojkDgAEgASAJIAuiOQOIASABIAcgAisDMCIMojkDkAEgASAIIAyiOQOYASABIAkgDKI5A6ABIAEgCjkDqAEgASALOQOwASABIAw5A7gBIAEgByAEKwMAIgqiOQPAASABIAggCqI5A8gBIAEgCSAKojkD0AEgASAHIAIrA0giC6I5A9gBIAEgCCALojkD4AEgASAJIAuiOQPoASABIAcgAisDUCIHojkD8AEgASAIIAeiOQP4ASABIAkgB6I5A4ACIAEgCjkDiAIgASALOQOQAiABIAc5A5gCIAUQ4Ap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B/wBxQQhqEQAABSADLAAAEEILQX8QQQRAIAJBADYCAAwBBSAARQ0CCwwCCyAADQAMAQsgBCAEKAIAQQJyNgIACyABKAIAIRMgBhBHIAsQRyAIJAYgEwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQoAshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQnwshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQngshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQnQshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQmwshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQmgshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQmQshByAGJAYgBwvtAgEEfyMGIQYjBkEwaiQGIAZBKGohByAGQSBqIQggAygCBEEBcQRAIAcgAxA7IAdBgM4DEDohCSAHEDwgByADEDsgB0GQzgMQOiEDIAcQPCADKAIAKAIYIQAgBiADIABBP3FBsgVqEQMAIAMoAgAoAhwhACAGQQxqIAMgAEE/cUGyBWoRAwAgBiACKAIANgIYIAcgBigCGDYCACAFIAEgByAGIAZBGGoiACAJIARBARCWAiAGRjoAACABKAIAIQEDQCAAQXRqIgAQRyA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AAAB7AAAAfAAAAH0AAAB+AAAAfwBBoNQAC6ECCgAAAGQAAADoAwAAECcAAKCGAQBAQg8AgJaYAADh9QX/////////////////////////////////////////////////////////////////AAECAwQFBgcICf////////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI////////woLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIj/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wBB0NYACxgRAAoAERERAAAAAAUAAAAAAAAJAAAAAAsAQfDWAAshEQAPChEREQMKBwABEwkLCwAACQYLAAALAAYRAAAAERERAEGh1wALAQsAQarXAAsYEQAKChEREQAKAAACAAkLAAAACQALAAALAEHb1wALAQwAQefXAAsVDAAAAAAMAAAAAAkMAAAAAAAMAAAMAEGV2AALAQ4AQaHYAAsVDQAAAAQNAAAAAAkOAAAAAAAOAAAOAEHP2AALARAAQdvYAAseDwAAAAAPAAAAAAkQAAAAAAAQAAAQAAASAAAAEhISAEGS2QALDhIAAAASEhIAAAAAAAAJAEHD2QALAQsAQc/ZAAsVCgAAAAAKAAAAAAkLAAAAAAALAAALAEH92QALAQwAQYnaAAt+DAAAAAAMAAAAAAkMAAAAAAAMAAAMAAAwMTIzNDU2Nzg5QUJDREVGGRJEOwI/LEcUPTMwChsGRktFNw9JDo4XA0AdPGkrNh9KLRwBICUpIQgMFRYiLhA4Pgs0MRhkdHV2L0EJfzkRI0MyQomKiwUEJignDSoeNYwHGkiTE5SVAEGQ2wAL1w5JbGxlZ2FsIGJ5dGUgc2VxdWVuY2UARG9tYWluIGVycm9yAFJlc3VsdCBub3QgcmVwcmVzZW50YWJsZQBOb3QgYSB0dHkAUGVybWlzc2lvbiBkZW5pZWQAT3BlcmF0aW9uIG5vdCBwZXJtaXR0ZWQATm8gc3VjaCBmaWxlIG9yIGRpcmVjdG9yeQBObyBzdWNoIHByb2Nlc3MARmlsZSBleGlzdHMAVmFsdWUgdG9vIGxhcmdlIGZvciBkYXRhIHR5cGUATm8gc3BhY2UgbGVmdCBvbiBkZXZpY2UAT3V0IG9mIG1lbW9yeQBSZXNvdXJjZSBidXN5AEludGVycnVwdGVkIHN5c3RlbSBjYWxsAFJlc291cmNlIHRlbXBvcmFyaWx5IHVuYXZhaWxhYmxlAEludmFsaWQgc2VlawBDcm9zcy1kZXZpY2UgbGluawBSZWFkLW9ubHkgZmlsZSBzeXN0ZW0ARGlyZWN0b3J5IG5vdCBlbXB0eQBDb25uZWN0aW9uIHJlc2V0IGJ5IHBlZXIAT3BlcmF0aW9uIHRpbWVkIG91dABDb25uZWN0aW9uIHJlZnVzZWQASG9zdCBpcyBkb3duAEhvc3QgaXMgdW5yZWFjaGFibGUAQWRkcmVzcyBpbiB1c2UAQnJva2VuIHBpcGUASS9PIGVycm9yAE5vIHN1Y2ggZGV2aWNlIG9yIGFkZHJlc3MAQmxvY2sgZGV2aWNlIHJlcXVpcmVkAE5vIHN1Y2ggZGV2aWNlAE5vdCBhIGRpcmVjdG9yeQBJcyBhIGRpcmVjdG9yeQBUZXh0IGZpbGUgYnVzeQBFeGVjIGZvcm1hdCBlcnJvcgBJbnZhbGlkIGFyZ3VtZW50AEFyZ3VtZW50IGxpc3QgdG9vIGxvbmcAU3ltYm9saWMgbGluayBsb29wAEZpbGVuYW1lIHRvbyBsb25nAFRvbyBtYW55IG9wZW4gZmlsZXMgaW4gc3lzdGVtAE5vIGZpbGUgZGVzY3JpcHRvcnMgYXZhaWxhYmxlAEJhZCBmaWxlIGRlc2NyaXB0b3IATm8gY2hpbGQgcHJvY2VzcwBCYWQgYWRkcmVzcwBGaWxlIHRvbyBsYXJnZQBUb28gbWFueSBsaW5rcwBObyBsb2NrcyBhdmFpbGFibGUAUmVzb3VyY2UgZGVhZGxvY2sgd291bGQgb2NjdXIAU3RhdGUgbm90IHJlY292ZXJhYmxlAFByZXZpb3VzIG93bmVyIGRpZWQAT3BlcmF0aW9uIGNhbmNlbGVkAEZ1bmN0aW9uIG5vdCBpbXBsZW1lbnRlZABObyBtZXNzYWdlIG9mIGRlc2lyZWQgdHlwZQBJZGVudGlmaWVyIHJlbW92ZWQARGV2aWNlIG5vdCBhIHN0cmVhbQBObyBkYXRhIGF2YWlsYWJsZQBEZXZpY2UgdGltZW91dABPdXQgb2Ygc3RyZWFtcyByZXNvdXJjZXMATGluayBoYXMgYmVlbiBzZXZlcmVkAFByb3RvY29sIGVycm9yAEJhZCBtZXNzYWdlAEZpbGUgZGVzY3JpcHRvciBpbiBiYWQgc3RhdGUATm90IGEgc29ja2V0AERlc3RpbmF0aW9uIGFkZHJlc3MgcmVxdWlyZWQATWVzc2FnZSB0b28gbGFyZ2UAUHJvdG9jb2wgd3JvbmcgdHlwZSBmb3Igc29ja2V0AFByb3RvY29sIG5vdCBhdmFpbGFibGUAUHJvdG9jb2wgbm90IHN1cHBvcnRlZABTb2NrZXQgdHlwZSBub3Qgc3VwcG9ydGVkAE5vdCBzdXBwb3J0ZWQAUHJvdG9jb2wgZmFtaWx5IG5vdCBzdXBwb3J0ZWQAQWRkcmVzcyBmYW1pbHkgbm90IHN1cHBvcnRlZCBieSBwcm90b2NvbABBZGRyZXNzIG5vdCBhdmFpbGFibGUATmV0d29yayBpcyBkb3duAE5ldHdvcmsgdW5yZWFjaGFibGUAQ29ubmVjdGlvbiByZXNldCBieSBuZXR3b3JrAENvbm5lY3Rpb24gYWJvcnRlZABObyBidWZmZXIgc3BhY2UgYXZhaWxhYmxlAFNvY2tldCBpcyBjb25uZWN0ZWQAU29ja2V0IG5vdCBjb25uZWN0ZWQAQ2Fubm90IHNlbmQgYWZ0ZXIgc29ja2V0IHNodXRkb3duAE9wZXJhdGlvbiBhbHJlYWR5IGluIHByb2dyZXNzAE9wZXJhdGlvbiBpbiBwcm9ncmVzcwBTdGFsZSBmaWxlIGhhbmRsZQBSZW1vdGUgSS9PIGVycm9yAFF1b3RhIGV4Y2VlZGVkAE5vIG1lZGl1bSBmb3VuZABXcm9uZyBtZWRpdW0gdHlwZQBObyBlcnJvciBpbmZvcm1hdGlvbgAAAAAAAExDX0NUWVBFAAAAAExDX05VTUVSSUMAAExDX1RJTUUAAAAAAExDX0NPTExBVEUAAExDX01PTkVUQVJZAExDX01FU1NBR0VTAEHw6QALlwIDAAAABAAAAAQAAAAGAAAAg/miAERObgD8KRUA0VcnAN009QBi28AAPJmVAEGQQwBjUf4Au96rALdhxQA6biQA0k1CAEkG4AAJ6i4AHJLRAOsd/gApsRwA6D6nAPU1ggBEuy4AnOmEALQmcABBfl8A1pE5AFODOQCc9DkAi1+EACj5vQD4HzsA3v+XAA+YBQARL+8AClqLAG0fbQDPfjYACcsnAEZPtwCeZj8ALepfALondQDl68cAPXvxAPc5BwCSUooA+2vqAB+xXwAIXY0AMANWAHv8RgDwq2sAILzPADb0mgDjqR0AXmGRAAgb5gCFmWUAoBRfAI1AaACA2P8AJ3NNAAYGMQDKVhUAyahzAHviYABrjMAAQZPsAAv9A0D7Ifk/AAAAAC1EdD4AAACAmEb4PAAAAGBRzHg7AAAAgIMb8DkAAABAICV6OAAAAIAiguM2AAAAAB3zaTU4Y+0+2g9JP16Yez/aD8k/aTesMWghIjO0DxQzaCGiMwAAAAACAAAAAwAAAAUAAAAHAAAACwAAAA0AAAARAAAAEwAAABcAAAAdAAAAHwAAACUAAAApAAAAKwAAAC8AAAA1AAAAOwAAAD0AAABDAAAARwAAAEkAAABPAAAAUwAAAFkAAABhAAAAZQAAAGcAAABrAAAAbQAAAHEAAAB/AAAAgwAAAIkAAACLAAAAlQAAAJcAAACdAAAAowAAAKcAAACtAAAAswAAALUAAAC/AAAAwQAAAMUAAADHAAAA0wAAAAEAAAALAAAADQAAABEAAAATAAAAFwAAAB0AAAAfAAAAJQAAACkAAAArAAAALwAAADUAAAA7AAAAPQAAAEMAAABHAAAASQAAAE8AAABTAAAAWQAAAGEAAABlAAAAZwAAAGsAAABtAAAAcQAAAHkAAAB/AAAAgwAAAIkAAACLAAAAjwAAAJUAAACXAAAAnQAAAKMAAACnAAAAqQAAAK0AAACzAAAAtQAAALsAAAC/AAAAwQAAAMUAAADHAAAA0QAAADAxMjM0NTY3ODlhYmNkZWZBQkNERUZ4WCstcFBpSW5OAEGg8AALgQElAAAAbQAAAC8AAAAlAAAAZAAAAC8AAAAlAAAAeQAAACUAAABZAAAALQAAACUAAABtAAAALQAAACUAAABkAAAAJQAAAEkAAAA6AAAAJQAAAE0AAAA6AAAAJQAAAFMAAAAgAAAAJQAAAHAAAAAAAAAAJQAAAEgAAAA6AAAAJQAAAE0AQbDxAAu5ASUAAABIAAAAOgAAACUAAABNAAAAOgAAACUAAABTAAAAJQAAAEgAAAA6AAAAJQAAAE0AAAA6AAAAJQAAAFMAAABQRQAAE2MAAHhFAADZbwAA8DgAAAAAAAB4RQAA7XIAAKg7AAAAAAAAeEUAAGl+AAC4QgAAAAAAAHhFAAAZkAAAuEIAAAAAAAB4RQAAjZAAALhCAAAAAAAA5EUAAJynAAAAAAAAAQAAAGA5AAAAAAAAUEUAANunAAAFAEH08gALAQIAQYzzAAsKAQAAAAEAAACm6gBBpPMACwECAEGz8wALBf//////AEH48wALAQkAQYT0AAsBAgBBmPQACxICAAAAAAAAAAEAAABo0gAAAAQAQcT0AAsE/////wBBiPUACwEFAEGU9QALAQMAQaz1AAsOAQAAAAIAAAB41gAAAAQAQcT1AAsBAQBB0/UACwUK/////wBBvPYACwEDAEHj9gALBf//////AEGo9wAL1xBQRQAA/r8AAHhFAABewAAAwDsAAAAAAAB4RQAAC8AAANA7AAAAAAAAUEUAACzAAAB4RQAAOcAAALA7AAAAAAAAeEUAAKjAAACoOwAAAAAAAHhFAAC4wAAA6DsAAAAAAAB4RQAAycAAAMA7AAAAAAAAeEUAAOvAAAAIPAAAAAAAAHhFAAAPwQAAwDsAAAAAAADIRQAAN8EAAMhFAAA5wQAAyEUAADvBAADIRQAAPcEAAMhFAAA/wQAAyEUAAEHBAADIRQAAQ8EAAMhFAABFwQAAyEUAAEfBAADIRQAAZsoAAMhFAABJwQAAyEUAAEvBAADIRQAATcEAAHhFAABPwQAAsDsAAAAAAABQRQAAsMQAAFBFAADPxAAAUEUAAO7EAABQRQAADcUAAFBFAAAsxQAAUEUAAEvFAABQRQAAasUAAFBFAACJxQAAUEUAAKjFAABQRQAAx8UAAFBFAADmxQAAUEUAAAXGAABQRQAAJMYAAORFAAA3xgAAAAAAAAEAAABgOQAAAAAAAORFAAB5xgAAAAAAAAEAAABgOQAAAAAAAORFAAC7xgAAAAAAAAEAAABgOQAAAAAAAORFAAD6xgAAAAAAAAEAAABgOQAAAAAAAHhFAABLxwAAiD0AAAAAAABQRQAAOccAAHhFAAB1xwAAiD0AAAAAAABQRQAAn8cAAFBFAADQxwAA5EUAAAHIAAAAAAAAAQAAAHg9AAAD9P//5EUAADDIAAAAAAAAAQAAAJA9AAAD9P//5EUAAF/IAAAAAAAAAQAAAHg9AAAD9P//5EUAAI7IAAAAAAAAAQAAAJA9AAAD9P//eEUAAL3IAACoPQAAAAAAAHhFAADWyAAAoD0AAAAAAAB4RQAAFckAAKg9AAAAAAAAeEUAAC3JAACgPQAAAAAAAHhFAABFyQAAYD4AAAAAAAB4RQAAWckAALBCAAAAAAAAeEUAAG/JAABgPgAAAAAAAORFAACIyQAAAAAAAAIAAABgPgAAAgAAAKA+AAAAAAAA5EUAAMzJAAAAAAAAAQAAALg+AAAAAAAAUEUAAOLJAADkRQAA+8kAAAAAAAACAAAAYD4AAAIAAADgPgAAAAAAAORFAAA/ygAAAAAAAAEAAAC4PgAAAAAAAORFAABoygAAAAAAAAIAAABgPgAAAgAAABg/AAAAAAAA5EUAAKzKAAAAAAAAAQAAADA/AAAAAAAAUEUAAMLKAADkRQAA28oAAAAAAAACAAAAYD4AAAIAAABYPwAAAAAAAORFAAAfywAAAAAAAAEAAAAwPwAAAAAAAORFAAB1zAAAAAAAAAMAAABgPgAAAgAAAJg/AAACAAAAoD8AAAAIAABQRQAA3MwAAFBFAAC6zAAA5EUAAO/MAAAAAAAAAwAAAGA+AAACAAAAmD8AAAIAAADQPwAAAAgAAFBFAAA0zQAA5EUAAFbNAAAAAAAAAgAAAGA+AAACAAAA+D8AAAAIAABQRQAAm80AAORFAACwzQAAAAAAAAIAAABgPgAAAgAAAPg/AAAACAAA5EUAAPXNAAAAAAAAAgAAAGA+AAACAAAAQEAAAAIAAABQRQAAEc4AAORFAAAmzgAAAAAAAAIAAABgPgAAAgAAAEBAAAACAAAA5EUAAELOAAAAAAAAAgAAAGA+AAACAAAAQEAAAAIAAADkRQAAXs4AAAAAAAACAAAAYD4AAAIAAABAQAAAAgAAAORFAACJzgAAAAAAAAIAAABgPgAAAgAAAMhAAAAAAAAAUEUAAM/OAADkRQAA884AAAAAAAACAAAAYD4AAAIAAADwQAAAAAAAAFBFAAA5zwAA5EUAAFjPAAAAAAAAAgAAAGA+AAACAAAAGEEAAAAAAABQRQAAns8AAORFAAC3zwAAAAAAAAIAAABgPgAAAgAAAEBBAAAAAAAAUEUAAP3PAADkRQAAFtAAAAAAAAACAAAAYD4AAAIAAABoQQAAAgAAAFBFAAAr0AAA5EUAAMLQAAAAAAAAAgAAAGA+AAACAAAAaEEAAAIAAAB4RQAAQ9AAAKBBAAAAAAAA5EUAAGbQAAAAAAAAAgAAAGA+AAACAAAAwEEAAAIAAABQRQAAidAAAHhFAACg0AAAoEEAAAAAAADkRQAA19AAAAAAAAACAAAAYD4AAAIAAADAQQAAAgAAAORFAAD50AAAAAAAAAIAAABgPgAAAgAAAMBBAAACAAAA5EUAABvRAAAAAAAAAgAAAGA+AAACAAAAwEEAAAIAAAB4RQAAPtEAAGA+AAAAAAAA5EUAAFTRAAAAAAAAAgAAAGA+AAACAAAAaEIAAAIAAABQRQAAZtEAAORFAAB70QAAAAAAAAIAAABgPgAAAgAAAGhCAAACAAAAeEUAAJjRAABgPgAAAAAAAHhFAACt0QAAYD4AAAAAAABQRQAAwtEAAORFAADb0QAAAAAAAAEAAACwQgAAAAAAAAEAAAAAAAAA+DgAAAEAAAACAAAAAAAAAPA4AAADAAAABAAAAAAAAAAIOQAABQAAAAYAAAABAAAAuVKMPo5a5z65Uow+AAAAABg5AAAHAAAACAAAAAkAAAABAAAACgAAAAAAAAAoOQAABwAAAAsAAAAMAAAAAgAAAA0AAAAAAAAAODkAAAcAAAAOAAAADwAAAAMAAAAQAAAA//////7////9////ODwAAHA8AACQPAAAODwAAHA8AABwPAAAmDwAAHA8AAA4PAAAcDwAAJg8AABwPAAAODwAAHA8AABwPAAASDkAAHA8AABwPAAAcDwAAHA8AABwPAAASDkAAHA8AABwPAAAAQAAAAAAAAACAAAAQAYAAIA+AAAAAAAAiBMAADAaAAAUAAAAQy5VVEYtOABBjIgBCwLwQwBBpIgBCxJoOQAA+DkAAIg6AACIOgAAIB0AQeiJAQsCjOIAQaCKAQu9EiAiAAAgJgAAX3CJAP8JLw8AAIA/AADAPwAAAADcz9E1AAAAAADAFT8AAAAAsDsAABEAAAASAAAAEwAAABQAAAAEAAAAAQAAAAEAAAABAAAAAAAAANg7AAARAAAAFQAAABMAAAAUAAAABAAAAAIAAAACAAAAAgAAAAAAAADoOwAAFgAAABcAAAAEAAAAAAAAAPg7AAAWAAAAGAAAAAQAAAAAAAAAKDwAABEAAAAZAAAAEwAAABQAAAAFAAAAAAAAAKA8AAARAAAAGgAAABMAAAAUAAAABAAAAAMAAAADAAAAAwAAAAAAAACIPQAAGwAAABwAAAAAAAAAoD0AAB0AAAAeAAAAAQAAAAYAAAABAAAABAAAAAUAAAAGAAAABwAAAAcAAAAIAAAABAAAAAgAAAAFAAAAAAAAAKg9AAAfAAAAIAAAAAIAAAAJAAAAAgAAAAUAAAAJAAAACgAAAAoAAAALAAAADAAAAAYAAAALAAAABwAAAAgAAAAAAAAAsD0AACEAAAAiAAAA+P////j///+wPQAAIwAAACQAAACgRgAAtEYAAAgAAAAAAAAAyD0AACUAAAAmAAAA+P////j////IPQAAJwAAACgAAADQRgAA5EYAAAQAAAAAAAAA4D0AACkAAAAqAAAA/P////z////gPQAAKwAAACwAAAAARwAAFEcAAAQAAAAAAAAA+D0AAC0AAAAuAAAA/P////z////4PQAALwAAADAAAAAwRwAAREcAAAAAAAAQPgAAHwAAADEAAAADAAAACQAAAAIAAAAFAAAADQAAAAoAAAAKAAAACwAAAAwAAAAGAAAADAAAAAgAAAAAAAAAID4AAB0AAAAyAAAABAAAAAYAAAABAAAABAAAAA4AAAAGAAAABwAAAAcAAAAIAAAABAAAAA0AAAAJAAAAAAAAADA+AAAfAAAAMwAAAAUAAAAJAAAAAgAAAAUAAAAJAAAACgAAAAoAAAAPAAAAEAAAAAoAAAALAAAABwAAAAAAAABAPgAAHQAAADQAAAAGAAAABgAAAAEAAAAEAAAABQAAAAYAAAAHAAAAEQAAABIAAAALAAAACAAAAAUAAAAAAAAAUD4AADUAAAA2AAAANwAAAAEAAAAGAAAADgAAAAAAAABwPgAAOAAAADkAAAA3AAAAAgAAAAcAAAAPAAAAAAAAAIA+AAA6AAAAOwAAADcAAAABAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAAAAADAPgAAPAAAAD0AAAA3AAAADAAAAA0AAAAOAAAADwAAABAAAAARAAAAEgAAABMAAAAUAAAAFQAAABYAAAAAAAAA+D4AAD4AAAA/AAAANwAAAAMAAAAEAAAAAQAAAAUAAAACAAAAAQAAAAIAAAAGAAAAAAAAADg/AABAAAAAQQAAADcAAAAHAAAACAAAAAMAAAAJAAAABAAAAAMAAAAEAAAACgAAAAAAAABwPwAAQgAAAEMAAAA3AAAAEwAAABcAAAAYAAAAGQAAABoAAAAbAAAAAQAAAPj///9wPwAAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAAAAAAACoPwAARAAAAEUAAAA3AAAAGwAAABwAAAAdAAAAHgAAAB8AAAAgAAAAAgAAAPj///+oPwAAHAAAAB0AAAAeAAAAHwAAACAAAAAhAAAAIgAAACUAAABIAAAAOgAAACUAAABNAAAAOgAAACUAAABTAAAAAAAAACUAAABtAAAALwAAACUAAABkAAAALwAAACUAAAB5AAAAAAAAACUAAABJAAAAOgAAACUAAABNAAAAOgAAACUAAABTAAAAIAAAACUAAABwAAAAAAAAACUAAABhAAAAIAAAACUAAABiAAAAIAAAACUAAABkAAAAIAAAACUAAABIAAAAOgAAACUAAABNAAAAOgAAACUAAABTAAAAIAAAACUAAABZAAAAAAAAAEEAAABNAAAAAAAAAFAAAABNAAAAAAAAAEoAAABhAAAAbgAAAHUAAABhAAAAcgAAAHkAAAAAAAAARgAAAGUAAABiAAAAcgAAAHUAAABhAAAAcgAAAHkAAAAAAAAATQAAAGEAAAByAAAAYwAAAGgAAAAAAAAAQQAAAHAAAAByAAAAaQAAAGwAAAAAAAAATQAAAGEAAAB5AAAAAAAAAEoAAAB1AAAAbgAAAGUAAAAAAAAASgAAAHUAAABsAAAAeQAAAAAAAABBAAAAdQAAAGcAAAB1AAAAcwAAAHQAAAAAAAAAUwAAAGUAAABwAAAAdAAAAGUAAABtAAAAYgAAAGUAAAByAAAAAAAAAE8AAABjAAAAdAAAAG8AAABiAAAAZQAAAHIAAAAAAAAATgAAAG8AAAB2AAAAZQAAAG0AAABiAAAAZQAAAHIAAAAAAAAARAAAAGUAAABjAAAAZQAAAG0AAABiAAAAZQAAAHIAAAAAAAAASgAAAGEAAABuAAAAAAAAAEYAAABlAAAAYgAAAAAAAABNAAAAYQAAAHIAAAAAAAAAQQAAAHAAAAByAAAAAAAAAEoAAAB1AAAAbgAAAAAAAABKAAAAdQAAAGwAAAAAAAAAQQAAAHUAAABnAAAAAAAAAFMAAABlAAAAcAAAAAAAAABPAAAAYwAAAHQAAAAAAAAATgAAAG8AAAB2AAAAAAAAAEQAAABlAAAAYwAAAAAAAABTAAAAdQAAAG4AAABkAAAAYQAAAHkAAAAAAAAATQAAAG8AAABuAAAAZAAAAGEAAAB5AAAAAAAAAFQAAAB1AAAAZQAAAHMAAABkAAAAYQAAAHkAAAAAAAAAVwAAAGUAAABkAAAAbgAAAGUAAABzAAAAZAAAAGEAAAB5AAAAAAAAAFQAAABoAAAAdQAAAHIAAABzAAAAZAAAAGEAAAB5AAAAAAAAAEYAAAByAAAAaQAAAGQAAABhAAAAeQAAAAAAAABTAAAAYQAAAHQAAAB1AAAAcgAAAGQAAABhAAAAeQAAAAAAAABTAAAAdQAAAG4AAAAAAAAATQAAAG8AAABuAAAAAAAAAFQAAAB1AAAAZQAAAAAAAABXAAAAZQAAAGQAAAAAAAAAVAAAAGgAAAB1AAAAAAAAAEYAAAByAAAAaQAAAAAAAABTAAAAYQAAAHQAQeicAQsR2D8AAEYAAABHAAAANwAAAAEAQYGdAQvwBUAAAEgAAABJAAAANwAAAAIAAAAAAAAAIEAAAEoAAABLAAAANwAAACMAAAAkAAAABwAAAAgAAAAJAAAACgAAACUAAAALAAAADAAAAAAAAABIQAAATAAAAE0AAAA3AAAAJgAAACcAAAANAAAADgAAAA8AAAAQAAAAKAAAABEAAAASAAAAAAAAAGhAAABOAAAATwAAADcAAAApAAAAKgAAABMAAAAUAAAAFQAAABYAAAArAAAAFwAAABgAAAAAAAAAiEAAAFAAAABRAAAANwAAACwAAAAtAAAAGQAAABoAAAAbAAAAHAAAAC4AAAAdAAAAHgAAAAAAAACoQAAAUgAAAFMAAAA3AAAAAwAAAAQAAAAAAAAA0EAAAFQAAABVAAAANwAAAAUAAAAGAAAAAAAAAPhAAABWAAAAVwAAADcAAAABAAAAIQAAAAAAAAAgQQAAWAAAAFkAAAA3AAAAAgAAACIAAAAAAAAASEEAAFoAAABbAAAANwAAABAAAAAEAAAAHwAAAAAAAABwQQAAXAAAAF0AAAA3AAAAEQAAAAUAAAAgAAAAAAAAAMhBAABeAAAAXwAAADcAAAADAAAABAAAAAsAAAAvAAAAMAAAAAwAAAAxAAAAAAAAAJBBAABeAAAAYAAAADcAAAADAAAABAAAAAsAAAAvAAAAMAAAAAwAAAAxAAAAAAAAAPhBAABhAAAAYgAAADcAAAAFAAAABgAAAA0AAAAyAAAAMwAAAA4AAAA0AAAAAAAAADhCAABjAAAAZAAAADcAAAAAAAAASEIAAGUAAABmAAAANwAAAAwAAAASAAAADQAAABMAAAAOAAAAAQAAABQAAAAPAAAAAAAAAJBCAABnAAAAaAAAADcAAAA1AAAANgAAACEAAAAiAAAAIwAAAAAAAACgQgAAaQAAAGoAAAA3AAAANwAAADgAAAAkAAAAJQAAACYAAABmAAAAYQAAAGwAAABzAAAAZQAAAAAAAAB0AAAAcgAAAHUAAABlAEH8ogEL/IACYD4AAF4AAABrAAAANwAAAAAAAABwQgAAXgAAAGwAAAA3AAAAFQAAAAIAAAADAAAABAAAAA8AAAAWAAAAEAAAABcAAAARAAAABQAAABgAAAAQAAAAAAAAANhBAABeAAAAbQAAADcAAAAHAAAACAAAABEAAAA5AAAAOgAAABIAAAA7AAAAAAAAABhCAABeAAAAbgAAADcAAAAJAAAACgAAABMAAAA8AAAAPQAAABQAAAA+AAAAAAAAAKBBAABeAAAAbwAAADcAAAADAAAABAAAAAsAAAAvAAAAMAAAAAwAAAAxAAAAAAAAAKA/AAAUAAAAFQAAABYAAAAXAAAAGAAAABkAAAAaAAAAAAAAANA/AAAcAAAAHQAAAB4AAAAfAAAAIAAAACEAAAAiAAAARXJyb3I6IGxhYmVsaW5nIHdvcmsgb3ZlcmZsb3cuCgBVbmtub3duIG9yIHVuc3VwcG9ydGVkIGxhYmVsaW5nIHRocmVzaG9sZCBtb2RlIHJlcXVlc3RlZC4gU2V0IHRvIG1hbnVhbC4KAExhYmVsaW5nIHRocmVzaG9sZCBtb2RlIHNldCB0byAlcy4KAE1BTlVBTABBVVRPX01FRElBTgBBVVRPX09UU1UAQVVUT19BREFQVElWRQBBVVRPX0JSQUNLRVRJTkcARXJyb3I6IFVuc3VwcG9ydGVkIHBpeGVsIGZvcm1hdCAoJWQpIHJlcXVlc3RlZC4KAEF1dG8gdGhyZXNob2xkIChicmFja2V0KSBtYXJrZXIgY291bnRzIC1bJTNkOiAlM2RdIFslM2Q6ICUzZF0gWyUzZDogJTNkXSsuCgBBdXRvIHRocmVzaG9sZCAoYnJhY2tldCkgYWRqdXN0ZWQgdGhyZXNob2xkIHRvICVkLgoAbWVkaWFuAE90c3UAQXV0byB0aHJlc2hvbGQgKCVzKSBhZGp1c3RlZCB0aHJlc2hvbGQgdG8gJWQuCgA/Pz8gMQoAPz8/IDIKAD8/PyAzCgBFcnJvcjogdW5zdXBwb3J0ZWQgcGl4ZWwgZm9ybWF0LgoARXJyb3I6IE5VTEwgcGF0dEhhbmRsZS4KAEVycm9yOiBjYW4ndCBsb2FkIHBhdHRlcm4gZnJvbSBOVUxMIGJ1ZmZlci4KAEVycm9yOiBvdXQgb2YgbWVtb3J5LgoAIAkKDQBQYXR0ZXJuIERhdGEgcmVhZCBlcnJvciEhCgBFcnJvciByZWFkaW5nIHBhdHRlcm4gZmlsZSAnJXMnLgoARXJyb3IgKCVkKTogdW5hYmxlIHRvIG9wZW4gY2FtZXJhIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciByZWFkaW5nLgoARXJyb3IgKCVkKTogdW5hYmxlIHRvIGRldGVybWluZSBmaWxlIGxlbmd0aC4ARXJyb3I6IHN1cHBsaWVkIGZpbGUgZG9lcyBub3QgYXBwZWFyIHRvIGJlIGFuIEFSVG9vbEtpdCBjYW1lcmEgcGFyYW1ldGVyIGZpbGUuCgBFcnJvciAoJWQpOiB1bmFibGUgdG8gcmVhZCBmcm9tIGZpbGUuAGFyZ2xDYW1lcmFGcnVzdHVtUkgoKTogYXJQYXJhbURlY29tcE1hdCgpIGluZGljYXRlZCBwYXJhbWV0ZXIgZXJyb3IuCgBFcnJvcjogaWNwR2V0Sl9VX1hjAEVycm9yIDE6IGljcEdldEluaXRYdzJYYwoARXJyb3IgMjogaWNwR2V0SW5pdFh3MlhjCgBFcnJvciAzOiBpY3BHZXRJbml0WHcyWGMKAEVycm9yIDQ6IGljcEdldEluaXRYdzJYYwoARXJyb3IgNTogaWNwR2V0SW5pdFh3MlhjCgBFcnJvciA2OiBpY3BHZXRJbml0WHcyWGMKAEVycm9yIDc6IGljcEdldEluaXRYdzJYYwoARXJyb3I6IHVuYWJsZSB0byBvcGVuIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcycuCgBFcnJvciBwcm9jZXNzaW5nIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcyc6IEZpcnN0IGxpbmUgbXVzdCBiZSBudW1iZXIgb2YgbWFya2VyIGNvbmZpZ3MgdG8gcmVhZC4KACVsbHUlYwBFcnJvciBwcm9jZXNzaW5nIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcyc6IHBhdHRlcm4gJyVzJyBzcGVjaWZpZWQgaW4gbXVsdGltYXJrZXIgY29uZmlndXJhdGlvbiB3aGlsZSBpbiBiYXJjb2RlLW9ubHkgbW9kZS4KAEVycm9yIHByb2Nlc3NpbmcgbXVsdGltYXJrZXIgY29uZmlnIGZpbGUgJyVzJzogVW5hYmxlIHRvIGRldGVybWluZSBkaXJlY3RvcnkgbmFtZS4KAEVycm9yIHByb2Nlc3NpbmcgbXVsdGltYXJrZXIgY29uZmlnIGZpbGUgJyVzJzogVW5hYmxlIHRvIGxvYWQgcGF0dGVybiAnJXMnLgoAJWxmAEVycm9yIHByb2Nlc3NpbmcgbXVsdGltYXJrZXIgY29uZmlnIGZpbGUgJyVzJywgbWFya2VyIGRlZmluaXRpb24gJTNkOiBGaXJzdCBsaW5lIG11c3QgYmUgcGF0dGVybiB3aWR0aC4KACVsZiAlbGYgJWxmICVsZgAlZiAlZgBFcnJvciBwcm9jZXNzaW5nIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcycsIG1hcmtlciBkZWZpbml0aW9uICUzZDogTGluZXMgMiAtIDQgbXVzdCBiZSBtYXJrZXIgdHJhbnNmb3JtLgoAWyVzXSAAZGVidWcAaW5mbwB3YXJuaW5nAGVycm9yACVzJXMALmlzZXQARXJyb3I6IHVuYWJsZSB0byBvcGVuIGZpbGUgJyVzJXMnIGZvciByZWFkaW5nLgoARXJyb3IgcmVhZGluZyBpbWFnZVNldC4KAEltYWdlc2V0IGNvbnRhaW5zICVkIGltYWdlcy4KAEZhbGxpbmcgYmFjayB0byByZWFkaW5nICclcyVzJyBpbiBBUlRvb2xLaXQgdjQueCBmb3JtYXQuCgBFcnJvciByZWFkaW5nIEpQRUcgZmlsZS4KAEVycm9yIHJlYWRpbmcgSlBFRyBmaWxlIGhlYWRlci4KACVmAEZpbGUgb3BlbiBlcnJvci4gJXMKAFJlYWQgZXJyb3IhIQoAcgBFcnJvciBvcGVuaW5nIGZpbGUgJyVzJzogACVzJXMKACVkAAojIyMgU3VyZmFjZSBOby4lZCAjIyMKACVzACAgUmVhZCBJbWFnZVNldC4KAEVycm9yIG9wZW5pbmcgZmlsZSAnJXMuaXNldCcuCgAgICAgZW5kLgoAICBSZWFkIEZlYXR1cmVTZXQuCgBFcnJvciBvcGVuaW5nIGZpbGUgJyVzLmZzZXQnLgoAICBSZWFkIE1hcmtlclNldC4KAG1yawBFcnJvciBvcGVuaW5nIGZpbGUgJyVzLm1yaycuCgAlZiAlZiAlZiAlZgBUcmFuc2Zvcm1hdGlvbiBtYXRyaXggcmVhZCBlcnJvciEhCgBqcGcAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiBOVUxMIHJlZkRhdGFTZXRQdHIxL3JlZkRhdGFTZXRQdHIyLgoAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiBOVUxMIHJlZkRhdGFTZXRQdHIuCgByYgBrcG1Mb2FkUmVmRGF0YVNldCgpOiBOVUxMIGZpbGVuYW1lL3JlZkRhdGFTZXRQdHIuCgBFcnJvciBsb2FkaW5nIEtQTSBkYXRhOiB1bmFibGUgdG8gb3BlbiBmaWxlICclcyVzJXMnIGZvciByZWFkaW5nLgoARXJyb3IgbG9hZGluZyBLUE0gZGF0YTogZXJyb3IgcmVhZGluZyBkYXRhLgoAa3BtQ2hhbmdlUGFnZU5vT2ZSZWZEYXRhU2V0KCk6IE5VTEwgcmVmRGF0YVNldC4KAGtwbVNldFJlZkRhdGFTZXQoKTogTlVMTCBrcG1IYW5kbGUvcmVmRGF0YVNldC4KAGtwbVNldFJlZkRhdGFTZXQoKTogcmVmRGF0YVNldC4KAHBvaW50cy0lZAoAa3BtTWF0Y2hpbmcoKTogTlVMTCBrcG1IYW5kbGUvaW5JbWFnZUx1bWEuCgBQYWdlWyVkXSAgcHJlOiUzZCwgYWZ0OiUzZCwgZXJyb3IgPSAlZgoAJXMuJXMAQXNzZXJ0aW9uIGBweXJhbWlkLT5zaXplKCkgPiAwYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9Eb0dfc2NhbGVfaW52YXJpYW50X2RldGVjdG9yLmNwcABQeXJhbWlkIGlzIG5vdCBhbGxvY2F0ZWQAT2N0YXZlIG91dCBvZiByYW5nZQBTY2FsZSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBtSW1hZ2VzLnNpemUoKSA+IDBgIGZhaWxlZCBpbiAATGFwbGFjaWFuIHB5cmFtaWQgaGFzIG5vdCBiZWVuIGFsbG9jYXRlZABBc3NlcnRpb24gYHB5cmFtaWQtPm51bU9jdGF2ZXMoKSA+IDBgIGZhaWxlZCBpbiAAUHlyYW1pZCBkb2VzIG5vdCBjb250YWluIGFueSBsZXZlbHMAQXNzZXJ0aW9uIGBkeW5hbWljX2Nhc3Q8Y29uc3QgQmlub21pYWxQeXJhbWlkMzJmKj4ocHlyYW1pZClgIGZhaWxlZCBpbiAAT25seSBiaW5vbWlhbCBweXJhbWlkIGlzIHN1cHBvcnRlZABBc3NlcnRpb24gYGQudHlwZSgpID09IElNQUdFX0YzMmAgZmFpbGVkIGluIABPbmx5IEYzMiBpbWFnZXMgc3VwcG9ydGVkAEFzc2VydGlvbiBgaW0xLnR5cGUoKSA9PSBJTUFHRV9GMzJgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTIudHlwZSgpID09IElNQUdFX0YzMmAgZmFpbGVkIGluIABBc3NlcnRpb24gYGQuY2hhbm5lbHMoKSA9PSAxYCBmYWlsZWQgaW4gAE9ubHkgc2luZ2xlIGNoYW5uZWwgaW1hZ2VzIHN1cHBvcnRlZABBc3NlcnRpb24gYGltMS5jaGFubmVscygpID09IDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTIuY2hhbm5lbHMoKSA9PSAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZC53aWR0aCgpID09IGltMi53aWR0aCgpYCBmYWlsZWQgaW4gAEltYWdlcyBtdXN0IGhhdmUgdGhlIHNhbWUgd2lkdGgAQXNzZXJ0aW9uIGBkLmhlaWdodCgpID09IGltMi5oZWlnaHQoKWAgZmFpbGVkIGluIABJbWFnZXMgbXVzdCBoYXZlIHRoZSBzYW1lIGhlaWdodABBc3NlcnRpb24gYGltMS53aWR0aCgpID09IGltMi53aWR0aCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW0xLmhlaWdodCgpID09IGltMi5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHJvdyA8IG1IZWlnaHRgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZnJhbWV3b3JrL2ltYWdlLmgAcm93IG91dCBvZiBib3VuZHMATjZ2aXNpb24yNUdhdXNzaWFuU2NhbGVTcGFjZVB5cmFtaWRFAERvRyBQeXJhbWlkAE5vbi1tYXggc3VwcHJlc3Npb24AU3VicGl4ZWwAcHJ1bmVGZWF0dXJlcwBGaW5kIE9yaWVudGF0aW9ucwBBc3NlcnRpb24gYG1CdWNrZXRzLnNpemUoKSA9PSBtTnVtQnVja2V0c1hgIGZhaWxlZCBpbiAAQnVja2V0cyBhcmUgbm90IGFsbG9jYXRlZABBc3NlcnRpb24gYG1CdWNrZXRzWzBdLnNpemUoKSA9PSBtTnVtQnVja2V0c1lgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtRmVhdHVyZVBvaW50cy5zaXplKCkgPD0gbU1heE51bUZlYXR1cmVQb2ludHNgIGZhaWxlZCBpbiAAVG9vIG1hbnkgZmVhdHVyZSBwb2ludHMAQXNzZXJ0aW9uIGBidWNrZXRbMF0uZmlyc3QgPj0gYnVja2V0W25dLmZpcnN0YCBmYWlsZWQgaW4gAG50aF9lbGVtZW50IGZhaWxlZABBc3NlcnRpb24gYGtwLnNjYWxlIDwgbUxhcGxhY2lhblB5cmFtaWQubnVtU2NhbGVQZXJPY3RhdmUoKWAgZmFpbGVkIGluIABGZWF0dXJlIHBvaW50IHNjYWxlIGlzIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGBrcC5zY29yZSA9PSBsYXAxLmdldDxmbG9hdD4oeSlbeF1gIGZhaWxlZCBpbiAAU2NvcmUgaXMgbm90IGNvbnNpc3RlbnQgd2l0aCB0aGUgRG9HIGltYWdlAEFzc2VydGlvbiBgbGFwMC5oZWlnaHQoKSA9PSBsYXAxLmhlaWdodCgpID09IGxhcDIuaGVpZ2h0KClgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL0RvR19zY2FsZV9pbnZhcmlhbnRfZGV0ZWN0b3IuaABXaWR0aC9oZWlnaHQgYXJlIG5vdCBjb25zaXN0ZW50AEFzc2VydGlvbiBgKGxhcDAuaGVpZ2h0KCkgPT0gbGFwMS5oZWlnaHQoKSkgJiYgKChsYXAxLmhlaWdodCgpPj4xKSA9PSBsYXAyLmhlaWdodCgpKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYCgobGFwMC53aWR0aCgpPj4xKSA9PSBsYXAxLndpZHRoKCkpICYmIChsYXAxLndpZHRoKCkgPT0gbGFwMi53aWR0aCgpKWAgZmFpbGVkIGluIABJbWFnZSBzaXplcyBhcmUgaW5jb25zaXN0ZW50AEFzc2VydGlvbiBgKHgtMSkgPj0gMCAmJiAoeCsxKSA8IGxhcDEud2lkdGgoKWAgZmFpbGVkIGluIAB4IG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGAoeS0xKSA+PSAwICYmICh5KzEpIDwgbGFwMS5oZWlnaHQoKWAgZmFpbGVkIGluIAB5IG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGAobGFwMC53aWR0aCgpPj4xKSA9PSBsYXAxLndpZHRoKClgIGZhaWxlZCBpbiAASW1hZ2UgZGltZW5zaW9ucyBpbmNvbnNpc3RlbnQAQXNzZXJ0aW9uIGAobGFwMC53aWR0aCgpPj4xKSA9PSBsYXAyLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAobGFwMC5oZWlnaHQoKT4+MSkgPT0gbGFwMS5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYChsYXAwLmhlaWdodCgpPj4xKSA9PSBsYXAyLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGludClzdGQ6OmZsb29yKHgpID09IChpbnQpeGAgZmFpbGVkIGluIAAvVXNlcnMvYXMvRG9jdW1lbnRzL0RldmVsb3BtZW50L2dpdGh1Yi9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvaW50ZXJwb2xhdGUuaABmbG9vcigpIGFuZCBjYXN0IG5vdCB0aGUgc2FtZQBBc3NlcnRpb24gYChpbnQpc3RkOjpmbG9vcih5KSA9PSAoaW50KXlgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB5cCA+PSAwICYmIHlwIDwgaGVpZ2h0YCBmYWlsZWQgaW4gAHlwIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGB5cF9wbHVzXzEgPj0gMCAmJiB5cF9wbHVzXzEgPCBoZWlnaHRgIGZhaWxlZCBpbiAAeXBfcGx1c18xIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGB4cCA+PSAwICYmIHhwIDwgd2lkdGhgIGZhaWxlZCBpbiAAeHAgb3V0IG9mIGJvdW5kcwBBc3NlcnRpb24gYHhwX3BsdXNfMSA+PSAwICYmIHhwX3BsdXNfMSA8IHdpZHRoYCBmYWlsZWQgaW4gAHhwX3BsdXNfMSBvdXQgb2YgYm91bmRzAEFzc2VydGlvbiBgdzAgPj0gMCAmJiB3MCA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAT3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgdzEgPj0gMCAmJiB3MSA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MiA+PSAwICYmIHcyIDw9IDEuMDAwMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHczID49IDAgJiYgdzMgPD0gMS4wMDAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHcwK3cxK3cyK3czKSA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAoeC0xKSA+PSAwICYmICh4KzEpIDwgaW0ud2lkdGgoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYCh5LTEpID49IDAgJiYgKHkrMSkgPCBpbS5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGxhcDAud2lkdGgoKSA9PSBsYXAxLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBsYXAwLmhlaWdodCgpID09IGxhcDEuaGVpZ2h0KClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB4X2Rpdl8yLTAuNWYgPj0gMGAgZmFpbGVkIGluIAB4X2Rpdl8yIG91dCBvZiBib3VuZHMgb3V0IG9mIGJvdW5kcyBmb3IgaW50ZXJwb2xhdGlvbgBBc3NlcnRpb24gYHlfZGl2XzItMC41ZiA+PSAwYCBmYWlsZWQgaW4gAHlfZGl2XzIgb3V0IG9mIGJvdW5kcyBvdXQgb2YgYm91bmRzIGZvciBpbnRlcnBvbGF0aW9uAEFzc2VydGlvbiBgeF9kaXZfMiswLjVmIDwgbGFwMi53aWR0aCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeV9kaXZfMiswLjVmIDwgbGFwMi5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGxhcDAud2lkdGgoKSA9PSBsYXAyLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBsYXAwLmhlaWdodCgpID09IGxhcDIuaGVpZ2h0KClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTAuaGVpZ2h0KCkgPT0gaW0xLmhlaWdodCgpYCBmYWlsZWQgaW4gAEhlaWdodCBpcyBpbmNvbnNpc3RlbnQAQXNzZXJ0aW9uIGBpbTAuaGVpZ2h0KCkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGltMS5oZWlnaHQoKT4+MSkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGltMC5oZWlnaHQoKT4+MSkgPT0gaW0xLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGltMC5oZWlnaHQoKT4+MSkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW5kZXggPCBtSW1hZ2VzLnNpemUoKWAgZmFpbGVkIGluIABJbmRleCBpcyBvdXQgb2YgcmFuZ2UATjZ2aXNpb24xOEJpbm9taWFsUHlyYW1pZDMyZkUAQXNzZXJ0aW9uIGB3aWR0aCA+PSA1YCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9nYXVzc2lhbl9zY2FsZV9zcGFjZV9weXJhbWlkLmNwcABJbWFnZSBpcyB0b28gc21hbGwAQXNzZXJ0aW9uIGBoZWlnaHQgPj0gNWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltYWdlLnR5cGUoKSA9PSBJTUFHRV9VSU5UOGAgZmFpbGVkIGluIABJbWFnZSBtdXN0IGJlIGdyYXlzY2FsZQBBc3NlcnRpb24gYGltYWdlLmNoYW5uZWxzKCkgPT0gMWAgZmFpbGVkIGluIABJbWFnZSBtdXN0IGhhdmUgMSBjaGFubmVsAEFzc2VydGlvbiBgbVB5cmFtaWQuc2l6ZSgpID09IG1OdW1PY3RhdmVzKm1OdW1TY2FsZXNQZXJPY3RhdmVgIGZhaWxlZCBpbiAAUHlyYW1pZCBoYXMgbm90IGJlZW4gYWxsb2NhdGVkIHlldABBc3NlcnRpb24gYGltYWdlLndpZHRoKCkgPT0gbVB5cmFtaWRbMF0ud2lkdGgoKWAgZmFpbGVkIGluIABJbWFnZSBvZiB3cm9uZyBzaXplIGZvciBweXJhbWlkAEFzc2VydGlvbiBgaW1hZ2UuaGVpZ2h0KCkgPT0gbVB5cmFtaWRbMF0uaGVpZ2h0KClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3QudHlwZSgpID09IElNQUdFX0YzMmAgZmFpbGVkIGluIABEZXN0aW5hdGlvbiBpbWFnZSBzaG91bGQgYmUgYSBmbG9hdABVbmtub3duIGltYWdlIHR5cGUAVW5zdXBwb3J0ZWQgaW1hZ2UgdHlwZQBONnZpc2lvbjlFeGNlcHRpb25FAEFzc2VydGlvbiBgaW0ud2lkdGgoKSA9PSBpbS5zdGVwKCkvc2l6ZW9mKGZsb2F0KWAgZmFpbGVkIGluIAAvVXNlcnMvYXMvRG9jdW1lbnRzL0RldmVsb3BtZW50L2dpdGh1Yi9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvb3JpZW50YXRpb25fYXNzaWdubWVudC5jcHAAU3RlcCBzaXplIG11c3QgYmUgZXF1YWwgdG8gd2lkdGggZm9yIG5vdwBBc3NlcnRpb24gYHggPj0gMGAgZmFpbGVkIGluIAB4IG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGB4IDwgbUdyYWRpZW50c1tvY3RhdmUqbU51bVNjYWxlc1Blck9jdGF2ZStzY2FsZV0ud2lkdGgoKWAgZmFpbGVkIGluIAB4IG11c3QgYmUgbGVzcyB0aGFuIHRoZSBpbWFnZSB3aWR0aABBc3NlcnRpb24gYHkgPj0gMGAgZmFpbGVkIGluIAB5IG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGB5IDwgbUdyYWRpZW50c1tvY3RhdmUqbU51bVNjYWxlc1Blck9jdGF2ZStzY2FsZV0uaGVpZ2h0KClgIGZhaWxlZCBpbiAAeSBtdXN0IGJlIGxlc3MgdGhhbiB0aGUgaW1hZ2UgaGVpZ2h0AEFzc2VydGlvbiBgZy5jaGFubmVscygpID09IDJgIGZhaWxlZCBpbiAATnVtYmVyIG9mIGNoYW5uZWxzIHNob3VsZCBiZSAyAEFzc2VydGlvbiBgbWF4X2hlaWdodCA+IDBgIGZhaWxlZCBpbiAATWF4aW11bSBiaW4gc2hvdWxkIGJlIHBvc2l0aXZlAEFzc2VydGlvbiBgaGlzdCAhPSBOVUxMYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9vcmllbnRhdGlvbl9hc3NpZ25tZW50LmgASGlzdG9ncmFtIHBvaW50ZXIgaXMgTlVMTABBc3NlcnRpb24gYChmYmluKzAuNWYpID4gMCAmJiAoZmJpbi0wLjVmKSA8IG51bV9iaW5zYCBmYWlsZWQgaW4gAERlY2ltYWwgYmluIHBvc2l0aW9uIGluZGV4IG91dCBvZiByYW5nZQBBc3NlcnRpb24gYG1hZ25pdHVkZSA+PSAwYCBmYWlsZWQgaW4gAE1hZ25pdHVkZSBjYW5ub3QgYmUgbmVnYXRpdmUAQXNzZXJ0aW9uIGBudW1fYmlucyA+PSAwYCBmYWlsZWQgaW4gAE51bWJlciBiaW5zIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGB3MSA+PSAwYCBmYWlsZWQgaW4gAHcxIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGB3MiA+PSAwYCBmYWlsZWQgaW4gAHcyIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGBiMSA+PSAwICYmIGIxIDwgbnVtX2JpbnNgIGZhaWxlZCBpbiAAYjEgYmluIGluZGV4IG91dCBvZiByYW5nZQBBc3NlcnRpb24gYGIyID49IDAgJiYgYjIgPCBudW1fYmluc2AgZmFpbGVkIGluIABiMiBiaW4gaW5kZXggb3V0IG9mIHJhbmdlAElEIGFscmVhZHkgZXhpc3RzAEJ1aWxkIFB5cmFtaWQARXh0cmFjdCBGZWF0dXJlcwBBc3NlcnRpb24gYGFzc2lnbm1lbnQuc2l6ZSgpID09IG51bV9pbmRpY2VzYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL21hdGNoZXJzL2JpbmFyeV9oaWVyYXJjaGljYWxfY2x1c3RlcmluZy5oAEFzc2lnbm1lbnQgc2l6ZSB3cm9uZwBBc3NlcnRpb24gYGFzc2lnbm1lbnRbaV0gIT0gLTFgIGZhaWxlZCBpbiAAQXNzaWdubWVudCBpcyBpbnZhbGlkAEFzc2VydGlvbiBgYXNzaWdubWVudFtpXSA8IG51bV9pbmRpY2VzYCBmYWlsZWQgaW4gAEFzc2lnbm1lbnQgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgaW5kaWNlc1thc3NpZ25tZW50W2ldXSA8IG51bV9mZWF0dXJlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGl0LT5zZWNvbmQuc2l6ZSgpICE9IDBgIGZhaWxlZCBpbiAAQ2x1c3RlciBtdXN0IGhhdmUgYXRsZWFzZXQgMSBmZWF0dXJlAEFzc2VydGlvbiBgbUsgPT0gbUNlbnRlcnMuc2l6ZSgpYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL21hdGNoZXJzL2ttZWRvaWRzLmgAayBzaG91bGQgbWF0Y2ggdGhlIG51bWJlciBvZiBjbHVzdGVyIGNlbnRlcnMAQXNzZXJ0aW9uIGBudW1fZmVhdHVyZXMgPiAwYCBmYWlsZWQgaW4gAE51bWJlciBvZiBmZWF0dXJlcyBtdXN0IGJlIHBvc2l0aXZlAEFzc2VydGlvbiBgbnVtX2luZGljZXMgPD0gbnVtX2ZlYXR1cmVzYCBmYWlsZWQgaW4gAE1vcmUgaW5kaWNlcyB0aGFuIGZlYXR1cmVzAEFzc2VydGlvbiBgbnVtX2luZGljZXMgPj0gbUtgIGZhaWxlZCBpbiAATm90IGVub3VnaCBmZWF0dXJlcwBBc3NpZ25tZW50IHNpemUgaXMgaW5jb3JyZWN0AEFzc2VydGlvbiBgbnVtX2NlbnRlcnMgPiAwYCBmYWlsZWQgaW4gAFRoZXJlIG11c3QgYmUgYXQgbGVhc3QgMSBjZW50ZXIAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvdmlzdWFsX2RhdGFiYXNlLmgAQXNzZXJ0aW9uIGBkZXRlY3RvcmAgZmFpbGVkIGluIABEZXRlY3RvciBpcyBOVUxMAEFzc2VydGlvbiBgcHlyYW1pZC0+aW1hZ2VzKCkuc2l6ZSgpID4gMGAgZmFpbGVkIGluIABQeXJhbWlkIGlzIGVtcHR5AEFzc2VydGlvbiBgcHlyYW1pZC0+aW1hZ2VzKClbMF0ud2lkdGgoKSA9PSBkZXRlY3Rvci0+d2lkdGgoKWAgZmFpbGVkIGluIABQeXJhbWlkIGFuZCBkZXRlY3RvciBzaXplIG1pc21hdGNoAEFzc2VydGlvbiBgcHlyYW1pZC0+aW1hZ2VzKClbMF0uaGVpZ2h0KCkgPT0gZGV0ZWN0b3ItPmhlaWdodCgpYCBmYWlsZWQgaW4gAE5TdDNfXzIxNGRlZmF1bHRfZGVsZXRlSU42dmlzaW9uOEtleWZyYW1lSUxpOTZFRUVFRQBOU3QzX18yMjBfX3NoYXJlZF9wdHJfcG9pbnRlcklQTjZ2aXNpb244S2V5ZnJhbWVJTGk5NkVFRU5TXzE0ZGVmYXVsdF9kZWxldGVJUzNfRUVOU185YWxsb2NhdG9ySVMzX0VFRUUAWyVzXSBbJXNdIFslc10gOiBGb3VuZCAlZCBmZWF0dXJlcyBpbiBxdWVyeQBib29sIHZpc2lvbjo6VmlzdWFsRGF0YWJhc2U8dmlzaW9uOjpGUkVBS0V4dHJhY3RvciwgdmlzaW9uOjpCaW5hcnlGZWF0dXJlU3RvcmUsIHZpc2lvbjo6QmluYXJ5RmVhdHVyZU1hdGNoZXI8OTY+ID46OnF1ZXJ5KGNvbnN0IHZpc2lvbjo6R2F1c3NpYW5TY2FsZVNwYWNlUHlyYW1pZCAqKSBbRkVBVFVSRV9FWFRSQUNUT1IgPSB2aXNpb246OkZSRUFLRXh0cmFjdG9yLCBTVE9SRSA9IHZpc2lvbjo6QmluYXJ5RmVhdHVyZVN0b3JlLCBNQVRDSEVSID0gdmlzaW9uOjpCaW5hcnlGZWF0dXJlTWF0Y2hlcjw5Nj5dAEZpbmQgTWF0Y2hlcyAoMSkASG91Z2ggVm90aW5nICgxKQBGaW5kIEhvdWdoIE1hdGNoZXMgKDEpAEVzdGltYXRlIEhvbW9ncmFwaHkgKDEpAEZpbmQgSW5saWVycyAoMSkARmluZCBNYXRjaGVzICgyKQBIb3VnaCBWb3RpbmcgKDIpAEZpbmQgSG91Z2ggTWF0Y2hlcyAoMikARXN0aW1hdGUgSG9tb2dyYXBoeSAoMikARmluZCBJbmxpZXJzICgyKQBBc3NlcnRpb24gYDBgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvZmVhdHVyZV9tYXRjaGVyLWlubGluZS5oAEZhaWxlZCB0byBjb21wdXRlIG1hdHJpeCBpbnZlcnNlAEFzc2VydGlvbiBgYmVzdF9pbmRleCAhPSBzdGQ6Om51bWVyaWNfbGltaXRzPHNpemVfdD46Om1heCgpYCBmYWlsZWQgaW4gAFNvbWV0aGluZyBzdHJhbmdlAEFzc2VydGlvbiBgbU1hdGNoZXMuc2l6ZSgpIDw9IGZlYXR1cmVzMS0+c2l6ZSgpYCBmYWlsZWQgaW4gAE51bWJlciBvZiBtYXRjaGVzIHNob3VsZCBiZSBsb3dlcgBBc3NlcnRpb24gYGh5cC5zaXplKCkgPj0gOSptYXhfbnVtX2h5cG90aGVzZXNgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvaG9tb2dyYXBoeV9lc3RpbWF0aW9uL3JvYnVzdF9ob21vZ3JhcGh5LmgAaHlwIHZlY3RvciBzaG91bGQgYmUgb2Ygc2l6ZSA5Km1heF9udW1faHlwb3RoZXNlcwBBc3NlcnRpb24gYHRtcF9pLnNpemUoKSA+PSBudW1fcG9pbnRzYCBmYWlsZWQgaW4gAHRtcF9pIHZlY3RvciBzaG91bGQgYmUgb2Ygc2l6ZSBudW1fcG9pbnRzAEFzc2VydGlvbiBgaHlwX2Nvc3RzLnNpemUoKSA+PSBtYXhfbnVtX2h5cG90aGVzZXNgIGZhaWxlZCBpbiAAaHlwX2Nvc3RzIHZlY3RvciBzaG91bGQgYmUgb2Ygc2l6ZSBtYXhfbnVtX2h5cG90aGVzZXMAQXNzZXJ0aW9uIGBuIDw9IGluX21hdGNoZXMuc2l6ZSgpYCBmYWlsZWQgaW4gAFNob3VsZCBiZSB0aGUgc2FtZQBBc3NlcnRpb24gYGRpc3RCaW5BbmdsZSA+PSAwYCBmYWlsZWQgaW4gAGRpc3RCaW5BbmdsZSBtdXN0IG5vdCBiZSBuZWdhdGl2ZQBBc3NlcnRpb24gYG1Sb290LmdldCgpYCBmYWlsZWQgaW4gAFJvb3QgY2Fubm90IGJlIE5VTEwAQXNzZXJ0aW9uIGBtaW5pICE9IC0xYCBmYWlsZWQgaW4gAE1pbmltdW0gaW5kZXggbm90IHNldABBc3NlcnRpb24gYHggPj0gbU1pblhgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvaG91Z2hfc2ltaWxhcml0eV92b3RpbmcuaAB4IG91dCBvZiByYW5nZQBBc3NlcnRpb24gYHggPCBtTWF4WGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHkgPj0gbU1pbllgIGZhaWxlZCBpbiAAeSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGB5IDwgbU1heFlgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBhbmdsZSA+IC1QSWAgZmFpbGVkIGluIABhbmdsZSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBhbmdsZSA8PSBQSWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHNjYWxlID49IG1NaW5TY2FsZWAgZmFpbGVkIGluIABzY2FsZSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBzY2FsZSA8IG1NYXhTY2FsZWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGluZGV4ID49IDBgIGZhaWxlZCBpbiAAaW5kZXggb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYmluWCA+PSAwYCBmYWlsZWQgaW4gAGJpblggb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYmluWCA8IG1OdW1YQmluc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblkgPj0gMGAgZmFpbGVkIGluIABiaW5ZIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYGJpblkgPCBtTnVtWUJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5BbmdsZSA+PSAwYCBmYWlsZWQgaW4gAGJpbkFuZ2xlIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYGJpbkFuZ2xlIDwgbU51bUFuZ2xlQmluc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblNjYWxlID49IDBgIGZhaWxlZCBpbiAAYmluU2NhbGUgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYmluU2NhbGUgPCBtTnVtU2NhbGVCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW5kZXggPD0gKGJpblggKyBiaW5ZKm1OdW1YQmlucyArIGJpbkFuZ2xlKm1OdW1YQmlucyptTnVtWUJpbnMgKyBiaW5TY2FsZSptTnVtWEJpbnMqbU51bVlCaW5zKm1OdW1BbmdsZUJpbnMpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgc2l6ZSA+IDBgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvaG91Z2hfc2ltaWxhcml0eV92b3RpbmcuY3BwAHNpemUgbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYG1SZWZJbWFnZVdpZHRoID4gMGAgZmFpbGVkIGluIAB3aWR0aCBtdXN0IGJlIHBvc2l0aXZlAEFzc2VydGlvbiBgbVJlZkltYWdlSGVpZ2h0ID4gMGAgZmFpbGVkIGluIABoZWlnaHQgbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYG4gPiAwYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL3V0aWxzL3BhcnRpYWxfc29ydC5oAG4gbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYGsgPiAwYCBmYWlsZWQgaW4gAGsgbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYHB5cmFtaWRgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvZnJlYWsuaABQeXJhbWlkIGlzIE5VTEwAQXNzZXJ0aW9uIGBzdG9yZS5zaXplKCkgPT0gcG9pbnRzLnNpemUoKWAgZmFpbGVkIGluIABGZWF0dXJlIHN0b3JlIGhhcyBub3QgYmVlbiBhbGxvY2F0ZWQAQXNzZXJ0aW9uIGBudW1fcG9pbnRzID09IHBvaW50cy5zaXplKClgIGZhaWxlZCBpbiAAU2hvdWxkIGJlIHNhbWUgc2l6ZQBBc3NlcnRpb24gYG9jdGF2ZSA+PSAwYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9nYXVzc2lhbl9zY2FsZV9zcGFjZV9weXJhbWlkLmgAT2N0YXZlIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGBvY3RhdmUgPCBtTnVtT2N0YXZlc2AgZmFpbGVkIGluIABPY3RhdmUgbXVzdCBiZSBsZXNzIHRoYW4gbnVtYmVyIG9mIG9jdGF2ZXMAQXNzZXJ0aW9uIGBzY2FsZSA+PSAwYCBmYWlsZWQgaW4gAFNjYWxlIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGBzY2FsZSA8IG1OdW1TY2FsZXNQZXJPY3RhdmVgIGZhaWxlZCBpbiAAU2NhbGUgbXVzdCBiZSBsZXNzIHRoYW4gbnVtYmVyIG9mIHNjYWxlIHBlciBvY3RhdmUAJW0tJWQtJVktJUgtJU0tJVMAQXNzZXJ0aW9uIGB3aWR0aCA+IDBgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZnJhbWV3b3JrL2ltYWdlLmNwcABXaWR0aCBjYW5ub3QgYmUgemVybwBBc3NlcnRpb24gYGhlaWdodCA+IDBgIGZhaWxlZCBpbiAASGVpZ2h0IGNhbm5vdCBiZSB6ZXJvAEFzc2VydGlvbiBgc3RlcCA+PSB3aWR0aGAgZmFpbGVkIGluIABTdGVwIG11c3QgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRoZSB3aWR0aABBc3NlcnRpb24gYGNoYW5uZWxzID4gMGAgZmFpbGVkIGluIABOdW1iZXIgb2YgY2hhbm5lbHMgY2Fubm90IGJlIHplcm8AQXNzZXJ0aW9uIGBtRGF0YS5nZXQoKWAgZmFpbGVkIGluIABEYXRhIHBvaW50ZXIgaXMgTlVMTABOU3QzX18yMTRkZWZhdWx0X2RlbGV0ZUloRUUATlN0M19fMjIwX19zaGFyZWRfcHRyX3BvaW50ZXJJUGhOU18xNGRlZmF1bHRfZGVsZXRlSWhFRU5TXzlhbGxvY2F0b3JJaEVFRUUASW52YWxpZCBpbWFnZSB0eXBlADE2TnVsbEFycmF5RGVsZXRlckloRQBOU3QzX18yMjBfX3NoYXJlZF9wdHJfcG9pbnRlcklQaDE2TnVsbEFycmF5RGVsZXRlckloRU5TXzlhbGxvY2F0b3JJaEVFRUUAQXNzZXJ0aW9uIGBtU3RhcnRUaW1lID49IDBgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZnJhbWV3b3JrL3RpbWVycy5jcHAAIGxpbmUgADogAENsb2NrIGhhcyBub3QgYmVlbiBzdGFydGVkAEFzc2VydGlvbiBgbVN0b3BUaW1lID49IDBgIGZhaWxlZCBpbiAAQ2xvY2sgaGFzIG5vdCBiZWVuIHN0b3BwZWQAWyVzXSBbJXNdIFslc10gOiAlczogJWYgbXMAIElORk8gIAB2aXNpb246OlNjb3BlZFRpbWVyOjp+U2NvcGVkVGltZXIoKQBzZXR1cAB0ZWFyZG93bgBzZXR1cEFSMgBfYWRkTWFya2VyAF9hZGRNdWx0aU1hcmtlcgBfYWRkTkZUTWFya2VyAGdldE11bHRpTWFya2VyTnVtAGdldE11bHRpTWFya2VyQ291bnQAX2xvYWRDYW1lcmEAc2V0TWFya2VySW5mb0RpcgBzZXRNYXJrZXJJbmZvVmVydGV4AGdldFRyYW5zTWF0U3F1YXJlAGdldFRyYW5zTWF0U3F1YXJlQ29udABnZXRUcmFuc01hdE11bHRpU3F1YXJlAGdldFRyYW5zTWF0TXVsdGlTcXVhcmVSb2J1c3QAZGV0ZWN0TWFya2VyAGdldE1hcmtlck51bQBkZXRlY3RORlRNYXJrZXIAZ2V0TXVsdGlFYWNoTWFya2VyAGdldE1hcmtlcgBnZXRORlRNYXJrZXIAc2V0RGVidWdNb2RlAGdldERlYnVnTW9kZQBnZXRQcm9jZXNzaW5nSW1hZ2UAc2V0TG9nTGV2ZWwAZ2V0TG9nTGV2ZWwAc2V0UHJvamVjdGlvbk5lYXJQbGFuZQBnZXRQcm9qZWN0aW9uTmVhclBsYW5lAHNldFByb2plY3Rpb25GYXJQbGFuZQBnZXRQcm9qZWN0aW9uRmFyUGxhbmUAc2V0VGhyZXNob2xkTW9kZQBnZXRUaHJlc2hvbGRNb2RlAHNldFRocmVzaG9sZABnZXRUaHJlc2hvbGQAc2V0UGF0dGVybkRldGVjdGlvbk1vZGUAZ2V0UGF0dGVybkRldGVjdGlvbk1vZGUAc2V0UGF0dFJhdGlvAGdldFBhdHRSYXRpbwBzZXRNYXRyaXhDb2RlVHlwZQBnZXRNYXRyaXhDb2RlVHlwZQBzZXRMYWJlbGluZ01vZGUAZ2V0TGFiZWxpbmdNb2RlAHNldEltYWdlUHJvY01vZGUAZ2V0SW1hZ2VQcm9jTW9kZQBFUlJPUl9BUkNPTlRST0xMRVJfTk9UX0ZPVU5EAEVSUk9SX01VTFRJTUFSS0VSX05PVF9GT1VORABFUlJPUl9NQVJLRVJfSU5ERVhfT1VUX09GX0JPVU5EUwBBUl9ERUJVR19ESVNBQkxFAEFSX0RFQlVHX0VOQUJMRQBBUl9ERUZBVUxUX0RFQlVHX01PREUAQVJfTEFCRUxJTkdfV0hJVEVfUkVHSU9OAEFSX0xBQkVMSU5HX0JMQUNLX1JFR0lPTgBBUl9ERUZBVUxUX0xBQkVMSU5HX01PREUAQVJfREVGQVVMVF9MQUJFTElOR19USFJFU0gAQVJfSU1BR0VfUFJPQ19GUkFNRV9JTUFHRQBBUl9JTUFHRV9QUk9DX0ZJRUxEX0lNQUdFAEFSX0RFRkFVTFRfSU1BR0VfUFJPQ19NT0RFAEFSX1RFTVBMQVRFX01BVENISU5HX0NPTE9SAEFSX1RFTVBMQVRFX01BVENISU5HX01PTk8AQVJfTUFUUklYX0NPREVfREVURUNUSU9OAEFSX1RFTVBMQVRFX01BVENISU5HX0NPTE9SX0FORF9NQVRSSVgAQVJfVEVNUExBVEVfTUFUQ0hJTkdfTU9OT19BTkRfTUFUUklYAEFSX0RFRkFVTFRfUEFUVEVSTl9ERVRFQ1RJT05fTU9ERQBBUl9VU0VfVFJBQ0tJTkdfSElTVE9SWQBBUl9OT1VTRV9UUkFDS0lOR19ISVNUT1JZAEFSX1VTRV9UUkFDS0lOR19ISVNUT1JZX1YyAEFSX0RFRkFVTFRfTUFSS0VSX0VYVFJBQ1RJT05fTU9ERQBBUl9NQVhfTE9PUF9DT1VOVABBUl9MT09QX0JSRUFLX1RIUkVTSABBUl9MT0dfTEVWRUxfREVCVUcAQVJfTE9HX0xFVkVMX0lORk8AQVJfTE9HX0xFVkVMX1dBUk4AQVJfTE9HX0xFVkVMX0VSUk9SAEFSX0xPR19MRVZFTF9SRUxfSU5GTwBBUl9NQVRSSVhfQ09ERV8zeDMAQVJfTUFUUklYX0NPREVfM3gzX0hBTU1JTkc2MwBBUl9NQVRSSVhfQ09ERV8zeDNfUEFSSVRZNjUAQVJfTUFUUklYX0NPREVfNHg0AEFSX01BVFJJWF9DT0RFXzR4NF9CQ0hfMTNfOV8zAEFSX01BVFJJWF9DT0RFXzR4NF9CQ0hfMTNfNV81AEFSX0xBQkVMSU5HX1RIUkVTSF9NT0RFX01BTlVBTABBUl9MQUJFTElOR19USFJFU0hfTU9ERV9BVVRPX01FRElBTgBBUl9MQUJFTElOR19USFJFU0hfTU9ERV9BVVRPX09UU1UAQVJfTEFCRUxJTkdfVEhSRVNIX01PREVfQVVUT19BREFQVElWRQBBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTk9ORQBBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfUEFUVEVSTl9FWFRSQUNUSU9OAEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9NQVRDSF9HRU5FUklDAEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9NQVRDSF9DT05UUkFTVABBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTUFUQ0hfQkFSQ09ERV9OT1RfRk9VTkQAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX01BVENIX0JBUkNPREVfRURDX0ZBSUwAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX01BVENIX0NPTkZJREVOQ0UAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX1BPU0VfRVJST1IAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX1BPU0VfRVJST1JfTVVMVEkAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX0hFVVJJU1RJQ19UUk9VQkxFU09NRV9NQVRSSVhfQ09ERVMAYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQBJbWFnZSBwcm9jLiBtb2RlIHNldCB0byAlZC4KAExhYmVsaW5nIG1vZGUgc2V0IHRvICVkCgB2aWlmAFBhdHRlcm4gcmF0aW8gc2l6ZSBzZXQgdG8gJWYuCgBQYXR0ZXJuIGRldGVjdGlvbiBtb2RlIHNldCB0byAlZC4KAFRocmVzaG9sZCBzZXQgdG8gJWQKAHZpaWkAVGhyZXNob2xkIG1vZGUgc2V0IHRvICVkCgBkaWkAdmlpZABpaQB2aWkAb24uAG9mZi4ARGVidWcgbW9kZSBzZXQgdG8gJXMKAFRyYWNraW5nIGxvc3QuICVkCgBUcmFja2VkIHBhZ2UgJWQgKG1heCAlZCkuCgB7IHZhciAkYSA9IGFyZ3VtZW50czsgdmFyIGkgPSAwOyBpZiAoIWFydG9vbGtpdFsiTkZUTWFya2VySW5mbyJdKSB7IGFydG9vbGtpdFsiTkZUTWFya2VySW5mbyJdID0gKHsgaWQ6IDAsIGVycm9yOiAtMSwgZm91bmQ6IDAsIHBvc2U6IFswLDAsMCwwLCAwLDAsMCwwLCAwLDAsMCwwXSB9KTsgfSB2YXIgbWFya2VySW5mbyA9IGFydG9vbGtpdFsiTkZUTWFya2VySW5mbyJdOyBtYXJrZXJJbmZvWyJpZCJdID0gJGFbaSsrXTsgbWFya2VySW5mb1siZXJyb3IiXSA9ICRhW2krK107IG1hcmtlckluZm9bImZvdW5kIl0gPSAxOyBtYXJrZXJJbmZvWyJwb3NlIl1bMF0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bMV0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bMl0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bM10gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bNF0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bNV0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bNl0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bN10gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bOF0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bOV0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bMTBdID0gJGFbaSsrXTsgbWFya2VySW5mb1sicG9zZSJdWzExXSA9ICRhW2krK107IH0AeyB2YXIgJGEgPSBhcmd1bWVudHM7IHZhciBpID0gMDsgaWYgKCFhcnRvb2xraXRbIk5GVE1hcmtlckluZm8iXSkgeyBhcnRvb2xraXRbIk5GVE1hcmtlckluZm8iXSA9ICh7IGlkOiAwLCBlcnJvcjogLTEsIGZvdW5kOiAwLCBwb3NlOiBbMCwwLDAsMCwgMCwwLDAsMCwgMCwwLDAsMF0gfSk7IH0gdmFyIG1hcmtlckluZm8gPSBhcnRvb2xraXRbIk5GVE1hcmtlckluZm8iXTsgbWFya2VySW5mb1siaWQiXSA9ICRhW2krK107IG1hcmtlckluZm9bImVycm9yIl0gPSAtMTsgbWFya2VySW5mb1siZm91bmQiXSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVswXSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVsxXSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVsyXSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVszXSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs0XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs1XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs2XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs3XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs4XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs5XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVsxMF0gPSAwOyBtYXJrZXJJbmZvWyJwb3NlIl1bMTFdID0gMDsgfQB7IHZhciAkYSA9IGFyZ3VtZW50czsgdmFyIGkgPSAxMjsgaWYgKCFhcnRvb2xraXRbIm1hcmtlckluZm8iXSkgeyBhcnRvb2xraXRbIm1hcmtlckluZm8iXSA9ICh7IHBvczogWzAsMF0sIGxpbmU6IFtbMCwwLDBdLCBbMCwwLDBdLCBbMCwwLDBdLCBbMCwwLDBdXSwgdmVydGV4OiBbWzAsMF0sIFswLDBdLCBbMCwwXSwgWzAsMF1dIH0pOyB9IHZhciBtYXJrZXJJbmZvID0gYXJ0b29sa2l0WyJtYXJrZXJJbmZvIl07IG1hcmtlckluZm9bImFyZWEiXSA9ICQwOyBtYXJrZXJJbmZvWyJpZCJdID0gJDE7IG1hcmtlckluZm9bImlkUGF0dCJdID0gJDI7IG1hcmtlckluZm9bImlkTWF0cml4Il0gPSAkMzsgbWFya2VySW5mb1siZGlyIl0gPSAkNDsgbWFya2VySW5mb1siZGlyUGF0dCJdID0gJDU7IG1hcmtlckluZm9bImRpck1hdHJpeCJdID0gJDY7IG1hcmtlckluZm9bImNmIl0gPSAkNzsgbWFya2VySW5mb1siY2ZQYXR0Il0gPSAkODsgbWFya2VySW5mb1siY2ZNYXRyaXgiXSA9ICQ5OyBtYXJrZXJJbmZvWyJwb3MiXVswXSA9ICQxMDsgbWFya2VySW5mb1sicG9zIl1bMV0gPSAkMTE7IG1hcmtlckluZm9bImxpbmUiXVswXVswXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVswXVsxXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVswXVsyXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsxXVswXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsxXVsxXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsxXVsyXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsyXVswXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsyXVsxXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsyXVsyXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVszXVswXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVszXVsxXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVszXVsyXSA9ICRhW2krK107IG1hcmtlckluZm9bInZlcnRleCJdWzBdWzBdID0gJGFbaSsrXTsgbWFya2VySW5mb1sidmVydGV4Il1bMF1bMV0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJ2ZXJ0ZXgiXVsxXVswXSA9ICRhW2krK107IG1hcmtlckluZm9bInZlcnRleCJdWzFdWzFdID0gJGFbaSsrXTsgbWFya2VySW5mb1sidmVydGV4Il1bMl1bMF0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJ2ZXJ0ZXgiXVsyXVsxXSA9ICRhW2krK107IG1hcmtlckluZm9bInZlcnRleCJdWzNdWzBdID0gJGFbaSsrXTsgbWFya2VySW5mb1sidmVydGV4Il1bM11bMV0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJlcnJvckNvcnJlY3RlZCJdID0gJGFbaSsrXTsgfQB7IGlmICghYXJ0b29sa2l0WyJtdWx0aUVhY2hNYXJrZXJJbmZvIl0pIHsgYXJ0b29sa2l0WyJtdWx0aUVhY2hNYXJrZXJJbmZvIl0gPSAoe30pOyB9IHZhciBtdWx0aUVhY2hNYXJrZXIgPSBhcnRvb2xraXRbIm11bHRpRWFjaE1hcmtlckluZm8iXTsgbXVsdGlFYWNoTWFya2VyWyd2aXNpYmxlJ10gPSAkMDsgbXVsdGlFYWNoTWFya2VyWydwYXR0SWQnXSA9ICQxOyBtdWx0aUVhY2hNYXJrZXJbJ3BhdHRUeXBlJ10gPSAkMjsgbXVsdGlFYWNoTWFya2VyWyd3aWR0aCddID0gJDM7IH0AaWlpAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0ljTlNfMTFjaGFyX3RyYWl0c0ljRUVOU185YWxsb2NhdG9ySWNFRUVFAE5TdDNfXzIyMV9fYmFzaWNfc3RyaW5nX2NvbW1vbklMYjFFRUUAbG9hZENhbWVyYSgpOiBFcnJvciBsb2FkaW5nIHBhcmFtZXRlciBmaWxlICVzIGZvciBjYW1lcmEuCgBpaWlpAEFSVG9vbEtpdEpTKCk6IFVuYWJsZSB0byBzZXQgdXAgTkZUIG1hcmtlci4KAFJlYWRpbmcgJXMuZnNldDMKAGZzZXQzAEVycm9yIHJlYWRpbmcgS1BNIGRhdGEgZnJvbSAlcy5mc2V0MwoAICBBc3NpZ25lZCBwYWdlIG5vLiAlZC4KAEVycm9yOiBrcG1DaGFuZ2VQYWdlTm9PZlJlZkRhdGFTZXQKAEVycm9yOiBrcG1NZXJnZVJlZkRhdGFTZXQKACAgRG9uZS4KAFJlYWRpbmcgJXMuZnNldAoAZnNldABFcnJvciByZWFkaW5nIGRhdGEgZnJvbSAlcy5mc2V0CgBFcnJvcjoga3BtU2V0UmVmRGF0YVNldAoATG9hZGluZyBvZiBORlQgZGF0YSBjb21wbGV0ZS4KAEFSVG9vbEtpdEpTKCk6IFVuYWJsZSB0byBzZXQgdXAgQVIgbXVsdGltYXJrZXIuCgBjb25maWcgZGF0YSBsb2FkIGVycm9yICEhCgBBUlRvb2xLaXRKUygpOiBVbmFibGUgdG8gc2V0IHVwIEFSIG1hcmtlci4KAGxvYWRNYXJrZXIoKTogRXJyb3IgbG9hZGluZyBwYXR0ZXJuIGZpbGUgJXMuCgBFcnJvcjogYXIyQ3JlYXRlSGFuZGxlLgoAaWlpaWkAc2V0dXAoKTogRXJyb3I6IGFyUGF0dENyZWF0ZUhhbmRsZS4KAEFsbG9jYXRlZCB2aWRlb0ZyYW1lU2l6ZSAlZAoAeyBpZiAoIWFydG9vbGtpdFsiZnJhbWVNYWxsb2MiXSkgeyBhcnRvb2xraXRbImZyYW1lTWFsbG9jIl0gPSAoe30pOyB9IHZhciBmcmFtZU1hbGxvYyA9IGFydG9vbGtpdFsiZnJhbWVNYWxsb2MiXTsgZnJhbWVNYWxsb2NbImZyYW1lcG9pbnRlciJdID0gJDE7IGZyYW1lTWFsbG9jWyJmcmFtZXNpemUiXSA9ICQyOyBmcmFtZU1hbGxvY1siY2FtZXJhIl0gPSAkMzsgZnJhbWVNYWxsb2NbInRyYW5zZm9ybSJdID0gJDQ7IGZyYW1lTWFsbG9jWyJ2aWRlb0x1bWFQb2ludGVyIl0gPSAkNTsgfQAqKiogQ2FtZXJhIFBhcmFtZXRlciByZXNpemVkIGZyb20gJWQsICVkLiAqKioKAHNldENhbWVyYSgpOiBFcnJvcjogYXJQYXJhbUxUQ3JlYXRlLgoAc2V0Q2FtZXJhKCk6IEVycm9yOiBhckNyZWF0ZUhhbmRsZS4KAHNldENhbWVyYSgpOiBFcnJvciBjcmVhdGluZyAzRCBoYW5kbGUAT3V0IG9mIG1lbW9yeSEhCgBFcnJvcjogbWFsbG9jCgAjIyMgRmVhdHVyZSBjYW5kaWRhdGVzIGZvciB0cmFja2luZyBhcmUgb3ZlcmZsb3cuCgBCb2d1cyBtZXNzYWdlIGNvZGUgJWQAQUxJR05fVFlQRSBpcyB3cm9uZywgcGxlYXNlIGZpeABNQVhfQUxMT0NfQ0hVTksgaXMgd3JvbmcsIHBsZWFzZSBmaXgAQm9ndXMgYnVmZmVyIGNvbnRyb2wgbW9kZQBJbnZhbGlkIGNvbXBvbmVudCBJRCAlZCBpbiBTT1MASW52YWxpZCBjcm9wIHJlcXVlc3QARENUIGNvZWZmaWNpZW50IG91dCBvZiByYW5nZQBEQ1Qgc2NhbGVkIGJsb2NrIHNpemUgJWR4JWQgbm90IHN1cHBvcnRlZABDb21wb25lbnQgaW5kZXggJWQ6IG1pc21hdGNoaW5nIHNhbXBsaW5nIHJhdGlvICVkOiVkLCAlZDolZCwgJWMAQm9ndXMgSHVmZm1hbiB0YWJsZSBkZWZpbml0aW9uAEJvZ3VzIGlucHV0IGNvbG9yc3BhY2UAQm9ndXMgSlBFRyBjb2xvcnNwYWNlAEJvZ3VzIG1hcmtlciBsZW5ndGgAV3JvbmcgSlBFRyBsaWJyYXJ5IHZlcnNpb246IGxpYnJhcnkgaXMgJWQsIGNhbGxlciBleHBlY3RzICVkAFNhbXBsaW5nIGZhY3RvcnMgdG9vIGxhcmdlIGZvciBpbnRlcmxlYXZlZCBzY2FuAEludmFsaWQgbWVtb3J5IHBvb2wgY29kZSAlZABVbnN1cHBvcnRlZCBKUEVHIGRhdGEgcHJlY2lzaW9uICVkAEludmFsaWQgcHJvZ3Jlc3NpdmUgcGFyYW1ldGVycyBTcz0lZCBTZT0lZCBBaD0lZCBBbD0lZABJbnZhbGlkIHByb2dyZXNzaXZlIHBhcmFtZXRlcnMgYXQgc2NhbiBzY3JpcHQgZW50cnkgJWQAQm9ndXMgc2FtcGxpbmcgZmFjdG9ycwBJbnZhbGlkIHNjYW4gc2NyaXB0IGF0IGVudHJ5ICVkAEltcHJvcGVyIGNhbGwgdG8gSlBFRyBsaWJyYXJ5IGluIHN0YXRlICVkAEpQRUcgcGFyYW1ldGVyIHN0cnVjdCBtaXNtYXRjaDogbGlicmFyeSB0aGlua3Mgc2l6ZSBpcyAldSwgY2FsbGVyIGV4cGVjdHMgJXUAQm9ndXMgdmlydHVhbCBhcnJheSBhY2Nlc3MAQnVmZmVyIHBhc3NlZCB0byBKUEVHIGxpYnJhcnkgaXMgdG9vIHNtYWxsAFN1c3BlbnNpb24gbm90IGFsbG93ZWQgaGVyZQBDQ0lSNjAxIHNhbXBsaW5nIG5vdCBpbXBsZW1lbnRlZCB5ZXQAVG9vIG1hbnkgY29sb3IgY29tcG9uZW50czogJWQsIG1heCAlZABVbnN1cHBvcnRlZCBjb2xvciBjb252ZXJzaW9uIHJlcXVlc3QAQm9ndXMgREFDIGluZGV4ICVkAEJvZ3VzIERBQyB2YWx1ZSAweCV4AEJvZ3VzIERIVCBpbmRleCAlZABCb2d1cyBEUVQgaW5kZXggJWQARW1wdHkgSlBFRyBpbWFnZSAoRE5MIG5vdCBzdXBwb3J0ZWQpAFJlYWQgZnJvbSBFTVMgZmFpbGVkAFdyaXRlIHRvIEVNUyBmYWlsZWQARGlkbid0IGV4cGVjdCBtb3JlIHRoYW4gb25lIHNjYW4ASW5wdXQgZmlsZSByZWFkIGVycm9yAE91dHB1dCBmaWxlIHdyaXRlIGVycm9yIC0tLSBvdXQgb2YgZGlzayBzcGFjZT8ARnJhY3Rpb25hbCBzYW1wbGluZyBub3QgaW1wbGVtZW50ZWQgeWV0AEh1ZmZtYW4gY29kZSBzaXplIHRhYmxlIG92ZXJmbG93AE1pc3NpbmcgSHVmZm1hbiBjb2RlIHRhYmxlIGVudHJ5AE1heGltdW0gc3VwcG9ydGVkIGltYWdlIGRpbWVuc2lvbiBpcyAldSBwaXhlbHMARW1wdHkgaW5wdXQgZmlsZQBQcmVtYXR1cmUgZW5kIG9mIGlucHV0IGZpbGUAQ2Fubm90IHRyYW5zY29kZSBkdWUgdG8gbXVsdGlwbGUgdXNlIG9mIHF1YW50aXphdGlvbiB0YWJsZSAlZABTY2FuIHNjcmlwdCBkb2VzIG5vdCB0cmFuc21pdCBhbGwgZGF0YQBJbnZhbGlkIGNvbG9yIHF1YW50aXphdGlvbiBtb2RlIGNoYW5nZQBOb3QgaW1wbGVtZW50ZWQgeWV0AFJlcXVlc3RlZCBmZWF0dXJlIHdhcyBvbWl0dGVkIGF0IGNvbXBpbGUgdGltZQBBcml0aG1ldGljIHRhYmxlIDB4JTAyeCB3YXMgbm90IGRlZmluZWQAQmFja2luZyBzdG9yZSBub3Qgc3VwcG9ydGVkAEh1ZmZtYW4gdGFibGUgMHglMDJ4IHdhcyBub3QgZGVmaW5lZABKUEVHIGRhdGFzdHJlYW0gY29udGFpbnMgbm8gaW1hZ2UAUXVhbnRpemF0aW9uIHRhYmxlIDB4JTAyeCB3YXMgbm90IGRlZmluZWQATm90IGEgSlBFRyBmaWxlOiBzdGFydHMgd2l0aCAweCUwMnggMHglMDJ4AEluc3VmZmljaWVudCBtZW1vcnkgKGNhc2UgJWQpAENhbm5vdCBxdWFudGl6ZSBtb3JlIHRoYW4gJWQgY29sb3IgY29tcG9uZW50cwBDYW5ub3QgcXVhbnRpemUgdG8gZmV3ZXIgdGhhbiAlZCBjb2xvcnMAQ2Fubm90IHF1YW50aXplIHRvIG1vcmUgdGhhbiAlZCBjb2xvcnMASW52YWxpZCBKUEVHIGZpbGUgc3RydWN0dXJlOiAlcyBiZWZvcmUgU09GAEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogdHdvIFNPRiBtYXJrZXJzAEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogbWlzc2luZyBTT1MgbWFya2VyAFVuc3VwcG9ydGVkIEpQRUcgcHJvY2VzczogU09GIHR5cGUgMHglMDJ4AEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogdHdvIFNPSSBtYXJrZXJzAEZhaWxlZCB0byBjcmVhdGUgdGVtcG9yYXJ5IGZpbGUgJXMAUmVhZCBmYWlsZWQgb24gdGVtcG9yYXJ5IGZpbGUAU2VlayBmYWlsZWQgb24gdGVtcG9yYXJ5IGZpbGUAV3JpdGUgZmFpbGVkIG9uIHRlbXBvcmFyeSBmaWxlIC0tLSBvdXQgb2YgZGlzayBzcGFjZT8AQXBwbGljYXRpb24gdHJhbnNmZXJyZWQgdG9vIGZldyBzY2FubGluZXMAVW5zdXBwb3J0ZWQgbWFya2VyIHR5cGUgMHglMDJ4AFZpcnR1YWwgYXJyYXkgY29udHJvbGxlciBtZXNzZWQgdXAASW1hZ2UgdG9vIHdpZGUgZm9yIHRoaXMgaW1wbGVtZW50YXRpb24AUmVhZCBmcm9tIFhNUyBmYWlsZWQAV3JpdGUgdG8gWE1TIGZhaWxlZABDb3B5cmlnaHQgKEMpIDIwMTgsIFRob21hcyBHLiBMYW5lLCBHdWlkbyBWb2xsYmVkaW5nADljICAxNC1KYW4tMjAxOABDYXV0aW9uOiBxdWFudGl6YXRpb24gdGFibGVzIGFyZSB0b28gY29hcnNlIGZvciBiYXNlbGluZSBKUEVHAEFkb2JlIEFQUDE0IG1hcmtlcjogdmVyc2lvbiAlZCwgZmxhZ3MgMHglMDR4IDB4JTA0eCwgdHJhbnNmb3JtICVkAFVua25vd24gQVBQMCBtYXJrZXIgKG5vdCBKRklGKSwgbGVuZ3RoICV1AFVua25vd24gQVBQMTQgbWFya2VyIChub3QgQWRvYmUpLCBsZW5ndGggJXUARGVmaW5lIEFyaXRobWV0aWMgVGFibGUgMHglMDJ4OiAweCUwMngARGVmaW5lIEh1ZmZtYW4gVGFibGUgMHglMDJ4AERlZmluZSBRdWFudGl6YXRpb24gVGFibGUgJWQgIHByZWNpc2lvbiAlZABEZWZpbmUgUmVzdGFydCBJbnRlcnZhbCAldQBGcmVlZCBFTVMgaGFuZGxlICV1AE9idGFpbmVkIEVNUyBoYW5kbGUgJXUARW5kIE9mIEltYWdlACAgICAgICAgJTNkICUzZCAlM2QgJTNkICUzZCAlM2QgJTNkICUzZABKRklGIEFQUDAgbWFya2VyOiB2ZXJzaW9uICVkLiUwMmQsIGRlbnNpdHkgJWR4JWQgICVkAFdhcm5pbmc6IHRodW1ibmFpbCBpbWFnZSBzaXplIGRvZXMgbm90IG1hdGNoIGRhdGEgbGVuZ3RoICV1AEpGSUYgZXh0ZW5zaW9uIG1hcmtlcjogdHlwZSAweCUwMngsIGxlbmd0aCAldQAgICAgd2l0aCAlZCB4ICVkIHRodW1ibmFpbCBpbWFnZQBNaXNjZWxsYW5lb3VzIG1hcmtlciAweCUwMngsIGxlbmd0aCAldQBVbmV4cGVjdGVkIG1hcmtlciAweCUwMngAICAgICAgICAlNHUgJTR1ICU0dSAlNHUgJTR1ICU0dSAlNHUgJTR1AFF1YW50aXppbmcgdG8gJWQgPSAlZColZColZCBjb2xvcnMAUXVhbnRpemluZyB0byAlZCBjb2xvcnMAU2VsZWN0ZWQgJWQgY29sb3JzIGZvciBxdWFudGl6YXRpb24AQXQgbWFya2VyIDB4JTAyeCwgcmVjb3ZlcnkgYWN0aW9uICVkAFJTVCVkAFNtb290aGluZyBub3Qgc3VwcG9ydGVkIHdpdGggbm9uc3RhbmRhcmQgc2FtcGxpbmcgcmF0aW9zAFN0YXJ0IE9mIEZyYW1lIDB4JTAyeDogd2lkdGg9JXUsIGhlaWdodD0ldSwgY29tcG9uZW50cz0lZAAgICAgQ29tcG9uZW50ICVkOiAlZGh4JWR2IHE9JWQAU3RhcnQgb2YgSW1hZ2UAU3RhcnQgT2YgU2NhbjogJWQgY29tcG9uZW50cwAgICAgQ29tcG9uZW50ICVkOiBkYz0lZCBhYz0lZAAgIFNzPSVkLCBTZT0lZCwgQWg9JWQsIEFsPSVkAENsb3NlZCB0ZW1wb3JhcnkgZmlsZSAlcwBPcGVuZWQgdGVtcG9yYXJ5IGZpbGUgJXMASkZJRiBleHRlbnNpb24gbWFya2VyOiBKUEVHLWNvbXByZXNzZWQgdGh1bWJuYWlsIGltYWdlLCBsZW5ndGggJXUASkZJRiBleHRlbnNpb24gbWFya2VyOiBwYWxldHRlIHRodW1ibmFpbCBpbWFnZSwgbGVuZ3RoICV1AEpGSUYgZXh0ZW5zaW9uIG1hcmtlcjogUkdCIHRodW1ibmFpbCBpbWFnZSwgbGVuZ3RoICV1AFVucmVjb2duaXplZCBjb21wb25lbnQgSURzICVkICVkICVkLCBhc3N1bWluZyBZQ2JDcgBGcmVlZCBYTVMgaGFuZGxlICV1AE9idGFpbmVkIFhNUyBoYW5kbGUgJXUAVW5rbm93biBBZG9iZSBjb2xvciB0cmFuc2Zvcm0gY29kZSAlZABDb3JydXB0IEpQRUcgZGF0YTogYmFkIGFyaXRobWV0aWMgY29kZQBJbmNvbnNpc3RlbnQgcHJvZ3Jlc3Npb24gc2VxdWVuY2UgZm9yIGNvbXBvbmVudCAlZCBjb2VmZmljaWVudCAlZABDb3JydXB0IEpQRUcgZGF0YTogJXUgZXh0cmFuZW91cyBieXRlcyBiZWZvcmUgbWFya2VyIDB4JTAyeABDb3JydXB0IEpQRUcgZGF0YTogcHJlbWF0dXJlIGVuZCBvZiBkYXRhIHNlZ21lbnQAQ29ycnVwdCBKUEVHIGRhdGE6IGJhZCBIdWZmbWFuIGNvZGUAV2FybmluZzogdW5rbm93biBKRklGIHJldmlzaW9uIG51bWJlciAlZC4lMDJkAFByZW1hdHVyZSBlbmQgb2YgSlBFRyBmaWxlAENvcnJ1cHQgSlBFRyBkYXRhOiBmb3VuZCBtYXJrZXIgMHglMDJ4IGluc3RlYWQgb2YgUlNUJWQASW52YWxpZCBTT1MgcGFyYW1ldGVycyBmb3Igc2VxdWVudGlhbCBKUEVHAEFwcGxpY2F0aW9uIHRyYW5zZmVycmVkIHRvbyBtYW55IHNjYW5saW5lcwBKUEVHTUVNACVsZCVjAFNPUwBMU0UAJXMKAHJ3YQBpbmZpbml0eQAAAQIEBwMGBQAtKyAgIDBYMHgAKG51bGwpAC0wWCswWCAwWC0weCsweCAweABpbmYASU5GAG5hbgBOQU4ALgBMQ19BTEwATEFORwBDLlVURi04AFBPU0lYAE1VU0xfTE9DUEFUSAB0ZXJtaW5hdGluZyB3aXRoICVzIGV4Y2VwdGlvbiBvZiB0eXBlICVzOiAlcwB0ZXJtaW5hdGluZyB3aXRoICVzIGV4Y2VwdGlvbiBvZiB0eXBlICVzAHRlcm1pbmF0aW5nIHdpdGggJXMgZm9yZWlnbiBleGNlcHRpb24AdGVybWluYXRpbmcAdW5jYXVnaHQAU3Q5ZXhjZXB0aW9uAE4xMF9fY3h4YWJpdjExNl9fc2hpbV90eXBlX2luZm9FAFN0OXR5cGVfaW5mbwBOMTBfX2N4eGFiaXYxMjBfX3NpX2NsYXNzX3R5cGVfaW5mb0UATjEwX19jeHhhYml2MTE3X19jbGFzc190eXBlX2luZm9FAHRlcm1pbmF0ZV9oYW5kbGVyIHVuZXhwZWN0ZWRseSByZXR1cm5lZABTdDExbG9naWNfZXJyb3IAU3QxMmxlbmd0aF9lcnJvcgBOMTBfX2N4eGFiaXYxMTdfX3BiYXNlX3R5cGVfaW5mb0UATjEwX19jeHhhYml2MTE5X19wb2ludGVyX3R5cGVfaW5mb0UATjEwX19jeHhhYml2MTIzX19mdW5kYW1lbnRhbF90eXBlX2luZm9FAHYAYgBjAGgAYQBzAHQAaQBqAG0AZgBkAE4xMF9fY3h4YWJpdjEyMV9fdm1pX2NsYXNzX3R5cGVfaW5mb0UAdm9pZABib29sAGNoYXIAc2lnbmVkIGNoYXIAdW5zaWduZWQgY2hhcgBzaG9ydAB1bnNpZ25lZCBzaG9ydABpbnQAdW5zaWduZWQgaW50AGxvbmcAdW5zaWduZWQgbG9uZwBmbG9hdABkb3VibGUAc3RkOjpzdHJpbmcAc3RkOjpiYXNpY19zdHJpbmc8dW5zaWduZWQgY2hhcj4Ac3RkOjp3c3RyaW5nAHN0ZDo6dTE2c3RyaW5nAHN0ZDo6dTMyc3RyaW5nAGVtc2NyaXB0ZW46OnZhbABlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxzaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8bG9uZz4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgbG9uZz4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQxNl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50MTZfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MzJfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDMyX3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGZsb2F0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxkb3VibGU+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGxvbmcgZG91YmxlPgBOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0llRUUATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJZEVFAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWZFRQBOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0ltRUUATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJbEVFAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWpFRQBOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lpRUUATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJdEVFAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXNFRQBOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0loRUUATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJYUVFAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWNFRQBOMTBlbXNjcmlwdGVuM3ZhbEUATlN0M19fMjEyYmFzaWNfc3RyaW5nSURpTlNfMTFjaGFyX3RyYWl0c0lEaUVFTlNfOWFsbG9jYXRvcklEaUVFRUUATlN0M19fMjEyYmFzaWNfc3RyaW5nSURzTlNfMTFjaGFyX3RyYWl0c0lEc0VFTlNfOWFsbG9jYXRvcklEc0VFRUUATlN0M19fMjEyYmFzaWNfc3RyaW5nSXdOU18xMWNoYXJfdHJhaXRzSXdFRU5TXzlhbGxvY2F0b3JJd0VFRUUATlN0M19fMjEyYmFzaWNfc3RyaW5nSWhOU18xMWNoYXJfdHJhaXRzSWhFRU5TXzlhbGxvY2F0b3JJaEVFRUUATlN0M19fMjhpb3NfYmFzZUUATlN0M19fMjliYXNpY19pb3NJY05TXzExY2hhcl90cmFpdHNJY0VFRUUATlN0M19fMjliYXNpY19pb3NJd05TXzExY2hhcl90cmFpdHNJd0VFRUUATlN0M19fMjE1YmFzaWNfc3RyZWFtYnVmSWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFAE5TdDNfXzIxNWJhc2ljX3N0cmVhbWJ1Zkl3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRQBOU3QzX18yMTNiYXNpY19pc3RyZWFtSWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFAE5TdDNfXzIxM2Jhc2ljX2lzdHJlYW1Jd05TXzExY2hhcl90cmFpdHNJd0VFRUUATlN0M19fMjEzYmFzaWNfb3N0cmVhbUljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRQBOU3QzX18yMTNiYXNpY19vc3RyZWFtSXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFAE5TdDNfXzIxMV9fc3Rkb3V0YnVmSXdFRQBOU3QzX18yMTFfX3N0ZG91dGJ1ZkljRUUAdW5zdXBwb3J0ZWQgbG9jYWxlIGZvciBzdGFuZGFyZCBpbnB1dABOU3QzX18yMTBfX3N0ZGluYnVmSXdFRQBOU3QzX18yMTBfX3N0ZGluYnVmSWNFRQBOU3QzX18yN2NvbGxhdGVJY0VFAE5TdDNfXzI2bG9jYWxlNWZhY2V0RQBOU3QzX18yN2NvbGxhdGVJd0VFACVwAEMATlN0M19fMjdudW1fZ2V0SWNOU18xOWlzdHJlYW1idWZfaXRlcmF0b3JJY05TXzExY2hhcl90cmFpdHNJY0VFRUVFRQBOU3QzX18yOV9fbnVtX2dldEljRUUATlN0M19fMjE0X19udW1fZ2V0X2Jhc2VFAE5TdDNfXzI3bnVtX2dldEl3TlNfMTlpc3RyZWFtYnVmX2l0ZXJhdG9ySXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFRUUATlN0M19fMjlfX251bV9nZXRJd0VFACVwAAAAAEwAbGwAJQAAAAAAbABOU3QzX18yN251bV9wdXRJY05TXzE5b3N0cmVhbWJ1Zl9pdGVyYXRvckljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRUVFAE5TdDNfXzI5X19udW1fcHV0SWNFRQBOU3QzX18yMTRfX251bV9wdXRfYmFzZUUATlN0M19fMjdudW1fcHV0SXdOU18xOW9zdHJlYW1idWZfaXRlcmF0b3JJd05TXzExY2hhcl90cmFpdHNJd0VFRUVFRQBOU3QzX18yOV9fbnVtX3B1dEl3RUUAJUg6JU06JVMAJW0vJWQvJXkAJUk6JU06JVMgJXAAJWEgJWIgJWQgJUg6JU06JVMgJVkAQU0AUE0ASmFudWFyeQBGZWJydWFyeQBNYXJjaABBcHJpbABNYXkASnVuZQBKdWx5AEF1Z3VzdABTZXB0ZW1iZXIAT2N0b2JlcgBOb3ZlbWJlcgBEZWNlbWJlcgBKYW4ARmViAE1hcgBBcHIASnVuAEp1bABBdWcAU2VwAE9jdABOb3YARGVjAFN1bmRheQBNb25kYXkAVHVlc2RheQBXZWRuZXNkYXkAVGh1cnNkYXkARnJpZGF5AFNhdHVyZGF5AFN1bgBNb24AVHVlAFdlZABUaHUARnJpAFNhdAAlbS8lZC8leSVZLSVtLSVkJUk6JU06JVMgJXAlSDolTSVIOiVNOiVTJUg6JU06JVNOU3QzX18yOHRpbWVfZ2V0SWNOU18xOWlzdHJlYW1idWZfaXRlcmF0b3JJY05TXzExY2hhcl90cmFpdHNJY0VFRUVFRQBOU3QzX18yMjBfX3RpbWVfZ2V0X2Nfc3RvcmFnZUljRUUATlN0M19fMjl0aW1lX2Jhc2VFAE5TdDNfXzI4dGltZV9nZXRJd05TXzE5aXN0cmVhbWJ1Zl9pdGVyYXRvckl3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRUVFAE5TdDNfXzIyMF9fdGltZV9nZXRfY19zdG9yYWdlSXdFRQBOU3QzX18yOHRpbWVfcHV0SWNOU18xOW9zdHJlYW1idWZfaXRlcmF0b3JJY05TXzExY2hhcl90cmFpdHNJY0VFRUVFRQBOU3QzX18yMTBfX3RpbWVfcHV0RQBOU3QzX18yOHRpbWVfcHV0SXdOU18xOW9zdHJlYW1idWZfaXRlcmF0b3JJd05TXzExY2hhcl90cmFpdHNJd0VFRUVFRQBOU3QzX18yMTBtb25leXB1bmN0SWNMYjBFRUUATlN0M19fMjEwbW9uZXlfYmFzZUUATlN0M19fMjEwbW9uZXlwdW5jdEljTGIxRUVFAE5TdDNfXzIxMG1vbmV5cHVuY3RJd0xiMEVFRQBOU3QzX18yMTBtb25leXB1bmN0SXdMYjFFRUUAMDEyMzQ1Njc4OQAlTGYATlN0M19fMjltb25leV9nZXRJY05TXzE5aXN0cmVhbWJ1Zl9pdGVyYXRvckljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRUVFAE5TdDNfXzIxMV9fbW9uZXlfZ2V0SWNFRQAwMTIzNDU2Nzg5AE5TdDNfXzI5bW9uZXlfZ2V0SXdOU18xOWlzdHJlYW1idWZfaXRlcmF0b3JJd05TXzExY2hhcl90cmFpdHNJd0VFRUVFRQBOU3QzX18yMTFfX21vbmV5X2dldEl3RUUAJS4wTGYATlN0M19fMjltb25leV9wdXRJY05TXzE5b3N0cmVhbWJ1Zl9pdGVyYXRvckljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRUVFAE5TdDNfXzIxMV9fbW9uZXlfcHV0SWNFRQBOU3QzX18yOW1vbmV5X3B1dEl3TlNfMTlvc3RyZWFtYnVmX2l0ZXJhdG9ySXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFRUUATlN0M19fMjExX19tb25leV9wdXRJd0VFAE5TdDNfXzI4bWVzc2FnZXNJY0VFAE5TdDNfXzIxM21lc3NhZ2VzX2Jhc2VFAE5TdDNfXzIxN19fd2lkZW5fZnJvbV91dGY4SUxtMzJFRUUATlN0M19fMjdjb2RlY3Z0SURpYzExX19tYnN0YXRlX3RFRQBOU3QzX18yMTJjb2RlY3Z0X2Jhc2VFAE5TdDNfXzIxNl9fbmFycm93X3RvX3V0ZjhJTG0zMkVFRQBOU3QzX18yOG1lc3NhZ2VzSXdFRQBOU3QzX18yN2NvZGVjdnRJY2MxMV9fbWJzdGF0ZV90RUUATlN0M19fMjdjb2RlY3Z0SXdjMTFfX21ic3RhdGVfdEVFAE5TdDNfXzI3Y29kZWN2dElEc2MxMV9fbWJzdGF0ZV90RUUATlN0M19fMjZsb2NhbGU1X19pbXBFAE5TdDNfXzI1Y3R5cGVJY0VFAE5TdDNfXzIxMGN0eXBlX2Jhc2VFAE5TdDNfXzI1Y3R5cGVJd0VFAGZhbHNlAHRydWUATlN0M19fMjhudW1wdW5jdEljRUUATlN0M19fMjhudW1wdW5jdEl3RUUATlN0M19fMjE0X19zaGFyZWRfY291bnRFAE5TdDNfXzIxOV9fc2hhcmVkX3dlYWtfY291bnRFAEHwvgMLAQEAQZjAAwtaXEgAAAEAAAB8SAAAAQAAANBQAAABAAAAICIAAAAAAACUUQAAAQAAANhRAAABAAAAjFAAAAEAAABM4gAAAAAAAAhSAAABAAAAOFIAAAEAAAAEUQAAAQAAAC4sAEGAwQMLDSxRAAABAAAALgAAACwAQaDBAwvJApxIAAABAAAA3EgAAAEAAAAcSQAAAQAAAFBJAAABAAAAnE4AAAEAAADUTgAAAQAAAAxPAAABAAAARE8AAAEAAAB8TwAAAQAAAJhPAAABAAAAtE8AAAEAAADQTwAAAQAAAIRJAAABAAAAtEkAAAAAAADYSQAAAQAAAAhKAAAAAAAAbE4AAAEAAABM4gAAAAAAAIROAAABAAAATOIAAAAAAADsTwAAAQAAAAxQAAABAAAAAQAAAAAAAAC8UAAADwAAAHDhAADg4QAA4OEAAAAAAAAY4AAAIOAAACjgAAA44AAAQOAAAEjgAABY4AAAYOAAAGjgAACA4AAAoOAAAKjgAACw4AAAuOAAAMDgAADI4AAA0OAAANjgAADg4AAA6OAAAPDgAAD44AAAAOEAABDhAAAg4QAAMOEAAEDhAABI4QAAAQAAAAAAAABDAEHzwwMLBgEAAAAAAQBB6MUDCxGgRgAAAAAAALRGAAACEAAABgBBiMYDCwaQ5QAAWOEAQbjGAwsZmOMAAP/////QRgAAAAAAAORGAAACEAAABgBB4MYDCwbQ5QAAWOEAQZDHAwsV7OMAAP////8ARwAAFEcAAAIQAAAGAEG0xwMLBhDmAABY4QBB6McDCxH/////MEcAAERHAAACEAAABgBBiMgDCwZI5gAAWOEAQbzIAwsR/////wBHAAAURwAAAjAAAAYAQdzIAwsGgOYAAFjhAEGMyQMLFZjjAAD/////MEcAAERHAAACMAAABgBBsMkDCwa45gAAWOEAQeDJAwsV7OMAAP////8ARwAAFEcAAAIQAAAGAEGEygMLBoDmAABY4QBBuMoDCxH/////MEcAAERHAAACEAAABgBB2MoDCwa45gAAWOEAQYzLAwsK/////xxIAABY4QBBsMsDCxb4OQAAQOAAAMjlAAABAAAA/////wABAEHQywMLBtxHAABY4QBB8MsDCxT4OQAASOAAAAjmAAABAAAA/////wBBkMwDCwacRwAAWOEAQbDMAwsNiDoAAEDgAABA5gAAAQBByMwDCwZcRwAAWOEAQejMAwsKiDoAAEjgAAB45gBBgM0DCwacRwAAWOEAQaDNAwsNaDkAAEDgAACw5gAAAQBBuM0DCwZcRwAAWOEAQdjNAwsKaDkAAEjgAADo5gBB8M0DC1X/////AQAAAP////8CAAAA/////wMAAABM4gAAHAAAAP////8JAAAA/////wsAAAD/////BAAAAP////8KAAAA/////wwAAAD/////DQAAAP////8OAEGEzwMLBf////8XAEHIzwMLlgH/////GAAAAP////8ZAAAA/////xoAAAD/////DwAAAP////8QAAAA/////xEAAAD/////EgAAAP////8TAAAA/////xQAAAD/////FQAAAP////8WAAAA/////xsAAAD/////HAAAAP////8FAAAA/////wYAAAD/////BwAAAP////8IAAAAWOEAAFDoAABY4QAAWOgAQfDeAwsCWOEAQYDfAwsFOOgAAI8AQZDfAwsRjwAAAAAAAACg7wAAAAAAAI8=";function mA(){try{if(u)return new Uint8Array(u);var A=_g(qA);if(A)return A;if(c)return c(qA);throw"both async and sync fetching of the wasm failed"}catch(A){pA(A)}}function vA(){return u||!r&&!n||"function"!=typeof fetch?new Promise((function(A,I){A(mA())})):fetch(qA,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw"failed to load wasm binary file at '"+qA+"'";return A.arrayBuffer()})).catch((function(){return mA()}))}function xA(){var I={env:iB,wasi_snapshot_preview1:iB,global:{NaN:NaN,Infinity:1/0},"global.Math":Math,asm2wasm:M};function g(I,g){var B=I.exports;A.asm=B,YA()}function B(A){g(A.instance)}function C(A){return vA().then((function(A){return WebAssembly.instantiate(A,I)})).then(A,(function(A){y("failed to asynchronously prepare wasm: "+A),pA(A)}))}if(KA(),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){return y("Module.instantiateWasm callback failed with error: "+A),!1}return function(){if(u||"function"!=typeof WebAssembly.instantiateStreaming||bA(qA)||"function"!=typeof fetch)return C(B);fetch(qA,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(B,(function(A){y("wasm streaming compile failed: "+A),y("falling back to ArrayBuffer instantiation"),C(B)}))}))}(),{}}bA(qA)||(qA=F(qA)),A.asm=xA;var WA=[function(A,I,g,B,C,Q){artoolkit.frameMalloc||(artoolkit.frameMalloc={});var E=artoolkit.frameMalloc;E.framepointer=I,E.framesize=g,E.camera=B,E.transform=C,E.videoLumaPointer=Q},function(A,I,g,B){artoolkit.multiEachMarkerInfo||(artoolkit.multiEachMarkerInfo={});var C=artoolkit.multiEachMarkerInfo;C.visible=A,C.pattId=I,C.pattType=g,C.width=B},function(A,I,g,B,C,Q,E,i,o,t,e,a,r,n,s,h,D,c,w,f,d,F,G,y,R,u,U,S,M,l,k,N,K){var Y=arguments,p=12;artoolkit.markerInfo||(artoolkit.markerInfo={pos:[0,0],line:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],vertex:[[0,0],[0,0],[0,0],[0,0]]});var J=artoolkit.markerInfo;J.area=A,J.id=I,J.idPatt=g,J.idMatrix=B,J.dir=C,J.dirPatt=Q,J.dirMatrix=E,J.cf=i,J.cfPatt=o,J.cfMatrix=t,J.pos[0]=e,J.pos[1]=a,J.line[0][0]=Y[p++],J.line[0][1]=Y[p++],J.line[0][2]=Y[p++],J.line[1][0]=Y[p++],J.line[1][1]=Y[p++],J.line[1][2]=Y[p++],J.line[2][0]=Y[p++],J.line[2][1]=Y[p++],J.line[2][2]=Y[p++],J.line[3][0]=Y[p++],J.line[3][1]=Y[p++],J.line[3][2]=Y[p++],J.vertex[0][0]=Y[p++],J.vertex[0][1]=Y[p++],J.vertex[1][0]=Y[p++],J.vertex[1][1]=Y[p++],J.vertex[2][0]=Y[p++],J.vertex[2][1]=Y[p++],J.vertex[3][0]=Y[p++],J.vertex[3][1]=Y[p++],J.errorCorrected=Y[p++]},function(A,I,g,B,C,Q,E,i,o,t,e,a,r,n){var s=arguments,h=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var D=artoolkit.NFTMarkerInfo;D.id=s[h++],D.error=s[h++],D.found=1,D.pose[0]=s[h++],D.pose[1]=s[h++],D.pose[2]=s[h++],D.pose[3]=s[h++],D.pose[4]=s[h++],D.pose[5]=s[h++],D.pose[6]=s[h++],D.pose[7]=s[h++],D.pose[8]=s[h++],D.pose[9]=s[h++],D.pose[10]=s[h++],D.pose[11]=s[h++]},function(A){var I=arguments,g=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var B=artoolkit.NFTMarkerInfo;B.id=I[g++],B.error=-1,B.found=0,B.pose[0]=0,B.pose[1]=0,B.pose[2]=0,B.pose[3]=0,B.pose[4]=0,B.pose[5]=0,B.pose[6]=0,B.pose[7]=0,B.pose[8]=0,B.pose[9]=0,B.pose[10]=0,B.pose[11]=0}];function ZA(A,I,g,B,C,Q,E){return WA[A](I,g,B,C,Q,E)}function XA(A,I,g,B,C){return WA[A](I,g,B,C)}function VA(A,I,g,B,C,Q,E,i,o,t,e,a,r,n,s){return WA[A](I,g,B,C,Q,E,i,o,t,e,a,r,n,s)}function OA(A,I){return WA[A](I)}function TA(A,I,g,B,C,Q,E,i,o,t,e,a,r,n,s,h,D,c,w,f,d,F,G,y,R,u,U,S,M,l,k,N,K,Y){return WA[A](I,g,B,C,Q,E,i,o,t,e,a,r,n,s,h,D,c,w,f,d,F,G,y,R,u,U,S,M,l,k,N,K,Y)}function jA(A){return A.replace(/\b__Z[\w\d_]+/g,(function(A){return A==A?A:A+" ["+A+"]"}))}function PA(){var A=new Error;if(!A.stack){try{throw new Error}catch(I){A=I}if(!A.stack)return"(no stack trace available)"}return A.stack.toString()}function zA(){var I=PA();return A.extraStackTrace&&(I+="\n"+A.extraStackTrace()),jA(I)}sA.push({func:function(){eB()}},{func:function(){sB()}},{func:function(){aB()}},{func:function(){rB()}});var _A={};function $A(){return e||"./this.program"}function AI(A){var I,g;AI.called?(g=BA[A>>2],I=BA[g>>2]):(AI.called=!0,_A.USER="web_user",_A.LOGNAME="web_user",_A.PATH="/",_A.PWD="/",_A.HOME="/home/web_user",_A.LANG=("object"===("undefined"==typeof navigator?"undefined":o()(navigator))&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_A._=$A(),I=J(1024),g=J(256),BA[g>>2]=I,BA[A>>2]=g);var B=[],C=0;for(var Q in _A)if("string"==typeof _A[Q]){var E=Q+"="+_A[Q];B.push(E),C+=E.length}if(C>1024)throw new Error("Environment size exceeded TOTAL_ENV_SIZE!");for(var i=0;i<B.length;i++)z(E=B[i],I),BA[g+4*i>>2]=I,I+=E.length+1;BA[g+4*B.length>>2]=0}function II(A){return dB(A)}var gI={};function BI(A,I,g){throw gI[A]={ptr:A,adjusted:[A],type:I,destructor:g,refcount:0,caught:!1,rethrown:!1},"uncaught_exception"in nB?nB.uncaught_exceptions++:nB.uncaught_exceptions=1,A}function CI(){}function QI(I){return A.___errno_location&&(BA[A.___errno_location()>>2]=I),I}function EI(A,I){return QI(63),-1}var iI={splitPath:function(A){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(A).slice(1)},normalizeArray:function(A,I){for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];"."===C?A.splice(B,1):".."===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift("..");return A},normalize:function(A){var I="/"===A.charAt(0),g="/"===A.substr(-1);return(A=iI.normalizeArray(A.split("/").filter((function(A){return!!A})),!I).join("/"))||I||(A="."),A&&g&&(A+="/"),(I?"/":"")+A},dirname:function(A){var I=iI.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):"."},basename:function(A){if("/"===A)return"/";var I=A.lastIndexOf("/");return-1===I?A:A.substr(I+1)},extname:function(A){return iI.splitPath(A)[3]},join:function(){var A=Array.prototype.slice.call(arguments,0);return iI.normalize(A.join("/"))},join2:function(A,I){return iI.normalize(A+"/"+I)}},oI={resolve:function(){for(var A="",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:aI.cwd();if("string"!=typeof B)throw new TypeError("Arguments to path.resolve must be strings");if(!B)return"";A=B+"/"+A,I="/"===B.charAt(0)}return(I?"/":"")+(A=iI.normalizeArray(A.split("/").filter((function(A){return!!A})),!I).join("/"))||"."},relative:function(A,I){function g(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=oI.resolve(A).substr(1),I=oI.resolve(I).substr(1);for(var B=g(A.split("/")),C=g(I.split("/")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push("..");return(o=o.concat(C.slice(E))).join("/")}},tI={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){tI.ttys[A]={input:[],output:[],ops:I},aI.registerDevice(A,tI.stream_ops)},stream_ops:{open:function(A){var I=tI.ttys[A.node.rdev];if(!I)throw new aI.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.flush(A.tty)},flush:function(A){A.tty.ops.flush(A.tty)},read:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new aI.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new aI.ErrnoError(29)}if(void 0===i&&0===Q)throw new aI.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new aI.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new aI.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if(s){var g=Q.alloc?Q.alloc(256):new Q(256),C=0;try{C=w.readSync(B.stdin.fd,g,0,256,null)}catch(A){if(-1==A.toString().indexOf("EOF"))throw A;C=0}I=C>0?g.slice(0,C).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(I=window.prompt("Input: "))&&(I+="\n"):"function"==typeof readline&&null!==(I=readline())&&(I+="\n");if(!I)return null;A.input=Tg(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(G(H(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},flush:function(A){A.output&&A.output.length>0&&(G(H(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(y(H(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},flush:function(A){A.output&&A.output.length>0&&(y(H(A.output,0)),A.output=[])}}},eI={ops_table:null,mount:function(A){return eI.createNode(null,"/",16895,0)},createNode:function(A,I,g,B){if(aI.isBlkdev(g)||aI.isFIFO(g))throw new aI.ErrnoError(63);eI.ops_table||(eI.ops_table={dir:{node:{getattr:eI.node_ops.getattr,setattr:eI.node_ops.setattr,lookup:eI.node_ops.lookup,mknod:eI.node_ops.mknod,rename:eI.node_ops.rename,unlink:eI.node_ops.unlink,rmdir:eI.node_ops.rmdir,readdir:eI.node_ops.readdir,symlink:eI.node_ops.symlink},stream:{llseek:eI.stream_ops.llseek}},file:{node:{getattr:eI.node_ops.getattr,setattr:eI.node_ops.setattr},stream:{llseek:eI.stream_ops.llseek,read:eI.stream_ops.read,write:eI.stream_ops.write,allocate:eI.stream_ops.allocate,mmap:eI.stream_ops.mmap,msync:eI.stream_ops.msync}},link:{node:{getattr:eI.node_ops.getattr,setattr:eI.node_ops.setattr,readlink:eI.node_ops.readlink},stream:{}},chrdev:{node:{getattr:eI.node_ops.getattr,setattr:eI.node_ops.setattr},stream:aI.chrdev_stream_ops}});var C=aI.createNode(A,I,g,B);return aI.isDir(C.mode)?(C.node_ops=eI.ops_table.dir.node,C.stream_ops=eI.ops_table.dir.stream,C.contents={}):aI.isFile(C.mode)?(C.node_ops=eI.ops_table.file.node,C.stream_ops=eI.ops_table.file.stream,C.usedBytes=0,C.contents=null):aI.isLink(C.mode)?(C.node_ops=eI.ops_table.link.node,C.stream_ops=eI.ops_table.link.stream):aI.isChrdev(C.mode)&&(C.node_ops=eI.ops_table.chrdev.node,C.stream_ops=eI.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C),C},getFileDataAsRegularArray:function(A){if(A.contents&&A.contents.subarray){for(var I=[],g=0;g<A.usedBytes;++g)I.push(A.contents[g]);return I}return A.contents},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)|0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I){if(0==I)return A.contents=null,void(A.usedBytes=0);if(!A.contents||A.contents.subarray){var g=A.contents;return A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),void(A.usedBytes=I)}if(A.contents||(A.contents=[]),A.contents.length>I)A.contents.length=I;else for(;A.contents.length<I;)A.contents.push(0);A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=aI.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,aI.isDir(A.mode)?I.size=4096:aI.isFile(A.mode)?I.size=A.usedBytes:aI.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&eI.resizeFileStorage(A,I.size)},lookup:function(A,I){throw aI.genericErrors[44]},mknod:function(A,I,g,B){return eI.createNode(A,I,g,B)},rename:function(A,I,g){if(aI.isDir(A.mode)){var B;try{B=aI.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new aI.ErrnoError(55)}delete A.parent.contents[A.name],A.name=g,I.contents[g]=A,A.parent=I},unlink:function(A,I){delete A.contents[I]},rmdir:function(A,I){var g=aI.lookupNode(A,I);for(var B in g.contents)throw new aI.ErrnoError(55);delete A.contents[I]},readdir:function(A){var I=[".",".."];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=eI.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!aI.isLink(A.mode))throw new aI.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write:function(A,I,g,B,C,Q){if(!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(eI.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&aI.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new aI.ErrnoError(28);return B},allocate:function(A,I,g){eI.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,C,Q,E){if(!aI.isFile(A.node.mode))throw new aI.ErrnoError(43);var i,o,t=A.node.contents;if(2&E||t.buffer!==I.buffer){(C>0||C+B<A.node.usedBytes)&&(t=t.subarray?t.subarray(C,C+B):Array.prototype.slice.call(t,C,C+B)),o=!0;var e=I.buffer==$.buffer;if(!(i=dB(B)))throw new aI.ErrnoError(48);(e?$:I).set(t,i)}else o=!1,i=t.byteOffset;return{ptr:i,allocated:o}},msync:function(A,I,g,B,C){if(!aI.isFile(A.node.mode))throw new aI.ErrnoError(43);return 2&C?0:(eI.stream_ops.write(A,I,0,B,g,!1),0)}}},aI={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(A){if(!(A instanceof aI.ErrnoError))throw A+" : "+zA();return QI(A.errno)},lookupPath:function(A,I){if(I=I||{},!(A=oI.resolve(aI.cwd(),A)))return{path:"",node:null};var g={follow_mount:!0,recurse_count:0};for(var B in g)void 0===I[B]&&(I[B]=g[B]);if(I.recurse_count>8)throw new aI.ErrnoError(32);for(var C=iI.normalizeArray(A.split("/").filter((function(A){return!!A})),!1),Q=aI.root,E="/",i=0;i<C.length;i++){var o=i===C.length-1;if(o&&I.parent)break;if(Q=aI.lookupNode(Q,C[i]),E=iI.join2(E,C[i]),aI.isMountpoint(Q)&&(!o||o&&I.follow_mount)&&(Q=Q.mounted.root),!o||I.follow)for(var t=0;aI.isLink(Q.mode);){var e=aI.readlink(E);if(E=oI.resolve(iI.dirname(E),e),Q=aI.lookupPath(E,{recurse_count:I.recurse_count}).node,t++>40)throw new aI.ErrnoError(32)}}return{path:E,node:Q}},getPath:function(A){for(var I;;){if(aI.isRoot(A)){var g=A.mount.mountpoint;return I?"/"!==g[g.length-1]?g+"/"+I:g+I:g}I=I?A.name+"/"+I:A.name,A=A.parent}},hashName:function(A,I){for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%aI.nameTable.length},hashAddNode:function(A){var I=aI.hashName(A.parent.id,A.name);A.name_next=aI.nameTable[I],aI.nameTable[I]=A},hashRemoveNode:function(A){var I=aI.hashName(A.parent.id,A.name);if(aI.nameTable[I]===A)aI.nameTable[I]=A.name_next;else for(var g=aI.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:function(A,I){var g=aI.mayLookup(A);if(g)throw new aI.ErrnoError(g,A);for(var B=aI.hashName(A.id,I),C=aI.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return aI.lookup(A,I)},createNode:function(A,I,g,B){aI.FSNode||(aI.FSNode=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=aI.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B},aI.FSNode.prototype={},Object.defineProperties(aI.FSNode.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return aI.isDir(this.mode)}},isDevice:{get:function(){return aI.isChrdev(this.mode)}}}));var C=new aI.FSNode(A,I,g,B);return aI.hashAddNode(C),C},destroyNode:function(A){aI.hashRemoveNode(A)},isRoot:function(A){return A===A.parent},isMountpoint:function(A){return!!A.mounted},isFile:function(A){return 32768==(61440&A)},isDir:function(A){return 16384==(61440&A)},isLink:function(A){return 40960==(61440&A)},isChrdev:function(A){return 8192==(61440&A)},isBlkdev:function(A){return 24576==(61440&A)},isFIFO:function(A){return 4096==(61440&A)},isSocket:function(A){return 49152==(49152&A)},flagModes:{r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(A){var I=aI.flagModes[A];if(void 0===I)throw new Error("Unknown file open mode: "+A);return I},flagsToPermissionString:function(A){var I=["r","w","rw"][3&A];return 512&A&&(I+="w"),I},nodePermissions:function(A,I){return aI.ignorePermissions?0:(-1===I.indexOf("r")||292&A.mode)&&(-1===I.indexOf("w")||146&A.mode)&&(-1===I.indexOf("x")||73&A.mode)?0:2},mayLookup:function(A){var I=aI.nodePermissions(A,"x");return I||(A.node_ops.lookup?0:2)},mayCreate:function(A,I){try{return aI.lookupNode(A,I),20}catch(A){}return aI.nodePermissions(A,"wx")},mayDelete:function(A,I,g){var B;try{B=aI.lookupNode(A,I)}catch(A){return A.errno}var C=aI.nodePermissions(A,"wx");if(C)return C;if(g){if(!aI.isDir(B.mode))return 54;if(aI.isRoot(B)||aI.getPath(B)===aI.cwd())return 10}else if(aI.isDir(B.mode))return 31;return 0},mayOpen:function(A,I){return A?aI.isLink(A.mode)?32:aI.isDir(A.mode)&&("r"!==aI.flagsToPermissionString(I)||512&I)?31:aI.nodePermissions(A,aI.flagsToPermissionString(I)):44},MAX_OPEN_FDS:4096,nextfd:function(A,I){A=A||0,I=I||aI.MAX_OPEN_FDS;for(var g=A;g<=I;g++)if(!aI.streams[g])return g;throw new aI.ErrnoError(33)},getStream:function(A){return aI.streams[A]},createStream:function(A,I,g){aI.FSStream||(aI.FSStream=function(){},aI.FSStream.prototype={},Object.defineProperties(aI.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}}}));var B=new aI.FSStream;for(var C in A)B[C]=A[C];A=B;var Q=aI.nextfd(I,g);return A.fd=Q,aI.streams[Q]=A,A},closeStream:function(A){aI.streams[A]=null},chrdev_stream_ops:{open:function(A){var I=aI.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:function(){throw new aI.ErrnoError(70)}},major:function(A){return A>>8},minor:function(A){return 255&A},makedev:function(A,I){return A<<8|I},registerDevice:function(A,I){aI.devices[A]={stream_ops:I}},getDevice:function(A){return aI.devices[A]},getMounts:function(A){for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:function(A,I){"function"==typeof A&&(I=A,A=!1),aI.syncFSRequests++,aI.syncFSRequests>1&&y("warning: "+aI.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var g=aI.getMounts(aI.root.mount),B=0;function C(A){return aI.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((function(I){if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount:function(A,I,g){var B,C="/"===g,Q=!g;if(C&&aI.root)throw new aI.ErrnoError(10);if(!C&&!Q){var E=aI.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,aI.isMountpoint(B))throw new aI.ErrnoError(10);if(!aI.isDir(B.mode))throw new aI.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?aI.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:function(A){var I=aI.lookupPath(A,{follow_mount:!1});if(!aI.isMountpoint(I.node))throw new aI.ErrnoError(28);var g=I.node,B=g.mounted,C=aI.getMounts(B);Object.keys(aI.nameTable).forEach((function(A){for(var I=aI.nameTable[A];I;){var g=I.name_next;-1!==C.indexOf(I.mount)&&aI.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:function(A,I){return A.node_ops.lookup(A,I)},mknod:function(A,I,g){var B=aI.lookupPath(A,{parent:!0}).node,C=iI.basename(A);if(!C||"."===C||".."===C)throw new aI.ErrnoError(28);var Q=aI.mayCreate(B,C);if(Q)throw new aI.ErrnoError(Q);if(!B.node_ops.mknod)throw new aI.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:function(A,I){return I=void 0!==I?I:438,I&=4095,I|=32768,aI.mknod(A,I,0)},mkdir:function(A,I){return I=void 0!==I?I:511,I&=1023,I|=16384,aI.mknod(A,I,0)},mkdirTree:function(A,I){for(var g=A.split("/"),B="",C=0;C<g.length;++C)if(g[C]){B+="/"+g[C];try{aI.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:function(A,I,g){return void 0===g&&(g=I,I=438),I|=8192,aI.mknod(A,I,g)},symlink:function(A,I){if(!oI.resolve(A))throw new aI.ErrnoError(44);var g=aI.lookupPath(I,{parent:!0}).node;if(!g)throw new aI.ErrnoError(44);var B=iI.basename(I),C=aI.mayCreate(g,B);if(C)throw new aI.ErrnoError(C);if(!g.node_ops.symlink)throw new aI.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:function(A,I){var g,B,C=iI.dirname(A),Q=iI.dirname(I),E=iI.basename(A),i=iI.basename(I);try{g=aI.lookupPath(A,{parent:!0}).node,B=aI.lookupPath(I,{parent:!0}).node}catch(A){throw new aI.ErrnoError(10)}if(!g||!B)throw new aI.ErrnoError(44);if(g.mount!==B.mount)throw new aI.ErrnoError(75);var o,t=aI.lookupNode(g,E),e=oI.relative(A,Q);if("."!==e.charAt(0))throw new aI.ErrnoError(28);if("."!==(e=oI.relative(I,C)).charAt(0))throw new aI.ErrnoError(55);try{o=aI.lookupNode(B,i)}catch(A){}if(t!==o){var a=aI.isDir(t.mode),r=aI.mayDelete(g,E,a);if(r)throw new aI.ErrnoError(r);if(r=o?aI.mayDelete(B,i,a):aI.mayCreate(B,i))throw new aI.ErrnoError(r);if(!g.node_ops.rename)throw new aI.ErrnoError(63);if(aI.isMountpoint(t)||o&&aI.isMountpoint(o))throw new aI.ErrnoError(10);if(B!==g&&(r=aI.nodePermissions(g,"w")))throw new aI.ErrnoError(r);try{aI.trackingDelegate.willMovePath&&aI.trackingDelegate.willMovePath(A,I)}catch(g){y("FS.trackingDelegate['willMovePath']('"+A+"', '"+I+"') threw an exception: "+g.message)}aI.hashRemoveNode(t);try{g.node_ops.rename(t,B,i)}catch(A){throw A}finally{aI.hashAddNode(t)}try{aI.trackingDelegate.onMovePath&&aI.trackingDelegate.onMovePath(A,I)}catch(g){y("FS.trackingDelegate['onMovePath']('"+A+"', '"+I+"') threw an exception: "+g.message)}}},rmdir:function(A){var I=aI.lookupPath(A,{parent:!0}).node,g=iI.basename(A),B=aI.lookupNode(I,g),C=aI.mayDelete(I,g,!0);if(C)throw new aI.ErrnoError(C);if(!I.node_ops.rmdir)throw new aI.ErrnoError(63);if(aI.isMountpoint(B))throw new aI.ErrnoError(10);try{aI.trackingDelegate.willDeletePath&&aI.trackingDelegate.willDeletePath(A)}catch(I){y("FS.trackingDelegate['willDeletePath']('"+A+"') threw an exception: "+I.message)}I.node_ops.rmdir(I,g),aI.destroyNode(B);try{aI.trackingDelegate.onDeletePath&&aI.trackingDelegate.onDeletePath(A)}catch(I){y("FS.trackingDelegate['onDeletePath']('"+A+"') threw an exception: "+I.message)}},readdir:function(A){var I=aI.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new aI.ErrnoError(54);return I.node_ops.readdir(I)},unlink:function(A){var I=aI.lookupPath(A,{parent:!0}).node,g=iI.basename(A),B=aI.lookupNode(I,g),C=aI.mayDelete(I,g,!1);if(C)throw new aI.ErrnoError(C);if(!I.node_ops.unlink)throw new aI.ErrnoError(63);if(aI.isMountpoint(B))throw new aI.ErrnoError(10);try{aI.trackingDelegate.willDeletePath&&aI.trackingDelegate.willDeletePath(A)}catch(I){y("FS.trackingDelegate['willDeletePath']('"+A+"') threw an exception: "+I.message)}I.node_ops.unlink(I,g),aI.destroyNode(B);try{aI.trackingDelegate.onDeletePath&&aI.trackingDelegate.onDeletePath(A)}catch(I){y("FS.trackingDelegate['onDeletePath']('"+A+"') threw an exception: "+I.message)}},readlink:function(A){var I=aI.lookupPath(A).node;if(!I)throw new aI.ErrnoError(44);if(!I.node_ops.readlink)throw new aI.ErrnoError(28);return oI.resolve(aI.getPath(I.parent),I.node_ops.readlink(I))},stat:function(A,I){var g=aI.lookupPath(A,{follow:!I}).node;if(!g)throw new aI.ErrnoError(44);if(!g.node_ops.getattr)throw new aI.ErrnoError(63);return g.node_ops.getattr(g)},lstat:function(A){return aI.stat(A,!0)},chmod:function(A,I,g){var B;if(!(B="string"==typeof A?aI.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new aI.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:function(A,I){aI.chmod(A,I,!0)},fchmod:function(A,I){var g=aI.getStream(A);if(!g)throw new aI.ErrnoError(8);aI.chmod(g.node,I)},chown:function(A,I,g,B){var C;if(!(C="string"==typeof A?aI.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new aI.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown:function(A,I,g){aI.chown(A,I,g,!0)},fchown:function(A,I,g){var B=aI.getStream(A);if(!B)throw new aI.ErrnoError(8);aI.chown(B.node,I,g)},truncate:function(A,I){if(I<0)throw new aI.ErrnoError(28);var g;if(!(g="string"==typeof A?aI.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new aI.ErrnoError(63);if(aI.isDir(g.mode))throw new aI.ErrnoError(31);if(!aI.isFile(g.mode))throw new aI.ErrnoError(28);var B=aI.nodePermissions(g,"w");if(B)throw new aI.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:function(A,I){var g=aI.getStream(A);if(!g)throw new aI.ErrnoError(8);if(0==(2097155&g.flags))throw new aI.ErrnoError(28);aI.truncate(g.node,I)},utime:function(A,I,g){var B=aI.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:function(I,g,B,C,Q){if(""===I)throw new aI.ErrnoError(44);var E;if(B=void 0===B?438:B,B=64&(g="string"==typeof g?aI.modeStringToFlags(g):g)?4095&B|32768:0,"object"===o()(I))E=I;else{I=iI.normalize(I);try{E=aI.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var i=!1;if(64&g)if(E){if(128&g)throw new aI.ErrnoError(20)}else E=aI.mknod(I,B,0),i=!0;if(!E)throw new aI.ErrnoError(44);if(aI.isChrdev(E.mode)&&(g&=-513),65536&g&&!aI.isDir(E.mode))throw new aI.ErrnoError(54);if(!i){var t=aI.mayOpen(E,g);if(t)throw new aI.ErrnoError(t)}512&g&&aI.truncate(E,0),g&=-641;var e=aI.createStream({node:E,path:aI.getPath(E),flags:g,seekable:!0,position:0,stream_ops:E.stream_ops,ungotten:[],error:!1},C,Q);e.stream_ops.open&&e.stream_ops.open(e),!A.logReadFiles||1&g||(aI.readFiles||(aI.readFiles={}),I in aI.readFiles||(aI.readFiles[I]=1,y("FS.trackingDelegate error on read file: "+I)));try{if(aI.trackingDelegate.onOpenFile){var a=0;1!=(2097155&g)&&(a|=aI.tracking.openFlags.READ),0!=(2097155&g)&&(a|=aI.tracking.openFlags.WRITE),aI.trackingDelegate.onOpenFile(I,a)}}catch(A){y("FS.trackingDelegate['onOpenFile']('"+I+"', flags) threw an exception: "+A.message)}return e},close:function(A){if(aI.isClosed(A))throw new aI.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{aI.closeStream(A.fd)}A.fd=null},isClosed:function(A){return null===A.fd},llseek:function(A,I,g){if(aI.isClosed(A))throw new aI.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new aI.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new aI.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:function(A,I,g,B,C){if(B<0||C<0)throw new aI.ErrnoError(28);if(aI.isClosed(A))throw new aI.ErrnoError(8);if(1==(2097155&A.flags))throw new aI.ErrnoError(8);if(aI.isDir(A.node.mode))throw new aI.ErrnoError(31);if(!A.stream_ops.read)throw new aI.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new aI.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write:function(A,I,g,B,C,Q){if(B<0||C<0)throw new aI.ErrnoError(28);if(aI.isClosed(A))throw new aI.ErrnoError(8);if(0==(2097155&A.flags))throw new aI.ErrnoError(8);if(aI.isDir(A.node.mode))throw new aI.ErrnoError(31);if(!A.stream_ops.write)throw new aI.ErrnoError(28);1024&A.flags&&aI.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new aI.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);E||(A.position+=i);try{A.path&&aI.trackingDelegate.onWriteToFile&&aI.trackingDelegate.onWriteToFile(A.path)}catch(I){y("FS.trackingDelegate['onWriteToFile']('"+A.path+"') threw an exception: "+I.message)}return i},allocate:function(A,I,g){if(aI.isClosed(A))throw new aI.ErrnoError(8);if(I<0||g<=0)throw new aI.ErrnoError(28);if(0==(2097155&A.flags))throw new aI.ErrnoError(8);if(!aI.isFile(A.node.mode)&&!aI.isDir(A.node.mode))throw new aI.ErrnoError(43);if(!A.stream_ops.allocate)throw new aI.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:function(A,I,g,B,C,Q,E){if(0!=(2&Q)&&0==(2&E)&&2!=(2097155&A.flags))throw new aI.ErrnoError(2);if(1==(2097155&A.flags))throw new aI.ErrnoError(2);if(!A.stream_ops.mmap)throw new aI.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,C,Q,E)},msync:function(A,I,g,B,C){return A&&A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0},munmap:function(A){return 0},ioctl:function(A,I,g){if(!A.stream_ops.ioctl)throw new aI.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:function(A,I){if((I=I||{}).flags=I.flags||"r",I.encoding=I.encoding||"binary","utf8"!==I.encoding&&"binary"!==I.encoding)throw new Error('Invalid encoding type "'+I.encoding+'"');var g,B=aI.open(A,I.flags),C=aI.stat(A).size,Q=new Uint8Array(C);return aI.read(B,Q,0,C,0),"utf8"===I.encoding?g=H(Q,0):"binary"===I.encoding&&(g=Q),aI.close(B),g},writeFile:function(A,I,g){(g=g||{}).flags=g.flags||"w";var B=aI.open(A,g.flags,g.mode);if("string"==typeof I){var C=new Uint8Array(v(I)+1),Q=q(I,C,0,C.length);aI.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error("Unsupported data type");aI.write(B,I,0,I.byteLength,void 0,g.canOwn)}aI.close(B)},cwd:function(){return aI.currentPath},chdir:function(A){var I=aI.lookupPath(A,{follow:!0});if(null===I.node)throw new aI.ErrnoError(44);if(!aI.isDir(I.node.mode))throw new aI.ErrnoError(54);var g=aI.nodePermissions(I.node,"x");if(g)throw new aI.ErrnoError(g);aI.currentPath=I.path},createDefaultDirectories:function(){aI.mkdir("/tmp"),aI.mkdir("/home"),aI.mkdir("/home/web_user")},createDefaultDevices:function(){var A;if(aI.mkdir("/dev"),aI.registerDevice(aI.makedev(1,3),{read:function(){return 0},write:function(A,I,g,B,C){return B}}),aI.mkdev("/dev/null",aI.makedev(1,3)),tI.register(aI.makedev(5,0),tI.default_tty_ops),tI.register(aI.makedev(6,0),tI.default_tty1_ops),aI.mkdev("/dev/tty",aI.makedev(5,0)),aI.mkdev("/dev/tty1",aI.makedev(6,0)),"object"===("undefined"==typeof crypto?"undefined":o()(crypto))&&"function"==typeof crypto.getRandomValues){var I=new Uint8Array(1);A=function(){return crypto.getRandomValues(I),I[0]}}else if(s)try{var B=g(102);A=function(){return B.randomBytes(1)[0]}}catch(A){}A||(A=function(){pA("random_device")}),aI.createDevice("/dev","random",A),aI.createDevice("/dev","urandom",A),aI.mkdir("/dev/shm"),aI.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){aI.mkdir("/proc"),aI.mkdir("/proc/self"),aI.mkdir("/proc/self/fd"),aI.mount({mount:function(){var A=aI.createNode("/proc/self","fd",16895,73);return A.node_ops={lookup:function(A,I){var g=+I,B=aI.getStream(g);if(!B)throw new aI.ErrnoError(8);var C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return B.path}}};return C.parent=C,C}},A}},{},"/proc/self/fd")},createStandardStreams:function(){A.stdin?aI.createDevice("/dev","stdin",A.stdin):aI.symlink("/dev/tty","/dev/stdin"),A.stdout?aI.createDevice("/dev","stdout",null,A.stdout):aI.symlink("/dev/tty","/dev/stdout"),A.stderr?aI.createDevice("/dev","stderr",null,A.stderr):aI.symlink("/dev/tty1","/dev/stderr"),aI.open("/dev/stdin","r"),aI.open("/dev/stdout","w"),aI.open("/dev/stderr","w")},ensureErrnoError:function(){aI.ErrnoError||(aI.ErrnoError=function(A,I){this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message="FS error"},aI.ErrnoError.prototype=new Error,aI.ErrnoError.prototype.constructor=aI.ErrnoError,[44].forEach((function(A){aI.genericErrors[A]=new aI.ErrnoError(A),aI.genericErrors[A].stack="<generic error, no stack>"})))},staticInit:function(){aI.ensureErrnoError(),aI.nameTable=new Array(4096),aI.mount(eI,{},"/"),aI.createDefaultDirectories(),aI.createDefaultDevices(),aI.createSpecialDirectories(),aI.filesystems={MEMFS:eI}},init:function(I,g,B){aI.init.initialized=!0,aI.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,aI.createStandardStreams()},quit:function(){aI.init.initialized=!1;var I=A._fflush;I&&I(0);for(var g=0;g<aI.streams.length;g++){var B=aI.streams[g];B&&aI.close(B)}},getMode:function(A,I){var g=0;return A&&(g|=365),I&&(g|=146),g},joinPath:function(A,I){var g=iI.join.apply(null,A);return I&&"/"==g[0]&&(g=g.substr(1)),g},absolutePath:function(A,I){return oI.resolve(I,A)},standardizePath:function(A){return iI.normalize(A)},findObject:function(A,I){var g=aI.analyzePath(A,I);return g.exists?g.object:(QI(g.error),null)},analyzePath:function(A,I){try{A=(B=aI.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=aI.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=iI.basename(A),B=aI.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot="/"===B.path}catch(A){g.error=A.errno}return g},createFolder:function(A,I,g,B){var C=iI.join2("string"==typeof A?A:aI.getPath(A),I),Q=aI.getMode(g,B);return aI.mkdir(C,Q)},createPath:function(A,I,g,B){A="string"==typeof A?A:aI.getPath(A);for(var C=I.split("/").reverse();C.length;){var Q=C.pop();if(Q){var E=iI.join2(A,Q);try{aI.mkdir(E)}catch(A){}A=E}}return E},createFile:function(A,I,g,B,C){var Q=iI.join2("string"==typeof A?A:aI.getPath(A),I),E=aI.getMode(B,C);return aI.create(Q,E)},createDataFile:function(A,I,g,B,C,Q){var E=I?iI.join2("string"==typeof A?A:aI.getPath(A),I):A,i=aI.getMode(B,C),o=aI.create(E,i);if(g){if("string"==typeof g){for(var t=new Array(g.length),e=0,a=g.length;e<a;++e)t[e]=g.charCodeAt(e);g=t}aI.chmod(o,146|i);var r=aI.open(o,"w");aI.write(r,g,0,g.length,0,Q),aI.close(r),aI.chmod(o,i)}return o},createDevice:function(A,I,g,B){var C=iI.join2("string"==typeof A?A:aI.getPath(A),I),Q=aI.getMode(!!g,!!B);aI.createDevice.major||(aI.createDevice.major=64);var E=aI.makedev(aI.createDevice.major++,0);return aI.registerDevice(E,{open:function(A){A.seekable=!1},close:function(A){B&&B.buffer&&B.buffer.length&&B(10)},read:function(A,I,B,C,Q){for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new aI.ErrnoError(29)}if(void 0===o&&0===E)throw new aI.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:function(A,I,g,C,Q){for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new aI.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),aI.mkdev(C,Q,E)},createLink:function(A,I,g,B,C){var Q=iI.join2("string"==typeof A?A:aI.getPath(A),I);return aI.symlink(g,Q)},forceLoadFile:function(A){if(A.isDevice||A.isFolder||A.link||A.contents)return!0;var I=!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!D)throw new Error("Cannot load without read() or XMLHttpRequest.");try{A.contents=Tg(D(A.url),!0),A.usedBytes=A.contents.length}catch(A){I=!1}return I||QI(29),I},createLazyFile:function(A,I,g,B,C){function Q(){this.lengthKnown=!1,this.chunks=[]}if(Q.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},Q.prototype.setDataGetter=function(A){this.getter=A},Q.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open("HEAD",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error("Couldn't load "+g+". Status: "+A.status);var I,B=Number(A.getResponseHeader("Content-length")),C=(I=A.getResponseHeader("Accept-Ranges"))&&"bytes"===I,Q=(I=A.getResponseHeader("Content-Encoding"))&&"gzip"===I,E=1048576;C||(E=B);var i=this;i.setDataGetter((function(A){var I=A*E,C=(A+1)*E-1;if(C=Math.min(C,B-1),void 0===i.chunks[A]&&(i.chunks[A]=function(A,I){if(A>I)throw new Error("invalid range ("+A+", "+I+") or no bytes requested!");if(I>B-1)throw new Error("only "+B+" bytes available! programmer error!");var C=new XMLHttpRequest;if(C.open("GET",g,!1),B!==E&&C.setRequestHeader("Range","bytes="+A+"-"+I),"undefined"!=typeof Uint8Array&&(C.responseType="arraybuffer"),C.overrideMimeType&&C.overrideMimeType("text/plain; charset=x-user-defined"),C.send(null),!(C.status>=200&&C.status<300||304===C.status))throw new Error("Couldn't load "+g+". Status: "+C.status);return void 0!==C.response?new Uint8Array(C.response||[]):Tg(C.responseText||"",!0)}(I,C)),void 0===i.chunks[A])throw new Error("doXHR failed!");return i.chunks[A]})),!Q&&B||(E=B=1,B=this.getter(0).length,E=B,G("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!n)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var E=new Q;Object.defineProperties(E,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var i={isDevice:!1,contents:E}}else i={isDevice:!1,url:g};var o=aI.createFile(A,I,i,B,C);i.contents?o.contents=i.contents:i.url&&(o.contents=null,o.url=i.url),Object.defineProperties(o,{usedBytes:{get:function(){return this.contents.length}}});var t={};return Object.keys(o.stream_ops).forEach((function(A){var I=o.stream_ops[A];t[A]=function(){if(!aI.forceLoadFile(o))throw new aI.ErrnoError(29);return I.apply(null,arguments)}})),t.read=function(A,I,g,B,C){if(!aI.forceLoadFile(o))throw new aI.ErrnoError(29);var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E},o.stream_ops=t,o},createPreloadedFile:function(I,g,B,C,Q,E,i,o,t,e){Browser.init();var a=g?oI.resolve(iI.join2(I,g)):I;function r(B){function r(A){e&&e(),o||aI.createDataFile(I,g,A,C,Q,t),E&&E(),YA()}var n=!1;A.preloadPlugins.forEach((function(A){n||A.canHandle(a)&&(A.handle(B,a,r,(function(){i&&i(),YA()})),n=!0)})),n||r(B)}KA(),"string"==typeof B?Browser.asyncLoad(B,(function(A){r(A)}),i):r(B)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=aI.indexedDB();try{var C=B.open(aI.DB_NAME(),aI.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=function(){G("creating db"),C.result.createObjectStore(aI.DB_STORE_NAME)},C.onsuccess=function(){var B=C.result.transaction([aI.DB_STORE_NAME],"readwrite"),Q=B.objectStore(aI.DB_STORE_NAME),E=0,i=0,o=A.length;function t(){0==i?I():g()}A.forEach((function(A){var I=Q.put(aI.analyzePath(A).object.contents,A);I.onsuccess=function(){++E+i==o&&t()},I.onerror=function(){i++,E+i==o&&t()}})),B.onerror=g},C.onerror=g},loadFilesFromDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=aI.indexedDB();try{var C=B.open(aI.DB_NAME(),aI.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=g,C.onsuccess=function(){var B=C.result;try{var Q=B.transaction([aI.DB_STORE_NAME],"readonly")}catch(A){return void g(A)}var E=Q.objectStore(aI.DB_STORE_NAME),i=0,o=0,t=A.length;function e(){0==o?I():g()}A.forEach((function(A){var I=E.get(A);I.onsuccess=function(){aI.analyzePath(A).exists&&aI.unlink(A),aI.createDataFile(iI.dirname(A),iI.basename(A),I.result,!0,!0,!0),++i+o==t&&e()},I.onerror=function(){o++,i+o==t&&e()}})),Q.onerror=g},C.onerror=g}},rI={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(A,I){if("/"!==I[0]){var g;if(-100===A)g=aI.cwd();else{var B=aI.getStream(A);if(!B)throw new aI.ErrnoError(8);g=B.path}I=iI.join2(g,I)}return I},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&iI.normalize(I)!==iI.normalize(aI.getPath(A.node)))return-54;throw A}return BA[g>>2]=B.dev,BA[g+4>>2]=0,BA[g+8>>2]=B.ino,BA[g+12>>2]=B.mode,BA[g+16>>2]=B.nlink,BA[g+20>>2]=B.uid,BA[g+24>>2]=B.gid,BA[g+28>>2]=B.rdev,BA[g+32>>2]=0,LA=[B.size>>>0,(HA=B.size,+uA(HA)>=1?HA>0?(0|MA(+SA(HA/4294967296),4294967295))>>>0:~~+UA((HA-+(~~HA>>>0))/4294967296)>>>0:0)],BA[g+40>>2]=LA[0],BA[g+44>>2]=LA[1],BA[g+48>>2]=4096,BA[g+52>>2]=B.blocks,BA[g+56>>2]=B.atime.getTime()/1e3|0,BA[g+60>>2]=0,BA[g+64>>2]=B.mtime.getTime()/1e3|0,BA[g+68>>2]=0,BA[g+72>>2]=B.ctime.getTime()/1e3|0,BA[g+76>>2]=0,LA=[B.ino>>>0,(HA=B.ino,+uA(HA)>=1?HA>0?(0|MA(+SA(HA/4294967296),4294967295))>>>0:~~+UA((HA-+(~~HA>>>0))/4294967296)>>>0:0)],BA[g+80>>2]=LA[0],BA[g+84>>2]=LA[1],0},doMsync:function(A,I,g,B,C){var Q=AA.slice(A,A+g);aI.msync(I,Q,C,g,B)},doMkdir:function(A,I){return"/"===(A=iI.normalize(A))[A.length-1]&&(A=A.substr(0,A.length-1)),aI.mkdir(A,I,0),0},doMknod:function(A,I,g){switch(61440&I){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}return aI.mknod(A,I,g),0},doReadlink:function(A,I,g){if(g<=0)return-28;var B=aI.readlink(A),C=Math.min(g,v(B)),Q=$[I+C];return m(B,I,g+1),$[I+C]=Q,C},doAccess:function(A,I){if(-8&I)return-28;var g;if(!(g=aI.lookupPath(A,{follow:!0}).node))return-44;var B="";return 4&I&&(B+="r"),2&I&&(B+="w"),1&I&&(B+="x"),B&&aI.nodePermissions(g,B)?-2:0},doDup:function(A,I,g){var B=aI.getStream(g);return B&&aI.close(B),aI.open(A,I,0,g,g).fd},doReadv:function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=BA[I+8*Q>>2],i=BA[I+(8*Q+4)>>2],o=aI.read(A,$,E,i,B);if(o<0)return-1;if(C+=o,o<i)break}return C},doWritev:function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=BA[I+8*Q>>2],i=BA[I+(8*Q+4)>>2],o=aI.write(A,$,E,i,B);if(o<0)return-1;C+=o}return C},varargs:0,get:function(A){return rI.varargs+=4,BA[rI.varargs-4>>2]},getStr:function(){return L(rI.get())},getStreamFromFD:function(A){void 0===A&&(A=rI.get());var I=aI.getStream(A);if(!I)throw new aI.ErrnoError(8);return I},get64:function(){var A=rI.get();return rI.get(),A},getZero:function(){rI.get()}};function nI(A,I){rI.varargs=I;try{var g=rI.getStreamFromFD();switch(rI.get()){case 0:return(B=rI.get())<0?-28:aI.open(g.path,g.flags,0,B).fd;case 1:case 2:return 0;case 3:return g.flags;case 4:var B=rI.get();return g.flags|=B,0;case 12:return B=rI.get(),IA[B+0>>1]=2,0;case 13:case 14:return 0;case 16:case 8:return-28;case 9:return QI(28),-1;default:return-28}}catch(A){return void 0!==aI&&A instanceof aI.ErrnoError||pA(A),-A.errno}}function sI(A,I){rI.varargs=I;try{var g=rI.getStr(),B=rI.get(),C=rI.get();return aI.open(g,B,C).fd}catch(A){return void 0!==aI&&A instanceof aI.ErrnoError||pA(A),-A.errno}}function hI(A,I){rI.varargs=I;try{var g=rI.getStreamFromFD(),B=rI.get();switch(B){case 21509:case 21505:return g.tty?0:-59;case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:return g.tty?0:-59;case 21519:if(!g.tty)return-59;var C=rI.get();return BA[C>>2]=0,0;case 21520:return g.tty?-28:-59;case 21531:return C=rI.get(),aI.ioctl(g,B,C);case 21523:case 21524:return g.tty?0:-59;default:pA("bad ioctl syscall "+B)}}catch(A){return void 0!==aI&&A instanceof aI.ErrnoError||pA(A),-A.errno}}function DI(A,I){if(-1===A||0===I)return-28;var g=rI.mappings[A];if(!g)return 0;if(I===g.len){var B=aI.getStream(g.fd);rI.doMsync(A,B,I,g.flags,g.offset),aI.munmap(B),rI.mappings[A]=null,g.allocated&&fB(g.malloc)}return 0}function cI(A,I){rI.varargs=I;try{return DI(rI.get(),rI.get())}catch(A){return void 0!==aI&&A instanceof aI.ErrnoError||pA(A),-A.errno}}function wI(){}function fI(A){try{var I=rI.getStreamFromFD(A);return aI.close(I),0}catch(A){return void 0!==aI&&A instanceof aI.ErrnoError||pA(A),A.errno}}function dI(){return fI.apply(null,arguments)}function FI(A,I,g,B){try{var C=rI.getStreamFromFD(A),Q=rI.doReadv(C,I,g);return BA[B>>2]=Q,0}catch(A){return void 0!==aI&&A instanceof aI.ErrnoError||pA(A),A.errno}}function GI(){return FI.apply(null,arguments)}function yI(A,I,g,B,C){try{var Q=rI.getStreamFromFD(A),E=4294967296*g+(I>>>0);return E<=-9007199254740992||E>=9007199254740992?-61:(aI.llseek(Q,E,B),LA=[Q.position>>>0,(HA=Q.position,+uA(HA)>=1?HA>0?(0|MA(+SA(HA/4294967296),4294967295))>>>0:~~+UA((HA-+(~~HA>>>0))/4294967296)>>>0:0)],BA[C>>2]=LA[0],BA[C+4>>2]=LA[1],Q.getdents&&0===E&&0===B&&(Q.getdents=null),0)}catch(A){return void 0!==aI&&A instanceof aI.ErrnoError||pA(A),A.errno}}function RI(){return yI.apply(null,arguments)}function uI(A,I,g,B){try{var C=rI.getStreamFromFD(A),Q=rI.doWritev(C,I,g);return BA[B>>2]=Q,0}catch(A){return void 0!==aI&&A instanceof aI.ErrnoError||pA(A),A.errno}}function UI(){return uI.apply(null,arguments)}function SI(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+A)}}function MI(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);lI=A}var lI=void 0;function kI(A){for(var I="",g=A;AA[g];)I+=lI[AA[g++]];return I}var NI={},KI={},YI={},pI=48,JI=57;function bI(A){if(void 0===A)return"_unknown";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return I>=pI&&I<=JI?"_"+A:A}function HI(A,I){return A=bI(A),new Function("body","return function "+A+'() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(I)}function LI(A,I){var g=HI(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+"\n"+g.replace(/^Error(:[^\n]*)?\n/,""))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},g}var qI=void 0;function mI(A){throw new qI(A)}var vI=void 0;function xI(A){throw new vI(A)}function WI(A,I,g){function B(I){var B=g(I);B.length!==A.length&&xI("Mismatched type converter count");for(var C=0;C<A.length;++C)ZI(A[C],B[C])}A.forEach((function(A){YI[A]=I}));var C=new Array(I.length),Q=[],E=0;I.forEach((function(A,I){KI.hasOwnProperty(A)?C[I]=KI[A]:(Q.push(A),NI.hasOwnProperty(A)||(NI[A]=[]),NI[A].push((function(){C[I]=KI[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)}function ZI(A,I,g){if(g=g||{},!("argPackAdvance"in I))throw new TypeError("registerType registeredInstance requires argPackAdvance");var B=I.name;if(A||mI('type "'+B+'" must have a positive integer typeid pointer'),KI.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;mI("Cannot register type '"+B+"' twice")}if(KI[A]=I,delete YI[A],NI.hasOwnProperty(A)){var C=NI[A];delete NI[A],C.forEach((function(A){A()}))}}function XI(A,I,g,B,C){var Q=SI(g);ZI(A,{name:I=kI(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:C},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=$;else if(2===g)B=IA;else{if(4!==g)throw new TypeError("Unknown boolean type size: "+I);B=BA}return this.fromWireType(B[A>>Q])},destructorFunction:null})}function VI(I,g,B){I=kI(I),WI([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))}var OI=[],TI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function jI(A){A>4&&0==--TI[A].refcount&&(TI[A]=void 0,OI.push(A))}function PI(){for(var A=0,I=5;I<TI.length;++I)void 0!==TI[I]&&++A;return A}function zI(){for(var A=5;A<TI.length;++A)if(void 0!==TI[A])return TI[A];return null}function _I(){A.count_emval_handles=PI,A.get_first_emval=zI}function $I(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=OI.length?OI.pop():TI.length;return TI[I]={refcount:1,value:A},I}}function Ag(A){return this.fromWireType(CA[A>>2])}function Ig(A,I){ZI(A,{name:I=kI(I),fromWireType:function(A){var I=TI[A].value;return jI(A),I},toWireType:function(A,I){return $I(I)},argPackAdvance:8,readValueFromPointer:Ag,destructorFunction:null})}function gg(A){if(null===A)return"null";var I=o()(A);return"object"===I||"array"===I||"function"===I?A.toString():""+A}function Bg(A,I){switch(I){case 2:return function(A){return this.fromWireType(QA[A>>2])};case 3:return function(A){return this.fromWireType(EA[A>>3])};default:throw new TypeError("Unknown float type: "+A)}}function Cg(A,I,g){var B=SI(g);ZI(A,{name:I=kI(I),fromWireType:function(A){return A},toWireType:function(A,I){if("number"!=typeof I&&"boolean"!=typeof I)throw new TypeError('Cannot convert "'+gg(I)+'" to '+this.name);return I},argPackAdvance:8,readValueFromPointer:Bg(I,B),destructorFunction:null})}function Qg(A,I){if(!(A instanceof Function))throw new TypeError("new_ called with constructor type "+o()(A)+" which is not a function");var g=HI(A.name||"unknownFunctionName",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}function Eg(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function ig(A,I,g,B,C){var Q=I.length;Q<2&&mI("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var t="void"!==I[0].name,e="",a="";for(o=0;o<Q-2;++o)e+=(0!==o?", ":"")+"arg"+o,a+=(0!==o?", ":"")+"arg"+o+"Wired";var r="return function "+bI(A)+"("+e+") {\nif (arguments.length !== "+(Q-2)+") {\nthrowBindingError('function "+A+" called with ' + arguments.length + ' arguments, expected "+(Q-2)+" args!');\n}\n";i&&(r+="var destructors = [];\n");var n=i?"destructors":"null",s=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],h=[mI,B,C,Eg,I[0],I[1]];for(E&&(r+="var thisWired = classParam.toWireType("+n+", this);\n"),o=0;o<Q-2;++o)r+="var arg"+o+"Wired = argType"+o+".toWireType("+n+", arg"+o+"); // "+I[o+2].name+"\n",s.push("argType"+o),h.push(I[o+2]);if(E&&(a="thisWired"+(a.length>0?", ":"")+a),r+=(t?"var rv = ":"")+"invoker(fn"+(a.length>0?", ":"")+a+");\n",i)r+="runDestructors(destructors);\n";else for(o=E?1:2;o<I.length;++o){var D=1===o?"thisWired":"arg"+(o-2)+"Wired";null!==I[o].destructorFunction&&(r+=D+"_dtor("+D+"); // "+I[o].name+"\n",s.push(D+"_dtor"),h.push(I[o].destructorFunction))}return t&&(r+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),r+="}\n",s.push(r),Qg(Function,s).apply(null,h)}function og(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||mI("Function '"+g+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+A[I].overloadTable+")!"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function tg(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&mI("Cannot register public name '"+I+"' twice"),og(A,I,I),A.hasOwnProperty(B)&&mI("Cannot register multiple overloads of a function with the same number of arguments ("+B+")!"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}function eg(A,I){for(var g=[],B=0;B<A;B++)g.push(BA[(I>>2)+B]);return g}function ag(I,g,B){A.hasOwnProperty(I)||xI("Replacing nonexistant public symbol"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}function rg(I,g){var B;if(I=kI(I),void 0!==A["FUNCTION_TABLE_"+I])B=A["FUNCTION_TABLE_"+I][g];else if("undefined"!=typeof FUNCTION_TABLE)B=FUNCTION_TABLE[g];else{var C=A["dynCall_"+I];void 0===C&&void 0===(C=A["dynCall_"+I.replace(/f/g,"d")])&&mI("No dynCall invoker for signature: "+I),B=function(A){for(var B=[],C=1;C<I.length;++C)B.push("a"+C);var Q="return function dynCall_"+I+"_"+g+"("+B.join(", ")+") {\n";return Q+="    return dynCall(rawFunction"+(B.length?", ":"")+B.join(", ")+");\n",Q+="};\n",new Function("dynCall","rawFunction",Q)(A,g)}(C)}return"function"!=typeof B&&mI("unknown function pointer with signature "+I+": "+g),B}var ng=void 0;function sg(A){var I=hB(A),g=kI(I);return fB(I),g}function hg(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||KI[I]||(YI[I]?YI[I].forEach(A):(g.push(I),B[I]=!0))})),new ng(A+": "+g.map(sg).join([", "]))}function Dg(A,I,g,B,C,Q){var E=eg(I,g);A=kI(A),C=rg(B,C),tg(A,(function(){hg("Cannot call "+A+" due to unbound types",E)}),I-1),WI([],E,(function(g){var B=[g[0],null].concat(g.slice(1));return ag(A,ig(A,B,null,C,Q),I-1),[]}))}function cg(A,I,g){switch(I){case 0:return g?function(A){return $[A]}:function(A){return AA[A]};case 1:return g?function(A){return IA[A>>1]}:function(A){return gA[A>>1]};case 2:return g?function(A){return BA[A>>2]}:function(A){return CA[A>>2]};default:throw new TypeError("Unknown integer type: "+A)}}function wg(A,I,g,B,C){I=kI(I),-1===C&&(C=4294967295);var Q=SI(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=-1!=I.indexOf("unsigned");ZI(A,{name:I,fromWireType:E,toWireType:function(A,g){if("number"!=typeof g&&"boolean"!=typeof g)throw new TypeError('Cannot convert "'+gg(g)+'" to '+this.name);if(g<B||g>C)throw new TypeError('Passing a number "'+gg(g)+'" from JS side to C/C++ side to an argument of type "'+I+'", which is outside the valid range ['+B+", "+C+"]!");return o?g>>>0:0|g},argPackAdvance:8,readValueFromPointer:cg(I,Q,0!==B),destructorFunction:null})}function fg(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=CA,g=I[A>>=2],C=I[A+1];return new B(I.buffer,C,g)}ZI(A,{name:g=kI(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})}function dg(A,I){var g="std::string"===(I=kI(I));ZI(A,{name:I,fromWireType:function(A){var I,B=CA[A>>2];if(g){var C=AA[A+4+B],Q=0;0!=C&&(Q=C,AA[A+4+B]=0);for(var E=A+4,i=0;i<=B;++i){var o=A+4+i;if(0==AA[o]){var t=L(E);void 0===I?I=t:(I+=String.fromCharCode(0),I+=t),E=o+1}}0!=Q&&(AA[A+4+B]=Q)}else{var e=new Array(B);for(i=0;i<B;++i)e[i]=String.fromCharCode(AA[A+4+i]);I=e.join("")}return fB(A),I},toWireType:function(A,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var B="string"==typeof I;B||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||mI("Cannot pass non-string to std::string");var C=(g&&B?function(){return v(I)}:function(){return I.length})(),Q=dB(4+C+1);if(CA[Q>>2]=C,g&&B)m(I,Q+4,C+1);else if(B)for(var E=0;E<C;++E){var i=I.charCodeAt(E);i>255&&(fB(Q),mI("String has UTF-16 code units that do not fit in 8 bits")),AA[Q+4+E]=i}else for(E=0;E<C;++E)AA[Q+4+E]=I[E];return null!==A&&A.push(fB,Q),Q},argPackAdvance:8,readValueFromPointer:Ag,destructorFunction:function(A){fB(A)}})}function Fg(A,I,g){var B,C,Q,E,i;g=kI(g),2===I?(B=W,C=Z,E=X,Q=function(){return gA},i=1):4===I&&(B=V,C=O,E=T,Q=function(){return CA},i=2),ZI(A,{name:g,fromWireType:function(A){var g,C=CA[A>>2],E=Q(),o=E[A+4+C*I>>i],t=0;0!=o&&(t=o,E[A+4+C*I>>i]=0);for(var e=A+4,a=0;a<=C;++a){var r=A+4+a*I;if(0==E[r>>i]){var n=B(e);void 0===g?g=n:(g+=String.fromCharCode(0),g+=n),e=r+I}}return 0!=t&&(E[A+4+C*I>>i]=t),fB(A),g},toWireType:function(A,B){"string"!=typeof B&&mI("Cannot pass non-string to C++ string type "+g);var Q=E(B),o=dB(4+Q+I);return CA[o>>2]=Q>>i,C(B,o+4,Q+I),null!==A&&A.push(fB,o),o},argPackAdvance:8,readValueFromPointer:Ag,destructorFunction:function(A){fB(A)}})}function Gg(A,I){ZI(A,{isVoid:!0,name:I=kI(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})}function yg(){pA()}function Rg(){return AA.length}function ug(A){pA("OOM")}function Ug(A){ug()}function Sg(A){YB(A)}function Mg(A){return 0===A?0:(A=L(A),_A.hasOwnProperty(A)?(Mg.ret&&fB(Mg.ret),Mg.ret=j(_A[A]),Mg.ret):0)}function lg(A){var I=Date.now();return BA[A>>2]=I/1e3|0,BA[A+4>>2]=I%1e3*1e3|0,0}function kg(A){return Math.pow(2,A)}function Ng(A){var I=Kg,g=I.LLVM_SAVEDSTACKS[A];I.LLVM_SAVEDSTACKS.splice(A,1),GB(g)}function Kg(){var A=Kg;return A.LLVM_SAVEDSTACKS||(A.LLVM_SAVEDSTACKS=[]),A.LLVM_SAVEDSTACKS.push(yB()),A.LLVM_SAVEDSTACKS.length-1}var Yg=61136;function pg(){if(!pg.called){pg.called=!0,BA[cB()>>2]=60*(new Date).getTimezoneOffset();var A=(new Date).getFullYear(),I=new Date(A,0,1),g=new Date(A,6,1);BA[DB()>>2]=Number(I.getTimezoneOffset()!=g.getTimezoneOffset());var B=i(I),C=i(g),Q=j(B),E=j(C);g.getTimezoneOffset()<I.getTimezoneOffset()?(BA[wB()>>2]=Q,BA[wB()+4>>2]=E):(BA[wB()>>2]=E,BA[wB()+4>>2]=Q)}function i(A){var I=A.toTimeString().match(/\(([A-Za-z ]+)\)$/);return I?I[1]:"GMT"}}function Jg(A,I){pg();var g=new Date(1e3*BA[A>>2]);BA[I>>2]=g.getSeconds(),BA[I+4>>2]=g.getMinutes(),BA[I+8>>2]=g.getHours(),BA[I+12>>2]=g.getDate(),BA[I+16>>2]=g.getMonth(),BA[I+20>>2]=g.getFullYear()-1900,BA[I+24>>2]=g.getDay();var B=new Date(g.getFullYear(),0,1),C=(g.getTime()-B.getTime())/864e5|0;BA[I+28>>2]=C,BA[I+36>>2]=-60*g.getTimezoneOffset();var Q=new Date(g.getFullYear(),6,1).getTimezoneOffset(),E=B.getTimezoneOffset(),i=0|(Q!=E&&g.getTimezoneOffset()==Math.min(E,Q));BA[I+32>>2]=i;var o=BA[wB()+(i?4:0)>>2];return BA[I+40>>2]=o,I}function bg(A){return Jg(A,Yg)}function Hg(A,I){throw FB(A,I||1),"longjmp"}function Lg(A,I,g){AA.set(AA.subarray(I,I+g),A)}function qg(A){return A%4==0&&(A%100!=0||A%400==0)}function mg(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}m("GMT",61184,4);var vg=[31,29,31,30,31,30,31,31,30,31,30,31],xg=[31,28,31,30,31,30,31,31,30,31,30,31];function Wg(A,I){for(var g=new Date(A.getTime());I>0;){var B=qg(g.getFullYear()),C=g.getMonth(),Q=(B?vg:xg)[C];if(!(I>Q-g.getDate()))return g.setDate(g.getDate()+I),g;I-=Q-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}function Zg(A,I,g,B){var C=BA[B+40>>2],Q={tm_sec:BA[B>>2],tm_min:BA[B+4>>2],tm_hour:BA[B+8>>2],tm_mday:BA[B+12>>2],tm_mon:BA[B+16>>2],tm_year:BA[B+20>>2],tm_wday:BA[B+24>>2],tm_yday:BA[B+28>>2],tm_isdst:BA[B+32>>2],tm_gmtoff:BA[B+36>>2],tm_zone:C?L(C):""},E=L(g),i={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var o in i)E=E.replace(new RegExp(o,"g"),i[o]);var t=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],e=["January","February","March","April","May","June","July","August","September","October","November","December"];function a(A,I,g){for(var B="number"==typeof A?A.toString():A||"";B.length<I;)B=g[0]+B;return B}function r(A,I){return a(A,I,"0")}function n(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function s(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function h(A){var I=Wg(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),C=s(g),Q=s(B);return n(C,I)<=0?n(Q,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var D={"%a":function(A){return t[A.tm_wday].substring(0,3)},"%A":function(A){return t[A.tm_wday]},"%b":function(A){return e[A.tm_mon].substring(0,3)},"%B":function(A){return e[A.tm_mon]},"%C":function(A){return r((A.tm_year+1900)/100|0,2)},"%d":function(A){return r(A.tm_mday,2)},"%e":function(A){return a(A.tm_mday,2," ")},"%g":function(A){return h(A).toString().substring(2)},"%G":function(A){return h(A)},"%H":function(A){return r(A.tm_hour,2)},"%I":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),r(I,2)},"%j":function(A){return r(A.tm_mday+mg(qg(A.tm_year+1900)?vg:xg,A.tm_mon-1),3)},"%m":function(A){return r(A.tm_mon+1,2)},"%M":function(A){return r(A.tm_min,2)},"%n":function(){return"\n"},"%p":function(A){return A.tm_hour>=0&&A.tm_hour<12?"AM":"PM"},"%S":function(A){return r(A.tm_sec,2)},"%t":function(){return"\t"},"%u":function(A){return A.tm_wday||7},"%U":function(A){var I=new Date(A.tm_year+1900,0,1),g=0===I.getDay()?I:Wg(I,7-I.getDay()),B=new Date(A.tm_year+1900,A.tm_mon,A.tm_mday);if(n(g,B)<0){var C=mg(qg(B.getFullYear())?vg:xg,B.getMonth()-1)-31,Q=31-g.getDate()+C+B.getDate();return r(Math.ceil(Q/7),2)}return 0===n(g,I)?"01":"00"},"%V":function(A){var I,g=new Date(A.tm_year+1900,0,4),B=new Date(A.tm_year+1901,0,4),C=s(g),Q=s(B),E=Wg(new Date(A.tm_year+1900,0,1),A.tm_yday);return n(E,C)<0?"53":n(Q,E)<=0?"01":(I=C.getFullYear()<A.tm_year+1900?A.tm_yday+32-C.getDate():A.tm_yday+1-C.getDate(),r(Math.ceil(I/7),2))},"%w":function(A){return A.tm_wday},"%W":function(A){var I=new Date(A.tm_year,0,1),g=1===I.getDay()?I:Wg(I,0===I.getDay()?1:7-I.getDay()+1),B=new Date(A.tm_year+1900,A.tm_mon,A.tm_mday);if(n(g,B)<0){var C=mg(qg(B.getFullYear())?vg:xg,B.getMonth()-1)-31,Q=31-g.getDate()+C+B.getDate();return r(Math.ceil(Q/7),2)}return 0===n(g,I)?"01":"00"},"%y":function(A){return(A.tm_year+1900).toString().substring(2)},"%Y":function(A){return A.tm_year+1900},"%z":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?"+":"-")+String("0000"+I).slice(-4)},"%Z":function(A){return A.tm_zone},"%%":function(){return"%"}};for(var o in D)E.indexOf(o)>=0&&(E=E.replace(new RegExp(o,"g"),D[o](Q)));var c=Tg(E,!1);return c.length>I?0:(P(c,A),c.length-1)}function Xg(A,I,g,B){return Zg(A,I,g,B)}function Vg(A){var I=Date.now()/1e3|0;return A&&(BA[A>>2]=I),I}aI.staticInit(),MI(),qI=A.BindingError=LI(Error,"BindingError"),vI=A.InternalError=LI(Error,"InternalError"),_I(),ng=A.UnboundTypeError=LI(Error,"UnboundTypeError");var Og=!1;function Tg(A,I,g){var B=g>0?g:v(A)+1,C=new Array(B),Q=q(A,C,0,C.length);return I&&(C.length=Q),C}function jg(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(Og&&p(!1,"Character code "+B+" ("+String.fromCharCode(B)+")  at offset "+g+" not in 0x00-0xFF."),B&=255),I.push(String.fromCharCode(B))}return I.join("")}var Pg="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",t=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=i.indexOf(A.charAt(t++))<<2|(C=i.indexOf(A.charAt(t++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(t++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(t++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(t<A.length);return o};function zg(A){if("boolean"==typeof s&&s){var I;try{I=Q.from(A,"base64")}catch(g){I=new Q(A,"base64")}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=Pg(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}function _g(A){if(bA(A))return zg(A.slice(JA.length))}function $g(A,I){var g=yB();try{return RB(A,I)}catch(A){if(GB(g),A!==A+0&&"longjmp"!==A)throw A;FB(1,0)}}function AB(A,I,g){var B=yB();try{return uB(A,I,g)}catch(A){if(GB(B),A!==A+0&&"longjmp"!==A)throw A;FB(1,0)}}function IB(A,I,g,B){var C=yB();try{return UB(A,I,g,B)}catch(A){if(GB(C),A!==A+0&&"longjmp"!==A)throw A;FB(1,0)}}function gB(A,I){var g=yB();try{SB(A,I)}catch(A){if(GB(g),A!==A+0&&"longjmp"!==A)throw A;FB(1,0)}}function BB(A,I,g){var B=yB();try{MB(A,I,g)}catch(A){if(GB(B),A!==A+0&&"longjmp"!==A)throw A;FB(1,0)}}function CB(A,I,g,B){var C=yB();try{lB(A,I,g,B)}catch(A){if(GB(C),A!==A+0&&"longjmp"!==A)throw A;FB(1,0)}}function QB(A,I,g,B,C){var Q=yB();try{kB(A,I,g,B,C)}catch(A){if(GB(Q),A!==A+0&&"longjmp"!==A)throw A;FB(1,0)}}var EB={},iB={$:AI,f:II,e:BI,A:CI,_:EI,z:nI,Z:sI,Y:hI,X:cI,o:wI,y:dI,W:GI,D:RI,V:UI,U:XI,x:VI,T:Ig,w:Cg,j:Dg,k:wg,i:fg,v:dg,s:Fg,S:Gg,__memory_base:1024,__table_base:0,a:yg,R:OA,Q:VA,P:XA,O:ZA,N:TA,M:Rg,K:Lg,J:Ug,b:Sg,n:Mg,u:lg,I:kg,m:Ng,l:Kg,H:bg,g:Hg,F:Zg,E:Xg,t:Vg,c:pA,h:N,q:$g,L:AB,G:IB,p:gB,C:BB,B:CB,r:QB,memory:S,d:k,table:K},oB=A.asm(EB,iB,_);A.asm=oB;var tB,eB=A.__GLOBAL__sub_I_ARToolKitJS_cpp=function(){return A.asm.aa.apply(null,arguments)},aB=A.__GLOBAL__sub_I_bind_cpp=function(){return A.asm.ba.apply(null,arguments)},rB=A.__GLOBAL__sub_I_iostream_cpp=function(){return A.asm.ca.apply(null,arguments)},nB=A.__ZSt18uncaught_exceptionv=function(){return A.asm.da.apply(null,arguments)},sB=(A.___embind_register_native_and_builtin_types=function(){return A.asm.ea.apply(null,arguments)},A.___emscripten_environ_constructor=function(){return A.asm.fa.apply(null,arguments)}),hB=(A.___errno_location=function(){return A.asm.ga.apply(null,arguments)},A.___getTypeName=function(){return A.asm.ha.apply(null,arguments)}),DB=A.__get_daylight=function(){return A.asm.ia.apply(null,arguments)},cB=A.__get_timezone=function(){return A.asm.ja.apply(null,arguments)},wB=A.__get_tzname=function(){return A.asm.ka.apply(null,arguments)},fB=A._free=function(){return A.asm.la.apply(null,arguments)},dB=A._malloc=function(){return A.asm.ma.apply(null,arguments)},FB=A._setThrew=function(){return A.asm.na.apply(null,arguments)},GB=(A.stackAlloc=function(){return A.asm.Ra.apply(null,arguments)},A.stackRestore=function(){return A.asm.Sa.apply(null,arguments)}),yB=A.stackSave=function(){return A.asm.Ta.apply(null,arguments)},RB=(A.dynCall_di=function(){return A.asm.oa.apply(null,arguments)},A.dynCall_dii=function(){return A.asm.pa.apply(null,arguments)},A.dynCall_i=function(){return A.asm.qa.apply(null,arguments)},A.dynCall_ii=function(){return A.asm.ra.apply(null,arguments)}),uB=(A.dynCall_iidiiii=function(){return A.asm.sa.apply(null,arguments)},A.dynCall_iii=function(){return A.asm.ta.apply(null,arguments)}),UB=A.dynCall_iiii=function(){return A.asm.ua.apply(null,arguments)},SB=(A.dynCall_iiiii=function(){return A.asm.va.apply(null,arguments)},A.dynCall_iiiiid=function(){return A.asm.wa.apply(null,arguments)},A.dynCall_iiiiii=function(){return A.asm.xa.apply(null,arguments)},A.dynCall_iiiiiid=function(){return A.asm.ya.apply(null,arguments)},A.dynCall_iiiiiii=function(){return A.asm.za.apply(null,arguments)},A.dynCall_iiiiiiii=function(){return A.asm.Aa.apply(null,arguments)},A.dynCall_iiiiiiiii=function(){return A.asm.Ba.apply(null,arguments)},A.dynCall_iiiiij=function(){return A.asm.Ca.apply(null,arguments)},A.dynCall_jiji=function(){return A.asm.Da.apply(null,arguments)},A.dynCall_v=function(){return A.asm.Ea.apply(null,arguments)},A.dynCall_vi=function(){return A.asm.Fa.apply(null,arguments)}),MB=(A.dynCall_vid=function(){return A.asm.Ga.apply(null,arguments)},A.dynCall_vif=function(){return A.asm.Ha.apply(null,arguments)},A.dynCall_vii=function(){return A.asm.Ia.apply(null,arguments)}),lB=(A.dynCall_viid=function(){return A.asm.Ja.apply(null,arguments)},A.dynCall_viif=function(){return A.asm.Ka.apply(null,arguments)},A.dynCall_viii=function(){return A.asm.La.apply(null,arguments)}),kB=A.dynCall_viiii=function(){return A.asm.Ma.apply(null,arguments)};function NB(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function KB(I){function g(){tB||(tB=!0,Y||(fA(),dA(),A.onRuntimeInitialized&&A.onRuntimeInitialized(),GA()))}I=I||t,lA>0||(wA(),lA>0||(A.setStatus?(A.setStatus("Running..."),setTimeout((function(){setTimeout((function(){A.setStatus("")}),1),g()}),1)):g()))}function YB(I,g){g&&U&&0===I||(U||(Y=!0,FA(),A.onExit&&A.onExit(I)),a(I,new NB(I)))}if(A.dynCall_viiiii=function(){return A.asm.Na.apply(null,arguments)},A.dynCall_viiiiii=function(){return A.asm.Oa.apply(null,arguments)},A.dynCall_viiiiiii=function(){return A.asm.Pa.apply(null,arguments)},A.dynCall_viijii=function(){return A.asm.Qa.apply(null,arguments)},A.asm=oB,A.FS=aI,A.then=function(I){if(tB)I(A);else{var g=A.onRuntimeInitialized;A.onRuntimeInitialized=function(){g&&g(),I(A)}}return A},NA=function A(){tB||KB(),tB||(NA=A)},A.run=KB,A.preInit)for("function"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return U=!0,KB(),A});I.a=t}).call(this,"/index.js",g(9),"/",g(4).Buffer)},function(A,I,g){A.exports=g(181)},function(A,I){A.exports=function(A,I,g){return I in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}},function(A,I,g){var B=function(A){"use strict";var I=Object.prototype,g=I.hasOwnProperty,B="function"==typeof Symbol?Symbol:{},C=B.iterator||"@@iterator",Q=B.asyncIterator||"@@asyncIterator",E=B.toStringTag||"@@toStringTag";function i(A,I,g,B){var C=I&&I.prototype instanceof e?I:e,Q=Object.create(C.prototype),E=new G(B||[]);return Q._invoke=function(A,I,g){var B="suspendedStart";return function(C,Q){if("executing"===B)throw new Error("Generator is already running");if("completed"===B){if("throw"===C)throw Q;return R()}for(g.method=C,g.arg=Q;;){var E=g.delegate;if(E){var i=f(E,g);if(i){if(i===t)continue;return i}}if("next"===g.method)g.sent=g._sent=g.arg;else if("throw"===g.method){if("suspendedStart"===B)throw B="completed",g.arg;g.dispatchException(g.arg)}else"return"===g.method&&g.abrupt("return",g.arg);B="executing";var e=o(A,I,g);if("normal"===e.type){if(B=g.done?"completed":"suspendedYield",e.arg===t)continue;return{value:e.arg,done:g.done}}"throw"===e.type&&(B="completed",g.method="throw",g.arg=e.arg)}}}(A,g,E),Q}function o(A,I,g){try{return{type:"normal",arg:A.call(I,g)}}catch(A){return{type:"throw",arg:A}}}A.wrap=i;var t={};function e(){}function a(){}function r(){}var n={};n[C]=function(){return this};var s=Object.getPrototypeOf,h=s&&s(s(y([])));h&&h!==I&&g.call(h,C)&&(n=h);var D=r.prototype=e.prototype=Object.create(n);function c(A){["next","throw","return"].forEach((function(I){A[I]=function(A){return this._invoke(I,A)}}))}function w(A){var I;this._invoke=function(B,C){function Q(){return new Promise((function(I,Q){!function I(B,C,Q,E){var i=o(A[B],A,C);if("throw"!==i.type){var t=i.arg,e=t.value;return e&&"object"==typeof e&&g.call(e,"__await")?Promise.resolve(e.__await).then((function(A){I("next",A,Q,E)}),(function(A){I("throw",A,Q,E)})):Promise.resolve(e).then((function(A){t.value=A,Q(t)}),(function(A){return I("throw",A,Q,E)}))}E(i.arg)}(B,C,I,Q)}))}return I=I?I.then(Q,Q):Q()}}function f(A,I){var g=A.iterator[I.method];if(void 0===g){if(I.delegate=null,"throw"===I.method){if(A.iterator.return&&(I.method="return",I.arg=void 0,f(A,I),"throw"===I.method))return t;I.method="throw",I.arg=new TypeError("The iterator does not provide a 'throw' method")}return t}var B=o(g,A.iterator,I.arg);if("throw"===B.type)return I.method="throw",I.arg=B.arg,I.delegate=null,t;var C=B.arg;return C?C.done?(I[A.resultName]=C.value,I.next=A.nextLoc,"return"!==I.method&&(I.method="next",I.arg=void 0),I.delegate=null,t):C:(I.method="throw",I.arg=new TypeError("iterator result is not an object"),I.delegate=null,t)}function d(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function F(A){var I=A.completion||{};I.type="normal",delete I.arg,A.completion=I}function G(A){this.tryEntries=[{tryLoc:"root"}],A.forEach(d,this),this.reset(!0)}function y(A){if(A){var I=A[C];if(I)return I.call(A);if("function"==typeof A.next)return A;if(!isNaN(A.length)){var B=-1,Q=function I(){for(;++B<A.length;)if(g.call(A,B))return I.value=A[B],I.done=!1,I;return I.value=void 0,I.done=!0,I};return Q.next=Q}}return{next:R}}function R(){return{value:void 0,done:!0}}return a.prototype=D.constructor=r,r.constructor=a,r[E]=a.displayName="GeneratorFunction",A.isGeneratorFunction=function(A){var I="function"==typeof A&&A.constructor;return!!I&&(I===a||"GeneratorFunction"===(I.displayName||I.name))},A.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,r):(A.__proto__=r,E in A||(A[E]="GeneratorFunction")),A.prototype=Object.create(D),A},A.awrap=function(A){return{__await:A}},c(w.prototype),w.prototype[Q]=function(){return this},A.AsyncIterator=w,A.async=function(I,g,B,C){var Q=new w(i(I,g,B,C));return A.isGeneratorFunction(g)?Q:Q.next().then((function(A){return A.done?A.value:Q.next()}))},c(D),D[E]="Generator",D[C]=function(){return this},D.toString=function(){return"[object Generator]"},A.keys=function(A){var I=[];for(var g in A)I.push(g);return I.reverse(),function g(){for(;I.length;){var B=I.pop();if(B in A)return g.value=B,g.done=!1,g}return g.done=!0,g}},A.values=y,G.prototype={constructor:G,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(F),!A)for(var I in this)"t"===I.charAt(0)&&g.call(this,I)&&!isNaN(+I.slice(1))&&(this[I]=void 0)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if("throw"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var I=this;function B(g,B){return E.type="throw",E.arg=A,I.next=g,B&&(I.method="next",I.arg=void 0),!!B}for(var C=this.tryEntries.length-1;C>=0;--C){var Q=this.tryEntries[C],E=Q.completion;if("root"===Q.tryLoc)return B("end");if(Q.tryLoc<=this.prev){var i=g.call(Q,"catchLoc"),o=g.call(Q,"finallyLoc");if(i&&o){if(this.prev<Q.catchLoc)return B(Q.catchLoc,!0);if(this.prev<Q.finallyLoc)return B(Q.finallyLoc)}else if(i){if(this.prev<Q.catchLoc)return B(Q.catchLoc,!0)}else{if(!o)throw new Error("try statement without catch or finally");if(this.prev<Q.finallyLoc)return B(Q.finallyLoc)}}}},abrupt:function(A,I){for(var B=this.tryEntries.length-1;B>=0;--B){var C=this.tryEntries[B];if(C.tryLoc<=this.prev&&g.call(C,"finallyLoc")&&this.prev<C.finallyLoc){var Q=C;break}}Q&&("break"===A||"continue"===A)&&Q.tryLoc<=I&&I<=Q.finallyLoc&&(Q=null);var E=Q?Q.completion:{};return E.type=A,E.arg=I,Q?(this.method="next",this.next=Q.finallyLoc,t):this.complete(E)},complete:function(A,I){if("throw"===A.type)throw A.arg;return"break"===A.type||"continue"===A.type?this.next=A.arg:"return"===A.type?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):"normal"===A.type&&I&&(this.next=I),t},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),F(g),t}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if("throw"===B.type){var C=B.arg;F(g)}return C}}throw new Error("illegal catch attempt")},delegateYield:function(A,I,g){return this.delegate={iterator:y(A),resultName:I,nextLoc:g},"next"===this.method&&(this.arg=void 0),t}},A}(A.exports);try{regeneratorRuntime=B}catch(A){Function("r","regeneratorRuntime = r")(B)}},function(A,I,g){"use strict";I.byteLength=function(A){var I=t(A),g=I[0],B=I[1];return 3*(g+B)/4-B},I.toByteArray=function(A){var I,g,B=t(A),E=B[0],i=B[1],o=new Q(function(A,I,g){return 3*(I+g)/4-g}(0,E,i)),e=0,a=i>0?E-4:E;for(g=0;g<a;g+=4)I=C[A.charCodeAt(g)]<<18|C[A.charCodeAt(g+1)]<<12|C[A.charCodeAt(g+2)]<<6|C[A.charCodeAt(g+3)],o[e++]=I>>16&255,o[e++]=I>>8&255,o[e++]=255&I;2===i&&(I=C[A.charCodeAt(g)]<<2|C[A.charCodeAt(g+1)]>>4,o[e++]=255&I);1===i&&(I=C[A.charCodeAt(g)]<<10|C[A.charCodeAt(g+1)]<<4|C[A.charCodeAt(g+2)]>>2,o[e++]=I>>8&255,o[e++]=255&I);return o},I.fromByteArray=function(A){for(var I,g=A.length,C=g%3,Q=[],E=0,i=g-C;E<i;E+=16383)Q.push(e(A,E,E+16383>i?i:E+16383));1===C?(I=A[g-1],Q.push(B[I>>2]+B[I<<4&63]+"==")):2===C&&(I=(A[g-2]<<8)+A[g-1],Q.push(B[I>>10]+B[I>>4&63]+B[I<<2&63]+"="));return Q.join("")};for(var B=[],C=[],Q="undefined"!=typeof Uint8Array?Uint8Array:Array,E="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,o=E.length;i<o;++i)B[i]=E[i],C[E.charCodeAt(i)]=i;function t(A){var I=A.length;if(I%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var g=A.indexOf("=");return-1===g&&(g=I),[g,g===I?0:4-g%4]}function e(A,I,g){for(var C,Q,E=[],i=I;i<g;i+=3)C=(A[i]<<16&16711680)+(A[i+1]<<8&65280)+(255&A[i+2]),E.push(B[(Q=C)>>18&63]+B[Q>>12&63]+B[Q>>6&63]+B[63&Q]);return E.join("")}C["-".charCodeAt(0)]=62,C["_".charCodeAt(0)]=63},function(A,I){I.read=function(A,I,g,B,C){var Q,E,i=8*C-B-1,o=(1<<i)-1,t=o>>1,e=-7,a=g?C-1:0,r=g?-1:1,n=A[I+a];for(a+=r,Q=n&(1<<-e)-1,n>>=-e,e+=i;e>0;Q=256*Q+A[I+a],a+=r,e-=8);for(E=Q&(1<<-e)-1,Q>>=-e,e+=B;e>0;E=256*E+A[I+a],a+=r,e-=8);if(0===Q)Q=1-t;else{if(Q===o)return E?NaN:1/0*(n?-1:1);E+=Math.pow(2,B),Q-=t}return(n?-1:1)*E*Math.pow(2,Q-B)},I.write=function(A,I,g,B,C,Q){var E,i,o,t=8*Q-C-1,e=(1<<t)-1,a=e>>1,r=23===C?Math.pow(2,-24)-Math.pow(2,-77):0,n=B?0:Q-1,s=B?1:-1,h=I<0||0===I&&1/I<0?1:0;for(I=Math.abs(I),isNaN(I)||I===1/0?(i=isNaN(I)?1:0,E=e):(E=Math.floor(Math.log(I)/Math.LN2),I*(o=Math.pow(2,-E))<1&&(E--,o*=2),(I+=E+a>=1?r/o:r*Math.pow(2,1-a))*o>=2&&(E++,o/=2),E+a>=e?(i=0,E=e):E+a>=1?(i=(I*o-1)*Math.pow(2,C),E+=a):(i=I*Math.pow(2,a-1)*Math.pow(2,C),E=0));C>=8;A[g+n]=255&i,n+=s,i/=256,C-=8);for(E=E<<C|i,t+=C;t>0;A[g+n]=255&E,n+=s,E/=256,t-=8);A[g+n-s]|=128*h}},function(A,I){},function(A,I,g){"use strict";I.randomBytes=I.rng=I.pseudoRandomBytes=I.prng=g(18),I.createHash=I.Hash=g(21),I.createHmac=I.Hmac=g(57);var B=g(119),C=Object.keys(B),Q=["sha1","sha224","sha256","sha384","sha512","md5","rmd160"].concat(C);I.getHashes=function(){return Q};var E=g(60);I.pbkdf2=E.pbkdf2,I.pbkdf2Sync=E.pbkdf2Sync;var i=g(121);I.Cipher=i.Cipher,I.createCipher=i.createCipher,I.Cipheriv=i.Cipheriv,I.createCipheriv=i.createCipheriv,I.Decipher=i.Decipher,I.createDecipher=i.createDecipher,I.Decipheriv=i.Decipheriv,I.createDecipheriv=i.createDecipheriv,I.getCiphers=i.getCiphers,I.listCiphers=i.listCiphers;var o=g(136);I.DiffieHellmanGroup=o.DiffieHellmanGroup,I.createDiffieHellmanGroup=o.createDiffieHellmanGroup,I.getDiffieHellman=o.getDiffieHellman,I.createDiffieHellman=o.createDiffieHellman,I.DiffieHellman=o.DiffieHellman;var t=g(142);I.createSign=t.createSign,I.Sign=t.Sign,I.createVerify=t.createVerify,I.Verify=t.Verify,I.createECDH=g(176);var e=g(177);I.publicEncrypt=e.publicEncrypt,I.privateEncrypt=e.privateEncrypt,I.publicDecrypt=e.publicDecrypt,I.privateDecrypt=e.privateDecrypt;var a=g(180);I.randomFill=a.randomFill,I.randomFillSync=a.randomFillSync,I.createCredentials=function(){throw new Error(["sorry, createCredentials is not implemented yet","we accept pull requests","https://github.com/crypto-browserify/crypto-browserify"].join("\n"))},I.constants={DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,NPN_ENABLED:1,ALPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6}},function(A,I){},function(A,I,g){"use strict";var B=g(1).Buffer,C=g(105);A.exports=function(){function A(){!function(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}(this,A),this.head=null,this.tail=null,this.length=0}return A.prototype.push=function(A){var I={data:A,next:null};this.length>0?this.tail.next=I:this.head=I,this.tail=I,++this.length},A.prototype.unshift=function(A){var I={data:A,next:this.head};0===this.length&&(this.tail=I),this.head=I,++this.length},A.prototype.shift=function(){if(0!==this.length){var A=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,A}},A.prototype.clear=function(){this.head=this.tail=null,this.length=0},A.prototype.join=function(A){if(0===this.length)return"";for(var I=this.head,g=""+I.data;I=I.next;)g+=A+I.data;return g},A.prototype.concat=function(A){if(0===this.length)return B.alloc(0);if(1===this.length)return this.head.data;for(var I,g,C,Q=B.allocUnsafe(A>>>0),E=this.head,i=0;E;)I=E.data,g=Q,C=i,I.copy(g,C),i+=E.data.length,E=E.next;return Q},A}(),C&&C.inspect&&C.inspect.custom&&(A.exports.prototype[C.inspect.custom]=function(){var A=C.inspect({length:this.length});return this.constructor.name+" "+A})},function(A,I){},function(A,I,g){(function(A){var B=void 0!==A&&A||"undefined"!=typeof self&&self||window,C=Function.prototype.apply;function Q(A,I){this._id=A,this._clearFn=I}I.setTimeout=function(){return new Q(C.call(setTimeout,B,arguments),clearTimeout)},I.setInterval=function(){return new Q(C.call(setInterval,B,arguments),clearInterval)},I.clearTimeout=I.clearInterval=function(A){A&&A.close()},Q.prototype.unref=Q.prototype.ref=function(){},Q.prototype.close=function(){this._clearFn.call(B,this._id)},I.enroll=function(A,I){clearTimeout(A._idleTimeoutId),A._idleTimeout=I},I.unenroll=function(A){clearTimeout(A._idleTimeoutId),A._idleTimeout=-1},I._unrefActive=I.active=function(A){clearTimeout(A._idleTimeoutId);var I=A._idleTimeout;I>=0&&(A._idleTimeoutId=setTimeout((function(){A._onTimeout&&A._onTimeout()}),I))},g(107),I.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==A&&A.setImmediate||this&&this.setImmediate,I.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==A&&A.clearImmediate||this&&this.clearImmediate}).call(this,g(11))},function(A,I,g){(function(A,I){!function(A,g){"use strict";if(!A.setImmediate){var B,C,Q,E,i,o=1,t={},e=!1,a=A.document,r=Object.getPrototypeOf&&Object.getPrototypeOf(A);r=r&&r.setTimeout?r:A,"[object process]"==={}.toString.call(A.process)?B=function(A){I.nextTick((function(){s(A)}))}:!function(){if(A.postMessage&&!A.importScripts){var I=!0,g=A.onmessage;return A.onmessage=function(){I=!1},A.postMessage("","*"),A.onmessage=g,I}}()?A.MessageChannel?((Q=new MessageChannel).port1.onmessage=function(A){s(A.data)},B=function(A){Q.port2.postMessage(A)}):a&&"onreadystatechange"in a.createElement("script")?(C=a.documentElement,B=function(A){var I=a.createElement("script");I.onreadystatechange=function(){s(A),I.onreadystatechange=null,C.removeChild(I),I=null},C.appendChild(I)}):B=function(A){setTimeout(s,0,A)}:(E="setImmediate$"+Math.random()+"$",i=function(I){I.source===A&&"string"==typeof I.data&&0===I.data.indexOf(E)&&s(+I.data.slice(E.length))},A.addEventListener?A.addEventListener("message",i,!1):A.attachEvent("onmessage",i),B=function(I){A.postMessage(E+I,"*")}),r.setImmediate=function(A){"function"!=typeof A&&(A=new Function(""+A));for(var I=new Array(arguments.length-1),g=0;g<I.length;g++)I[g]=arguments[g+1];var C={callback:A,args:I};return t[o]=C,B(o),o++},r.clearImmediate=n}function n(A){delete t[A]}function s(A){if(e)setTimeout(s,0,A);else{var I=t[A];if(I){e=!0;try{!function(A){var I=A.callback,g=A.args;switch(g.length){case 0:I();break;case 1:I(g[0]);break;case 2:I(g[0],g[1]);break;case 3:I(g[0],g[1],g[2]);break;default:I.apply(void 0,g)}}(I)}finally{n(A),e=!1}}}}}("undefined"==typeof self?void 0===A?this:A:self)}).call(this,g(11),g(9))},function(A,I,g){(function(I){function g(A){try{if(!I.localStorage)return!1}catch(A){return!1}var g=I.localStorage[A];return null!=g&&"true"===String(g).toLowerCase()}A.exports=function(A,I){if(g("noDeprecation"))return A;var B=!1;return function(){if(!B){if(g("throwDeprecation"))throw new Error(I);g("traceDeprecation")?console.trace(I):console.warn(I),B=!0}return A.apply(this,arguments)}}}).call(this,g(11))},function(A,I,g){"use strict";A.exports=Q;var B=g(54),C=Object.create(g(22));function Q(A){if(!(this instanceof Q))return new Q(A);B.call(this,A)}C.inherits=g(0),C.inherits(Q,B),Q.prototype._transform=function(A,I,g){g(null,A)}},function(A,I,g){A.exports=g(36)},function(A,I,g){A.exports=g(16)},function(A,I,g){A.exports=g(35).Transform},function(A,I,g){A.exports=g(35).PassThrough},function(A,I,g){var B=g(0),C=g(19),Q=g(1).Buffer,E=[1518500249,1859775393,-1894007588,-899497514],i=new Array(80);function o(){this.init(),this._w=i,C.call(this,64,56)}function t(A){return A<<30|A>>>2}function e(A,I,g,B){return 0===A?I&g|~I&B:2===A?I&g|I&B|g&B:I^g^B}B(o,C),o.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},o.prototype._update=function(A){for(var I,g=this._w,B=0|this._a,C=0|this._b,Q=0|this._c,i=0|this._d,o=0|this._e,a=0;a<16;++a)g[a]=A.readInt32BE(4*a);for(;a<80;++a)g[a]=g[a-3]^g[a-8]^g[a-14]^g[a-16];for(var r=0;r<80;++r){var n=~~(r/20),s=0|((I=B)<<5|I>>>27)+e(n,C,Q,i)+o+g[r]+E[n];o=i,i=Q,Q=t(C),C=B,B=s}this._a=B+this._a|0,this._b=C+this._b|0,this._c=Q+this._c|0,this._d=i+this._d|0,this._e=o+this._e|0},o.prototype._hash=function(){var A=Q.allocUnsafe(20);return A.writeInt32BE(0|this._a,0),A.writeInt32BE(0|this._b,4),A.writeInt32BE(0|this._c,8),A.writeInt32BE(0|this._d,12),A.writeInt32BE(0|this._e,16),A},A.exports=o},function(A,I,g){var B=g(0),C=g(19),Q=g(1).Buffer,E=[1518500249,1859775393,-1894007588,-899497514],i=new Array(80);function o(){this.init(),this._w=i,C.call(this,64,56)}function t(A){return A<<5|A>>>27}function e(A){return A<<30|A>>>2}function a(A,I,g,B){return 0===A?I&g|~I&B:2===A?I&g|I&B|g&B:I^g^B}B(o,C),o.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},o.prototype._update=function(A){for(var I,g=this._w,B=0|this._a,C=0|this._b,Q=0|this._c,i=0|this._d,o=0|this._e,r=0;r<16;++r)g[r]=A.readInt32BE(4*r);for(;r<80;++r)g[r]=(I=g[r-3]^g[r-8]^g[r-14]^g[r-16])<<1|I>>>31;for(var n=0;n<80;++n){var s=~~(n/20),h=t(B)+a(s,C,Q,i)+o+g[n]+E[s]|0;o=i,i=Q,Q=e(C),C=B,B=h}this._a=B+this._a|0,this._b=C+this._b|0,this._c=Q+this._c|0,this._d=i+this._d|0,this._e=o+this._e|0},o.prototype._hash=function(){var A=Q.allocUnsafe(20);return A.writeInt32BE(0|this._a,0),A.writeInt32BE(0|this._b,4),A.writeInt32BE(0|this._c,8),A.writeInt32BE(0|this._d,12),A.writeInt32BE(0|this._e,16),A},A.exports=o},function(A,I,g){var B=g(0),C=g(55),Q=g(19),E=g(1).Buffer,i=new Array(64);function o(){this.init(),this._w=i,Q.call(this,64,56)}B(o,C),o.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},o.prototype._hash=function(){var A=E.allocUnsafe(28);return A.writeInt32BE(this._a,0),A.writeInt32BE(this._b,4),A.writeInt32BE(this._c,8),A.writeInt32BE(this._d,12),A.writeInt32BE(this._e,16),A.writeInt32BE(this._f,20),A.writeInt32BE(this._g,24),A},A.exports=o},function(A,I,g){var B=g(0),C=g(56),Q=g(19),E=g(1).Buffer,i=new Array(160);function o(){this.init(),this._w=i,Q.call(this,128,112)}B(o,C),o.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},o.prototype._hash=function(){var A=E.allocUnsafe(48);function I(I,g,B){A.writeInt32BE(I,B),A.writeInt32BE(g,B+4)}return I(this._ah,this._al,0),I(this._bh,this._bl,8),I(this._ch,this._cl,16),I(this._dh,this._dl,24),I(this._eh,this._el,32),I(this._fh,this._fl,40),A},A.exports=o},function(A,I,g){"use strict";var B=g(0),C=g(1).Buffer,Q=g(14),E=C.alloc(128);function i(A,I){Q.call(this,"digest"),"string"==typeof I&&(I=C.from(I)),this._alg=A,this._key=I,I.length>64?I=A(I):I.length<64&&(I=C.concat([I,E],64));for(var g=this._ipad=C.allocUnsafe(64),B=this._opad=C.allocUnsafe(64),i=0;i<64;i++)g[i]=54^I[i],B[i]=92^I[i];this._hash=[g]}B(i,Q),i.prototype._update=function(A){this._hash.push(A)},i.prototype._final=function(){var A=this._alg(C.concat(this._hash));return this._alg(C.concat([this._opad,A]))},A.exports=i},function(A,I,g){A.exports=g(59)},function(A,I,g){(function(I,B){var C,Q=g(61),E=g(62),i=g(63),o=g(1).Buffer,t=I.crypto&&I.crypto.subtle,e={sha:"SHA-1","sha-1":"SHA-1",sha1:"SHA-1",sha256:"SHA-256","sha-256":"SHA-256",sha384:"SHA-384","sha-384":"SHA-384","sha-512":"SHA-512",sha512:"SHA-512"},a=[];function r(A,I,g,B,C){return t.importKey("raw",A,{name:"PBKDF2"},!1,["deriveBits"]).then((function(A){return t.deriveBits({name:"PBKDF2",salt:I,iterations:g,hash:{name:C}},A,B<<3)})).then((function(A){return o.from(A)}))}A.exports=function(A,g,n,s,h,D){"function"==typeof h&&(D=h,h=void 0);var c=e[(h=h||"sha1").toLowerCase()];if(!c||"function"!=typeof I.Promise)return B.nextTick((function(){var I;try{I=i(A,g,n,s,h)}catch(A){return D(A)}D(null,I)}));if(Q(A,g,n,s),"function"!=typeof D)throw new Error("No callback provided to pbkdf2");o.isBuffer(A)||(A=o.from(A,E)),o.isBuffer(g)||(g=o.from(g,E)),function(A,I){A.then((function(A){B.nextTick((function(){I(null,A)}))}),(function(A){B.nextTick((function(){I(A)}))}))}(function(A){if(I.process&&!I.process.browser)return Promise.resolve(!1);if(!t||!t.importKey||!t.deriveBits)return Promise.resolve(!1);if(void 0!==a[A])return a[A];var g=r(C=C||o.alloc(8),C,10,128,A).then((function(){return!0})).catch((function(){return!1}));return a[A]=g,g}(c).then((function(I){return I?r(A,g,n,s,c):i(A,g,n,s,h)})),D)}}).call(this,g(11),g(9))},function(A,I,g){var B=g(122),C=g(41),Q=g(42),E=g(135),i=g(29);function o(A,I,g){if(A=A.toLowerCase(),Q[A])return C.createCipheriv(A,I,g);if(E[A])return new B({key:I,iv:g,mode:A});throw new TypeError("invalid suite type")}function t(A,I,g){if(A=A.toLowerCase(),Q[A])return C.createDecipheriv(A,I,g);if(E[A])return new B({key:I,iv:g,mode:A,decrypt:!0});throw new TypeError("invalid suite type")}I.createCipher=I.Cipher=function(A,I){var g,B;if(A=A.toLowerCase(),Q[A])g=Q[A].key,B=Q[A].iv;else{if(!E[A])throw new TypeError("invalid suite type");g=8*E[A].key,B=E[A].iv}var C=i(I,!1,g,B);return o(A,C.key,C.iv)},I.createCipheriv=I.Cipheriv=o,I.createDecipher=I.Decipher=function(A,I){var g,B;if(A=A.toLowerCase(),Q[A])g=Q[A].key,B=Q[A].iv;else{if(!E[A])throw new TypeError("invalid suite type");g=8*E[A].key,B=E[A].iv}var C=i(I,!1,g,B);return t(A,C.key,C.iv)},I.createDecipheriv=I.Decipheriv=t,I.listCiphers=I.getCiphers=function(){return Object.keys(E).concat(C.getCiphers())}},function(A,I,g){var B=g(14),C=g(123),Q=g(0),E=g(1).Buffer,i={"des-ede3-cbc":C.CBC.instantiate(C.EDE),"des-ede3":C.EDE,"des-ede-cbc":C.CBC.instantiate(C.EDE),"des-ede":C.EDE,"des-cbc":C.CBC.instantiate(C.DES),"des-ecb":C.DES};function o(A){B.call(this);var I,g=A.mode.toLowerCase(),C=i[g];I=A.decrypt?"decrypt":"encrypt";var Q=A.key;E.isBuffer(Q)||(Q=E.from(Q)),"des-ede"!==g&&"des-ede-cbc"!==g||(Q=E.concat([Q,Q.slice(0,8)]));var o=A.iv;E.isBuffer(o)||(o=E.from(o)),this._des=C.create({key:Q,iv:o,type:I})}i.des=i["des-cbc"],i.des3=i["des-ede3-cbc"],A.exports=o,Q(o,B),o.prototype._update=function(A){return E.from(this._des.update(A))},o.prototype._final=function(){return E.from(this._des.final())}},function(A,I,g){"use strict";I.utils=g(64),I.Cipher=g(40),I.DES=g(65),I.CBC=g(124),I.EDE=g(125)},function(A,I,g){"use strict";var B=g(7),C=g(0),Q={};function E(A){B.equal(A.length,8,"Invalid IV length"),this.iv=new Array(8);for(var I=0;I<this.iv.length;I++)this.iv[I]=A[I]}I.instantiate=function(A){function I(I){A.call(this,I),this._cbcInit()}C(I,A);for(var g=Object.keys(Q),B=0;B<g.length;B++){var E=g[B];I.prototype[E]=Q[E]}return I.create=function(A){return new I(A)},I},Q._cbcInit=function(){var A=new E(this.options.iv);this._cbcState=A},Q._update=function(A,I,g,B){var C=this._cbcState,Q=this.constructor.super_.prototype,E=C.iv;if("encrypt"===this.type){for(var i=0;i<this.blockSize;i++)E[i]^=A[I+i];Q._update.call(this,E,0,g,B);for(i=0;i<this.blockSize;i++)E[i]=g[B+i]}else{Q._update.call(this,A,I,g,B);for(i=0;i<this.blockSize;i++)g[B+i]^=E[i];for(i=0;i<this.blockSize;i++)E[i]=A[I+i]}}},function(A,I,g){"use strict";var B=g(7),C=g(0),Q=g(40),E=g(65);function i(A,I){B.equal(I.length,24,"Invalid key length");var g=I.slice(0,8),C=I.slice(8,16),Q=I.slice(16,24);this.ciphers="encrypt"===A?[E.create({type:"encrypt",key:g}),E.create({type:"decrypt",key:C}),E.create({type:"encrypt",key:Q})]:[E.create({type:"decrypt",key:Q}),E.create({type:"encrypt",key:C}),E.create({type:"decrypt",key:g})]}function o(A){Q.call(this,A);var I=new i(this.type,this.options.key);this._edeState=I}C(o,Q),A.exports=o,o.create=function(A){return new o(A)},o.prototype._update=function(A,I,g,B){var C=this._edeState;C.ciphers[0]._update(A,I,g,B),C.ciphers[1]._update(g,B,g,B),C.ciphers[2]._update(g,B,g,B)},o.prototype._pad=E.prototype._pad,o.prototype._unpad=E.prototype._unpad},function(A,I,g){var B=g(42),C=g(69),Q=g(1).Buffer,E=g(70),i=g(14),o=g(28),t=g(29);function e(A,I,g){i.call(this),this._cache=new r,this._cipher=new o.AES(I),this._prev=Q.from(g),this._mode=A,this._autopadding=!0}g(0)(e,i),e.prototype._update=function(A){var I,g;this._cache.add(A);for(var B=[];I=this._cache.get();)g=this._mode.encrypt(this,I),B.push(g);return Q.concat(B)};var a=Q.alloc(16,16);function r(){this.cache=Q.allocUnsafe(0)}function n(A,I,g){var i=B[A.toLowerCase()];if(!i)throw new TypeError("invalid suite type");if("string"==typeof I&&(I=Q.from(I)),I.length!==i.key/8)throw new TypeError("invalid key length "+I.length);if("string"==typeof g&&(g=Q.from(g)),"GCM"!==i.mode&&g.length!==i.iv)throw new TypeError("invalid iv length "+g.length);return"stream"===i.type?new E(i.module,I,g):"auth"===i.type?new C(i.module,I,g):new e(i.module,I,g)}e.prototype._final=function(){var A=this._cache.flush();if(this._autopadding)return A=this._mode.encrypt(this,A),this._cipher.scrub(),A;if(!A.equals(a))throw this._cipher.scrub(),new Error("data not multiple of block length")},e.prototype.setAutoPadding=function(A){return this._autopadding=!!A,this},r.prototype.add=function(A){this.cache=Q.concat([this.cache,A])},r.prototype.get=function(){if(this.cache.length>15){var A=this.cache.slice(0,16);return this.cache=this.cache.slice(16),A}return null},r.prototype.flush=function(){for(var A=16-this.cache.length,I=Q.allocUnsafe(A),g=-1;++g<A;)I.writeUInt8(A,g);return Q.concat([this.cache,I])},I.createCipheriv=n,I.createCipher=function(A,I){var g=B[A.toLowerCase()];if(!g)throw new TypeError("invalid suite type");var C=t(I,!1,g.key,g.iv);return n(A,C.key,C.iv)}},function(A,I){I.encrypt=function(A,I){return A._cipher.encryptBlock(I)},I.decrypt=function(A,I){return A._cipher.decryptBlock(I)}},function(A,I,g){var B=g(23);I.encrypt=function(A,I){var g=B(I,A._prev);return A._prev=A._cipher.encryptBlock(g),A._prev},I.decrypt=function(A,I){var g=A._prev;A._prev=I;var C=A._cipher.decryptBlock(I);return B(C,g)}},function(A,I,g){var B=g(1).Buffer,C=g(23);function Q(A,I,g){var Q=I.length,E=C(I,A._cache);return A._cache=A._cache.slice(Q),A._prev=B.concat([A._prev,g?I:E]),E}I.encrypt=function(A,I,g){for(var C,E=B.allocUnsafe(0);I.length;){if(0===A._cache.length&&(A._cache=A._cipher.encryptBlock(A._prev),A._prev=B.allocUnsafe(0)),!(A._cache.length<=I.length)){E=B.concat([E,Q(A,I,g)]);break}C=A._cache.length,E=B.concat([E,Q(A,I.slice(0,C),g)]),I=I.slice(C)}return E}},function(A,I,g){var B=g(1).Buffer;function C(A,I,g){var C=A._cipher.encryptBlock(A._prev)[0]^I;return A._prev=B.concat([A._prev.slice(1),B.from([g?I:C])]),C}I.encrypt=function(A,I,g){for(var Q=I.length,E=B.allocUnsafe(Q),i=-1;++i<Q;)E[i]=C(A,I[i],g);return E}},function(A,I,g){var B=g(1).Buffer;function C(A,I,g){for(var B,C,E=-1,i=0;++E<8;)B=I&1<<7-E?128:0,i+=(128&(C=A._cipher.encryptBlock(A._prev)[0]^B))>>E%8,A._prev=Q(A._prev,g?B:C);return i}function Q(A,I){var g=A.length,C=-1,Q=B.allocUnsafe(A.length);for(A=B.concat([A,B.from([I])]);++C<g;)Q[C]=A[C]<<1|A[C+1]>>7;return Q}I.encrypt=function(A,I,g){for(var Q=I.length,E=B.allocUnsafe(Q),i=-1;++i<Q;)E[i]=C(A,I[i],g);return E}},function(A,I,g){(function(A){var B=g(23);function C(A){return A._prev=A._cipher.encryptBlock(A._prev),A._prev}I.encrypt=function(I,g){for(;I._cache.length<g.length;)I._cache=A.concat([I._cache,C(I)]);var Q=I._cache.slice(0,g.length);return I._cache=I._cache.slice(g.length),B(g,Q)}}).call(this,g(4).Buffer)},function(A,I,g){var B=g(1).Buffer,C=B.alloc(16,0);function Q(A){var I=B.allocUnsafe(16);return I.writeUInt32BE(A[0]>>>0,0),I.writeUInt32BE(A[1]>>>0,4),I.writeUInt32BE(A[2]>>>0,8),I.writeUInt32BE(A[3]>>>0,12),I}function E(A){this.h=A,this.state=B.alloc(16,0),this.cache=B.allocUnsafe(0)}E.prototype.ghash=function(A){for(var I=-1;++I<A.length;)this.state[I]^=A[I];this._multiply()},E.prototype._multiply=function(){for(var A,I,g,B=[(A=this.h).readUInt32BE(0),A.readUInt32BE(4),A.readUInt32BE(8),A.readUInt32BE(12)],C=[0,0,0,0],E=-1;++E<128;){for(0!=(this.state[~~(E/8)]&1<<7-E%8)&&(C[0]^=B[0],C[1]^=B[1],C[2]^=B[2],C[3]^=B[3]),g=0!=(1&B[3]),I=3;I>0;I--)B[I]=B[I]>>>1|(1&B[I-1])<<31;B[0]=B[0]>>>1,g&&(B[0]=B[0]^225<<24)}this.state=Q(C)},E.prototype.update=function(A){var I;for(this.cache=B.concat([this.cache,A]);this.cache.length>=16;)I=this.cache.slice(0,16),this.cache=this.cache.slice(16),this.ghash(I)},E.prototype.final=function(A,I){return this.cache.length&&this.ghash(B.concat([this.cache,C],16)),this.ghash(Q([0,A,0,I])),this.state},A.exports=E},function(A,I,g){var B=g(69),C=g(1).Buffer,Q=g(42),E=g(70),i=g(14),o=g(28),t=g(29);function e(A,I,g){i.call(this),this._cache=new a,this._last=void 0,this._cipher=new o.AES(I),this._prev=C.from(g),this._mode=A,this._autopadding=!0}function a(){this.cache=C.allocUnsafe(0)}function r(A,I,g){var i=Q[A.toLowerCase()];if(!i)throw new TypeError("invalid suite type");if("string"==typeof g&&(g=C.from(g)),"GCM"!==i.mode&&g.length!==i.iv)throw new TypeError("invalid iv length "+g.length);if("string"==typeof I&&(I=C.from(I)),I.length!==i.key/8)throw new TypeError("invalid key length "+I.length);return"stream"===i.type?new E(i.module,I,g,!0):"auth"===i.type?new B(i.module,I,g,!0):new e(i.module,I,g)}g(0)(e,i),e.prototype._update=function(A){var I,g;this._cache.add(A);for(var B=[];I=this._cache.get(this._autopadding);)g=this._mode.decrypt(this,I),B.push(g);return C.concat(B)},e.prototype._final=function(){var A=this._cache.flush();if(this._autopadding)return function(A){var I=A[15];if(I<1||I>16)throw new Error("unable to decrypt data");var g=-1;for(;++g<I;)if(A[g+(16-I)]!==I)throw new Error("unable to decrypt data");if(16===I)return;return A.slice(0,16-I)}(this._mode.decrypt(this,A));if(A)throw new Error("data not multiple of block length")},e.prototype.setAutoPadding=function(A){return this._autopadding=!!A,this},a.prototype.add=function(A){this.cache=C.concat([this.cache,A])},a.prototype.get=function(A){var I;if(A){if(this.cache.length>16)return I=this.cache.slice(0,16),this.cache=this.cache.slice(16),I}else if(this.cache.length>=16)return I=this.cache.slice(0,16),this.cache=this.cache.slice(16),I;return null},a.prototype.flush=function(){if(this.cache.length)return this.cache},I.createDecipher=function(A,I){var g=Q[A.toLowerCase()];if(!g)throw new TypeError("invalid suite type");var B=t(I,!1,g.key,g.iv);return r(A,B.key,B.iv)},I.createDecipheriv=r},function(A,I){I["des-ecb"]={key:8,iv:0},I["des-cbc"]=I.des={key:8,iv:8},I["des-ede3-cbc"]=I.des3={key:24,iv:8},I["des-ede3"]={key:24,iv:0},I["des-ede-cbc"]={key:16,iv:8},I["des-ede"]={key:16,iv:0}},function(A,I,g){(function(A){var B=g(71),C=g(140),Q=g(141);var E={binary:!0,hex:!0,base64:!0};I.DiffieHellmanGroup=I.createDiffieHellmanGroup=I.getDiffieHellman=function(I){var g=new A(C[I].prime,"hex"),B=new A(C[I].gen,"hex");return new Q(g,B)},I.createDiffieHellman=I.DiffieHellman=function I(g,C,i,o){return A.isBuffer(C)||void 0===E[C]?I(g,"binary",C,i):(C=C||"binary",o=o||"binary",i=i||new A([2]),A.isBuffer(i)||(i=new A(i,o)),"number"==typeof g?new Q(B(g,i),i,!0):(A.isBuffer(g)||(g=new A(g,C)),new Q(g,i,!0)))}}).call(this,g(4).Buffer)},function(A,I){A.exports=function(A){return A.webpackPolyfill||(A.deprecate=function(){},A.paths=[],A.children||(A.children=[]),Object.defineProperty(A,"loaded",{enumerable:!0,get:function(){return A.l}}),Object.defineProperty(A,"id",{enumerable:!0,get:function(){return A.i}}),A.webpackPolyfill=1),A}},function(A,I){},function(A,I){},function(A){A.exports=JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}')},function(A,I,g){(function(I){var B=g(3),C=new(g(72)),Q=new B(24),E=new B(11),i=new B(10),o=new B(3),t=new B(7),e=g(71),a=g(18);function r(A,g){return g=g||"utf8",I.isBuffer(A)||(A=new I(A,g)),this._pub=new B(A),this}function n(A,g){return g=g||"utf8",I.isBuffer(A)||(A=new I(A,g)),this._priv=new B(A),this}A.exports=h;var s={};function h(A,I,g){this.setGenerator(I),this.__prime=new B(A),this._prime=B.mont(this.__prime),this._primeLen=A.length,this._pub=void 0,this._priv=void 0,this._primeCode=void 0,g?(this.setPublicKey=r,this.setPrivateKey=n):this._primeCode=8}function D(A,g){var B=new I(A.toArray());return g?B.toString(g):B}Object.defineProperty(h.prototype,"verifyError",{enumerable:!0,get:function(){return"number"!=typeof this._primeCode&&(this._primeCode=function(A,I){var g=I.toString("hex"),B=[g,A.toString(16)].join("_");if(B in s)return s[B];var a,r=0;if(A.isEven()||!e.simpleSieve||!e.fermatTest(A)||!C.test(A))return r+=1,r+="02"===g||"05"===g?8:4,s[B]=r,r;switch(C.test(A.shrn(1))||(r+=2),g){case"02":A.mod(Q).cmp(E)&&(r+=8);break;case"05":(a=A.mod(i)).cmp(o)&&a.cmp(t)&&(r+=8);break;default:r+=4}return s[B]=r,r}(this.__prime,this.__gen)),this._primeCode}}),h.prototype.generateKeys=function(){return this._priv||(this._priv=new B(a(this._primeLen))),this._pub=this._gen.toRed(this._prime).redPow(this._priv).fromRed(),this.getPublicKey()},h.prototype.computeSecret=function(A){var g=(A=(A=new B(A)).toRed(this._prime)).redPow(this._priv).fromRed(),C=new I(g.toArray()),Q=this.getPrime();if(C.length<Q.length){var E=new I(Q.length-C.length);E.fill(0),C=I.concat([E,C])}return C},h.prototype.getPublicKey=function(A){return D(this._pub,A)},h.prototype.getPrivateKey=function(A){return D(this._priv,A)},h.prototype.getPrime=function(A){return D(this.__prime,A)},h.prototype.getGenerator=function(A){return D(this._gen,A)},h.prototype.setGenerator=function(A,g){return g=g||"utf8",I.isBuffer(A)||(A=new I(A,g)),this.__gen=A,this._gen=new B(A),this}}).call(this,g(4).Buffer)},function(A,I,g){(function(I){var B=g(21),C=g(33),Q=g(0),E=g(143),i=g(175),o=g(59);function t(A){C.Writable.call(this);var I=o[A];if(!I)throw new Error("Unknown message digest");this._hashType=I.hash,this._hash=B(I.hash),this._tag=I.id,this._signType=I.sign}function e(A){C.Writable.call(this);var I=o[A];if(!I)throw new Error("Unknown message digest");this._hash=B(I.hash),this._tag=I.id,this._signType=I.sign}function a(A){return new t(A)}function r(A){return new e(A)}Object.keys(o).forEach((function(A){o[A].id=new I(o[A].id,"hex"),o[A.toLowerCase()]=o[A]})),Q(t,C.Writable),t.prototype._write=function(A,I,g){this._hash.update(A),g()},t.prototype.update=function(A,g){return"string"==typeof A&&(A=new I(A,g)),this._hash.update(A),this},t.prototype.sign=function(A,I){this.end();var g=this._hash.digest(),B=E(g,A,this._hashType,this._signType,this._tag);return I?B.toString(I):B},Q(e,C.Writable),e.prototype._write=function(A,I,g){this._hash.update(A),g()},e.prototype.update=function(A,g){return"string"==typeof A&&(A=new I(A,g)),this._hash.update(A),this},e.prototype.verify=function(A,g,B){"string"==typeof g&&(g=new I(g,B)),this.end();var C=this._hash.digest();return i(g,C,A,this._signType,this._tag)},A.exports={Sign:a,Verify:r,createSign:a,createVerify:r}}).call(this,g(4).Buffer)},function(A,I,g){(function(I){var B=g(57),C=g(44),Q=g(45).ec,E=g(3),i=g(31),o=g(82);function t(A,g,C,Q){if((A=new I(A.toArray())).length<g.byteLength()){var E=new I(g.byteLength()-A.length);E.fill(0),A=I.concat([E,A])}var i=C.length,o=function(A,g){A=(A=e(A,g)).mod(g);var B=new I(A.toArray());if(B.length<g.byteLength()){var C=new I(g.byteLength()-B.length);C.fill(0),B=I.concat([C,B])}return B}(C,g),t=new I(i);t.fill(1);var a=new I(i);return a.fill(0),a=B(Q,a).update(t).update(new I([0])).update(A).update(o).digest(),t=B(Q,a).update(t).digest(),{k:a=B(Q,a).update(t).update(new I([1])).update(A).update(o).digest(),v:t=B(Q,a).update(t).digest()}}function e(A,I){var g=new E(A),B=(A.length<<3)-I.bitLength();return B>0&&g.ishrn(B),g}function a(A,g,C){var Q,E;do{for(Q=new I(0);8*Q.length<A.bitLength();)g.v=B(C,g.k).update(g.v).digest(),Q=I.concat([Q,g.v]);E=e(Q,A),g.k=B(C,g.k).update(g.v).update(new I([0])).digest(),g.v=B(C,g.k).update(g.v).digest()}while(-1!==E.cmp(A));return E}function r(A,I,g,B){return A.toRed(E.mont(g)).redPow(I).fromRed().mod(B)}A.exports=function(A,g,B,n,s){var h=i(g);if(h.curve){if("ecdsa"!==n&&"ecdsa/rsa"!==n)throw new Error("wrong private key type");return function(A,g){var B=o[g.curve.join(".")];if(!B)throw new Error("unknown curve "+g.curve.join("."));var C=new Q(B).keyFromPrivate(g.privateKey).sign(A);return new I(C.toDER())}(A,h)}if("dsa"===h.type){if("dsa"!==n)throw new Error("wrong private key type");return function(A,g,B){var C,Q=g.params.priv_key,i=g.params.p,o=g.params.q,n=g.params.g,s=new E(0),h=e(A,o).mod(o),D=!1,c=t(Q,o,A,B);for(;!1===D;)C=a(o,c,B),s=r(n,C,i,o),0===(D=C.invm(o).imul(h.add(Q.mul(s))).mod(o)).cmpn(0)&&(D=!1,s=new E(0));return function(A,g){A=A.toArray(),g=g.toArray(),128&A[0]&&(A=[0].concat(A));128&g[0]&&(g=[0].concat(g));var B=[48,A.length+g.length+4,2,A.length];return B=B.concat(A,[2,g.length],g),new I(B)}(s,D)}(A,h,B)}if("rsa"!==n&&"ecdsa/rsa"!==n)throw new Error("wrong private key type");A=I.concat([s,A]);for(var D=h.modulus.byteLength(),c=[0,1];A.length+c.length+1<D;)c.push(255);c.push(0);for(var w=-1;++w<A.length;)c.push(A[w]);return C(c,h)},A.exports.getKey=t,A.exports.makeKey=a}).call(this,g(4).Buffer)},function(A){A.exports=JSON.parse('{"_args":[["elliptic@6.5.2","/home/michael/own/artoolkit5-js"]],"_development":true,"_from":"elliptic@6.5.2","_id":"elliptic@6.5.2","_inBundle":false,"_integrity":"sha512-f4x70okzZbIQl/NSRLkI/+tteV/9WqL98zx+SQ69KbXxmVrmjwsNUPn/gYJJ0sHvEak24cZgHIPegRePAtA/xw==","_location":"/elliptic","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"elliptic@6.5.2","name":"elliptic","escapedName":"elliptic","rawSpec":"6.5.2","saveSpec":null,"fetchSpec":"6.5.2"},"_requiredBy":["/browserify-sign","/create-ecdh"],"_resolved":"https://registry.npmjs.org/elliptic/-/elliptic-6.5.2.tgz","_spec":"6.5.2","_where":"/home/michael/own/artoolkit5-js","author":{"name":"Fedor Indutny","email":"fedor@indutny.com"},"bugs":{"url":"https://github.com/indutny/elliptic/issues"},"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},"description":"EC cryptography","devDependencies":{"brfs":"^1.4.3","coveralls":"^3.0.8","grunt":"^1.0.4","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.2","jscs":"^3.0.7","jshint":"^2.10.3","mocha":"^6.2.2"},"files":["lib"],"homepage":"https://github.com/indutny/elliptic","keywords":["EC","Elliptic","curve","Cryptography"],"license":"MIT","main":"lib/elliptic.js","name":"elliptic","repository":{"type":"git","url":"git+ssh://git@github.com/indutny/elliptic.git"},"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","test":"npm run lint && npm run unit","unit":"istanbul test _mocha --reporter=spec test/index.js","version":"grunt dist && git add dist/"},"version":"6.5.2"}')},function(A,I,g){"use strict";var B=g(8),C=g(3),Q=g(0),E=g(30),i=B.assert;function o(A){E.call(this,"short",A),this.a=new C(A.a,16).toRed(this.red),this.b=new C(A.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(A),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function t(A,I,g,B){E.BasePoint.call(this,A,"affine"),null===I&&null===g?(this.x=null,this.y=null,this.inf=!0):(this.x=new C(I,16),this.y=new C(g,16),B&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function e(A,I,g,B){E.BasePoint.call(this,A,"jacobian"),null===I&&null===g&&null===B?(this.x=this.curve.one,this.y=this.curve.one,this.z=new C(0)):(this.x=new C(I,16),this.y=new C(g,16),this.z=new C(B,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}Q(o,E),A.exports=o,o.prototype._getEndomorphism=function(A){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var I,g;if(A.beta)I=new C(A.beta,16).toRed(this.red);else{var B=this._getEndoRoots(this.p);I=(I=B[0].cmp(B[1])<0?B[0]:B[1]).toRed(this.red)}if(A.lambda)g=new C(A.lambda,16);else{var Q=this._getEndoRoots(this.n);0===this.g.mul(Q[0]).x.cmp(this.g.x.redMul(I))?g=Q[0]:(g=Q[1],i(0===this.g.mul(g).x.cmp(this.g.x.redMul(I))))}return{beta:I,lambda:g,basis:A.basis?A.basis.map((function(A){return{a:new C(A.a,16),b:new C(A.b,16)}})):this._getEndoBasis(g)}}},o.prototype._getEndoRoots=function(A){var I=A===this.p?this.red:C.mont(A),g=new C(2).toRed(I).redInvm(),B=g.redNeg(),Q=new C(3).toRed(I).redNeg().redSqrt().redMul(g);return[B.redAdd(Q).fromRed(),B.redSub(Q).fromRed()]},o.prototype._getEndoBasis=function(A){for(var I,g,B,Q,E,i,o,t,e,a=this.n.ushrn(Math.floor(this.n.bitLength()/2)),r=A,n=this.n.clone(),s=new C(1),h=new C(0),D=new C(0),c=new C(1),w=0;0!==r.cmpn(0);){var f=n.div(r);t=n.sub(f.mul(r)),e=D.sub(f.mul(s));var d=c.sub(f.mul(h));if(!B&&t.cmp(a)<0)I=o.neg(),g=s,B=t.neg(),Q=e;else if(B&&2==++w)break;o=t,n=r,r=t,D=s,s=e,c=h,h=d}E=t.neg(),i=e;var F=B.sqr().add(Q.sqr());return E.sqr().add(i.sqr()).cmp(F)>=0&&(E=I,i=g),B.negative&&(B=B.neg(),Q=Q.neg()),E.negative&&(E=E.neg(),i=i.neg()),[{a:B,b:Q},{a:E,b:i}]},o.prototype._endoSplit=function(A){var I=this.endo.basis,g=I[0],B=I[1],C=B.b.mul(A).divRound(this.n),Q=g.b.neg().mul(A).divRound(this.n),E=C.mul(g.a),i=Q.mul(B.a),o=C.mul(g.b),t=Q.mul(B.b);return{k1:A.sub(E).sub(i),k2:o.add(t).neg()}},o.prototype.pointFromX=function(A,I){(A=new C(A,16)).red||(A=A.toRed(this.red));var g=A.redSqr().redMul(A).redIAdd(A.redMul(this.a)).redIAdd(this.b),B=g.redSqrt();if(0!==B.redSqr().redSub(g).cmp(this.zero))throw new Error("invalid point");var Q=B.fromRed().isOdd();return(I&&!Q||!I&&Q)&&(B=B.redNeg()),this.point(A,B)},o.prototype.validate=function(A){if(A.inf)return!0;var I=A.x,g=A.y,B=this.a.redMul(I),C=I.redSqr().redMul(I).redIAdd(B).redIAdd(this.b);return 0===g.redSqr().redISub(C).cmpn(0)},o.prototype._endoWnafMulAdd=function(A,I,g){for(var B=this._endoWnafT1,C=this._endoWnafT2,Q=0;Q<A.length;Q++){var E=this._endoSplit(I[Q]),i=A[Q],o=i._getBeta();E.k1.negative&&(E.k1.ineg(),i=i.neg(!0)),E.k2.negative&&(E.k2.ineg(),o=o.neg(!0)),B[2*Q]=i,B[2*Q+1]=o,C[2*Q]=E.k1,C[2*Q+1]=E.k2}for(var t=this._wnafMulAdd(1,B,C,2*Q,g),e=0;e<2*Q;e++)B[e]=null,C[e]=null;return t},Q(t,E.BasePoint),o.prototype.point=function(A,I,g){return new t(this,A,I,g)},o.prototype.pointFromJSON=function(A,I){return t.fromJSON(this,A,I)},t.prototype._getBeta=function(){if(this.curve.endo){var A=this.precomputed;if(A&&A.beta)return A.beta;var I=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(A){var g=this.curve,B=function(A){return g.point(A.x.redMul(g.endo.beta),A.y)};A.beta=I,I.precomputed={beta:null,naf:A.naf&&{wnd:A.naf.wnd,points:A.naf.points.map(B)},doubles:A.doubles&&{step:A.doubles.step,points:A.doubles.points.map(B)}}}return I}},t.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},t.fromJSON=function(A,I,g){"string"==typeof I&&(I=JSON.parse(I));var B=A.point(I[0],I[1],g);if(!I[2])return B;function C(I){return A.point(I[0],I[1],g)}var Q=I[2];return B.precomputed={beta:null,doubles:Q.doubles&&{step:Q.doubles.step,points:[B].concat(Q.doubles.points.map(C))},naf:Q.naf&&{wnd:Q.naf.wnd,points:[B].concat(Q.naf.points.map(C))}},B},t.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},t.prototype.isInfinity=function(){return this.inf},t.prototype.add=function(A){if(this.inf)return A;if(A.inf)return this;if(this.eq(A))return this.dbl();if(this.neg().eq(A))return this.curve.point(null,null);if(0===this.x.cmp(A.x))return this.curve.point(null,null);var I=this.y.redSub(A.y);0!==I.cmpn(0)&&(I=I.redMul(this.x.redSub(A.x).redInvm()));var g=I.redSqr().redISub(this.x).redISub(A.x),B=I.redMul(this.x.redSub(g)).redISub(this.y);return this.curve.point(g,B)},t.prototype.dbl=function(){if(this.inf)return this;var A=this.y.redAdd(this.y);if(0===A.cmpn(0))return this.curve.point(null,null);var I=this.curve.a,g=this.x.redSqr(),B=A.redInvm(),C=g.redAdd(g).redIAdd(g).redIAdd(I).redMul(B),Q=C.redSqr().redISub(this.x.redAdd(this.x)),E=C.redMul(this.x.redSub(Q)).redISub(this.y);return this.curve.point(Q,E)},t.prototype.getX=function(){return this.x.fromRed()},t.prototype.getY=function(){return this.y.fromRed()},t.prototype.mul=function(A){return A=new C(A,16),this.isInfinity()?this:this._hasDoubles(A)?this.curve._fixedNafMul(this,A):this.curve.endo?this.curve._endoWnafMulAdd([this],[A]):this.curve._wnafMul(this,A)},t.prototype.mulAdd=function(A,I,g){var B=[this,I],C=[A,g];return this.curve.endo?this.curve._endoWnafMulAdd(B,C):this.curve._wnafMulAdd(1,B,C,2)},t.prototype.jmulAdd=function(A,I,g){var B=[this,I],C=[A,g];return this.curve.endo?this.curve._endoWnafMulAdd(B,C,!0):this.curve._wnafMulAdd(1,B,C,2,!0)},t.prototype.eq=function(A){return this===A||this.inf===A.inf&&(this.inf||0===this.x.cmp(A.x)&&0===this.y.cmp(A.y))},t.prototype.neg=function(A){if(this.inf)return this;var I=this.curve.point(this.x,this.y.redNeg());if(A&&this.precomputed){var g=this.precomputed,B=function(A){return A.neg()};I.precomputed={naf:g.naf&&{wnd:g.naf.wnd,points:g.naf.points.map(B)},doubles:g.doubles&&{step:g.doubles.step,points:g.doubles.points.map(B)}}}return I},t.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},Q(e,E.BasePoint),o.prototype.jpoint=function(A,I,g){return new e(this,A,I,g)},e.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var A=this.z.redInvm(),I=A.redSqr(),g=this.x.redMul(I),B=this.y.redMul(I).redMul(A);return this.curve.point(g,B)},e.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},e.prototype.add=function(A){if(this.isInfinity())return A;if(A.isInfinity())return this;var I=A.z.redSqr(),g=this.z.redSqr(),B=this.x.redMul(I),C=A.x.redMul(g),Q=this.y.redMul(I.redMul(A.z)),E=A.y.redMul(g.redMul(this.z)),i=B.redSub(C),o=Q.redSub(E);if(0===i.cmpn(0))return 0!==o.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var t=i.redSqr(),e=t.redMul(i),a=B.redMul(t),r=o.redSqr().redIAdd(e).redISub(a).redISub(a),n=o.redMul(a.redISub(r)).redISub(Q.redMul(e)),s=this.z.redMul(A.z).redMul(i);return this.curve.jpoint(r,n,s)},e.prototype.mixedAdd=function(A){if(this.isInfinity())return A.toJ();if(A.isInfinity())return this;var I=this.z.redSqr(),g=this.x,B=A.x.redMul(I),C=this.y,Q=A.y.redMul(I).redMul(this.z),E=g.redSub(B),i=C.redSub(Q);if(0===E.cmpn(0))return 0!==i.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var o=E.redSqr(),t=o.redMul(E),e=g.redMul(o),a=i.redSqr().redIAdd(t).redISub(e).redISub(e),r=i.redMul(e.redISub(a)).redISub(C.redMul(t)),n=this.z.redMul(E);return this.curve.jpoint(a,r,n)},e.prototype.dblp=function(A){if(0===A)return this;if(this.isInfinity())return this;if(!A)return this.dbl();if(this.curve.zeroA||this.curve.threeA){for(var I=this,g=0;g<A;g++)I=I.dbl();return I}var B=this.curve.a,C=this.curve.tinv,Q=this.x,E=this.y,i=this.z,o=i.redSqr().redSqr(),t=E.redAdd(E);for(g=0;g<A;g++){var e=Q.redSqr(),a=t.redSqr(),r=a.redSqr(),n=e.redAdd(e).redIAdd(e).redIAdd(B.redMul(o)),s=Q.redMul(a),h=n.redSqr().redISub(s.redAdd(s)),D=s.redISub(h),c=n.redMul(D);c=c.redIAdd(c).redISub(r);var w=t.redMul(i);g+1<A&&(o=o.redMul(r)),Q=h,i=w,t=c}return this.curve.jpoint(Q,t.redMul(C),i)},e.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},e.prototype._zeroDbl=function(){var A,I,g;if(this.zOne){var B=this.x.redSqr(),C=this.y.redSqr(),Q=C.redSqr(),E=this.x.redAdd(C).redSqr().redISub(B).redISub(Q);E=E.redIAdd(E);var i=B.redAdd(B).redIAdd(B),o=i.redSqr().redISub(E).redISub(E),t=Q.redIAdd(Q);t=(t=t.redIAdd(t)).redIAdd(t),A=o,I=i.redMul(E.redISub(o)).redISub(t),g=this.y.redAdd(this.y)}else{var e=this.x.redSqr(),a=this.y.redSqr(),r=a.redSqr(),n=this.x.redAdd(a).redSqr().redISub(e).redISub(r);n=n.redIAdd(n);var s=e.redAdd(e).redIAdd(e),h=s.redSqr(),D=r.redIAdd(r);D=(D=D.redIAdd(D)).redIAdd(D),A=h.redISub(n).redISub(n),I=s.redMul(n.redISub(A)).redISub(D),g=(g=this.y.redMul(this.z)).redIAdd(g)}return this.curve.jpoint(A,I,g)},e.prototype._threeDbl=function(){var A,I,g;if(this.zOne){var B=this.x.redSqr(),C=this.y.redSqr(),Q=C.redSqr(),E=this.x.redAdd(C).redSqr().redISub(B).redISub(Q);E=E.redIAdd(E);var i=B.redAdd(B).redIAdd(B).redIAdd(this.curve.a),o=i.redSqr().redISub(E).redISub(E);A=o;var t=Q.redIAdd(Q);t=(t=t.redIAdd(t)).redIAdd(t),I=i.redMul(E.redISub(o)).redISub(t),g=this.y.redAdd(this.y)}else{var e=this.z.redSqr(),a=this.y.redSqr(),r=this.x.redMul(a),n=this.x.redSub(e).redMul(this.x.redAdd(e));n=n.redAdd(n).redIAdd(n);var s=r.redIAdd(r),h=(s=s.redIAdd(s)).redAdd(s);A=n.redSqr().redISub(h),g=this.y.redAdd(this.z).redSqr().redISub(a).redISub(e);var D=a.redSqr();D=(D=(D=D.redIAdd(D)).redIAdd(D)).redIAdd(D),I=n.redMul(s.redISub(A)).redISub(D)}return this.curve.jpoint(A,I,g)},e.prototype._dbl=function(){var A=this.curve.a,I=this.x,g=this.y,B=this.z,C=B.redSqr().redSqr(),Q=I.redSqr(),E=g.redSqr(),i=Q.redAdd(Q).redIAdd(Q).redIAdd(A.redMul(C)),o=I.redAdd(I),t=(o=o.redIAdd(o)).redMul(E),e=i.redSqr().redISub(t.redAdd(t)),a=t.redISub(e),r=E.redSqr();r=(r=(r=r.redIAdd(r)).redIAdd(r)).redIAdd(r);var n=i.redMul(a).redISub(r),s=g.redAdd(g).redMul(B);return this.curve.jpoint(e,n,s)},e.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var A=this.x.redSqr(),I=this.y.redSqr(),g=this.z.redSqr(),B=I.redSqr(),C=A.redAdd(A).redIAdd(A),Q=C.redSqr(),E=this.x.redAdd(I).redSqr().redISub(A).redISub(B),i=(E=(E=(E=E.redIAdd(E)).redAdd(E).redIAdd(E)).redISub(Q)).redSqr(),o=B.redIAdd(B);o=(o=(o=o.redIAdd(o)).redIAdd(o)).redIAdd(o);var t=C.redIAdd(E).redSqr().redISub(Q).redISub(i).redISub(o),e=I.redMul(t);e=(e=e.redIAdd(e)).redIAdd(e);var a=this.x.redMul(i).redISub(e);a=(a=a.redIAdd(a)).redIAdd(a);var r=this.y.redMul(t.redMul(o.redISub(t)).redISub(E.redMul(i)));r=(r=(r=r.redIAdd(r)).redIAdd(r)).redIAdd(r);var n=this.z.redAdd(E).redSqr().redISub(g).redISub(i);return this.curve.jpoint(a,r,n)},e.prototype.mul=function(A,I){return A=new C(A,I),this.curve._wnafMul(this,A)},e.prototype.eq=function(A){if("affine"===A.type)return this.eq(A.toJ());if(this===A)return!0;var I=this.z.redSqr(),g=A.z.redSqr();if(0!==this.x.redMul(g).redISub(A.x.redMul(I)).cmpn(0))return!1;var B=I.redMul(this.z),C=g.redMul(A.z);return 0===this.y.redMul(C).redISub(A.y.redMul(B)).cmpn(0)},e.prototype.eqXToP=function(A){var I=this.z.redSqr(),g=A.toRed(this.curve.red).redMul(I);if(0===this.x.cmp(g))return!0;for(var B=A.clone(),C=this.curve.redN.redMul(I);;){if(B.iadd(this.curve.n),B.cmp(this.curve.p)>=0)return!1;if(g.redIAdd(C),0===this.x.cmp(g))return!0}},e.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},e.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},function(A,I,g){"use strict";var B=g(3),C=g(0),Q=g(30),E=g(8);function i(A){Q.call(this,"mont",A),this.a=new B(A.a,16).toRed(this.red),this.b=new B(A.b,16).toRed(this.red),this.i4=new B(4).toRed(this.red).redInvm(),this.two=new B(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function o(A,I,g){Q.BasePoint.call(this,A,"projective"),null===I&&null===g?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new B(I,16),this.z=new B(g,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}C(i,Q),A.exports=i,i.prototype.validate=function(A){var I=A.normalize().x,g=I.redSqr(),B=g.redMul(I).redAdd(g.redMul(this.a)).redAdd(I);return 0===B.redSqrt().redSqr().cmp(B)},C(o,Q.BasePoint),i.prototype.decodePoint=function(A,I){return this.point(E.toArray(A,I),1)},i.prototype.point=function(A,I){return new o(this,A,I)},i.prototype.pointFromJSON=function(A){return o.fromJSON(this,A)},o.prototype.precompute=function(){},o.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},o.fromJSON=function(A,I){return new o(A,I[0],I[1]||A.one)},o.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},o.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},o.prototype.dbl=function(){var A=this.x.redAdd(this.z).redSqr(),I=this.x.redSub(this.z).redSqr(),g=A.redSub(I),B=A.redMul(I),C=g.redMul(I.redAdd(this.curve.a24.redMul(g)));return this.curve.point(B,C)},o.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},o.prototype.diffAdd=function(A,I){var g=this.x.redAdd(this.z),B=this.x.redSub(this.z),C=A.x.redAdd(A.z),Q=A.x.redSub(A.z).redMul(g),E=C.redMul(B),i=I.z.redMul(Q.redAdd(E).redSqr()),o=I.x.redMul(Q.redISub(E).redSqr());return this.curve.point(i,o)},o.prototype.mul=function(A){for(var I=A.clone(),g=this,B=this.curve.point(null,null),C=[];0!==I.cmpn(0);I.iushrn(1))C.push(I.andln(1));for(var Q=C.length-1;Q>=0;Q--)0===C[Q]?(g=g.diffAdd(B,this),B=B.dbl()):(B=g.diffAdd(B,this),g=g.dbl());return B},o.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},o.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},o.prototype.eq=function(A){return 0===this.getX().cmp(A.getX())},o.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},o.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},function(A,I,g){"use strict";var B=g(8),C=g(3),Q=g(0),E=g(30),i=B.assert;function o(A){this.twisted=1!=(0|A.a),this.mOneA=this.twisted&&-1==(0|A.a),this.extended=this.mOneA,E.call(this,"edwards",A),this.a=new C(A.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new C(A.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new C(A.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),i(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|A.c)}function t(A,I,g,B,Q){E.BasePoint.call(this,A,"projective"),null===I&&null===g&&null===B?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new C(I,16),this.y=new C(g,16),this.z=B?new C(B,16):this.curve.one,this.t=Q&&new C(Q,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}Q(o,E),A.exports=o,o.prototype._mulA=function(A){return this.mOneA?A.redNeg():this.a.redMul(A)},o.prototype._mulC=function(A){return this.oneC?A:this.c.redMul(A)},o.prototype.jpoint=function(A,I,g,B){return this.point(A,I,g,B)},o.prototype.pointFromX=function(A,I){(A=new C(A,16)).red||(A=A.toRed(this.red));var g=A.redSqr(),B=this.c2.redSub(this.a.redMul(g)),Q=this.one.redSub(this.c2.redMul(this.d).redMul(g)),E=B.redMul(Q.redInvm()),i=E.redSqrt();if(0!==i.redSqr().redSub(E).cmp(this.zero))throw new Error("invalid point");var o=i.fromRed().isOdd();return(I&&!o||!I&&o)&&(i=i.redNeg()),this.point(A,i)},o.prototype.pointFromY=function(A,I){(A=new C(A,16)).red||(A=A.toRed(this.red));var g=A.redSqr(),B=g.redSub(this.c2),Q=g.redMul(this.d).redMul(this.c2).redSub(this.a),E=B.redMul(Q.redInvm());if(0===E.cmp(this.zero)){if(I)throw new Error("invalid point");return this.point(this.zero,A)}var i=E.redSqrt();if(0!==i.redSqr().redSub(E).cmp(this.zero))throw new Error("invalid point");return i.fromRed().isOdd()!==I&&(i=i.redNeg()),this.point(i,A)},o.prototype.validate=function(A){if(A.isInfinity())return!0;A.normalize();var I=A.x.redSqr(),g=A.y.redSqr(),B=I.redMul(this.a).redAdd(g),C=this.c2.redMul(this.one.redAdd(this.d.redMul(I).redMul(g)));return 0===B.cmp(C)},Q(t,E.BasePoint),o.prototype.pointFromJSON=function(A){return t.fromJSON(this,A)},o.prototype.point=function(A,I,g,B){return new t(this,A,I,g,B)},t.fromJSON=function(A,I){return new t(A,I[0],I[1],I[2])},t.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},t.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},t.prototype._extDbl=function(){var A=this.x.redSqr(),I=this.y.redSqr(),g=this.z.redSqr();g=g.redIAdd(g);var B=this.curve._mulA(A),C=this.x.redAdd(this.y).redSqr().redISub(A).redISub(I),Q=B.redAdd(I),E=Q.redSub(g),i=B.redSub(I),o=C.redMul(E),t=Q.redMul(i),e=C.redMul(i),a=E.redMul(Q);return this.curve.point(o,t,a,e)},t.prototype._projDbl=function(){var A,I,g,B=this.x.redAdd(this.y).redSqr(),C=this.x.redSqr(),Q=this.y.redSqr();if(this.curve.twisted){var E=(t=this.curve._mulA(C)).redAdd(Q);if(this.zOne)A=B.redSub(C).redSub(Q).redMul(E.redSub(this.curve.two)),I=E.redMul(t.redSub(Q)),g=E.redSqr().redSub(E).redSub(E);else{var i=this.z.redSqr(),o=E.redSub(i).redISub(i);A=B.redSub(C).redISub(Q).redMul(o),I=E.redMul(t.redSub(Q)),g=E.redMul(o)}}else{var t=C.redAdd(Q);i=this.curve._mulC(this.z).redSqr(),o=t.redSub(i).redSub(i);A=this.curve._mulC(B.redISub(t)).redMul(o),I=this.curve._mulC(t).redMul(C.redISub(Q)),g=t.redMul(o)}return this.curve.point(A,I,g)},t.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},t.prototype._extAdd=function(A){var I=this.y.redSub(this.x).redMul(A.y.redSub(A.x)),g=this.y.redAdd(this.x).redMul(A.y.redAdd(A.x)),B=this.t.redMul(this.curve.dd).redMul(A.t),C=this.z.redMul(A.z.redAdd(A.z)),Q=g.redSub(I),E=C.redSub(B),i=C.redAdd(B),o=g.redAdd(I),t=Q.redMul(E),e=i.redMul(o),a=Q.redMul(o),r=E.redMul(i);return this.curve.point(t,e,r,a)},t.prototype._projAdd=function(A){var I,g,B=this.z.redMul(A.z),C=B.redSqr(),Q=this.x.redMul(A.x),E=this.y.redMul(A.y),i=this.curve.d.redMul(Q).redMul(E),o=C.redSub(i),t=C.redAdd(i),e=this.x.redAdd(this.y).redMul(A.x.redAdd(A.y)).redISub(Q).redISub(E),a=B.redMul(o).redMul(e);return this.curve.twisted?(I=B.redMul(t).redMul(E.redSub(this.curve._mulA(Q))),g=o.redMul(t)):(I=B.redMul(t).redMul(E.redSub(Q)),g=this.curve._mulC(o).redMul(t)),this.curve.point(a,I,g)},t.prototype.add=function(A){return this.isInfinity()?A:A.isInfinity()?this:this.curve.extended?this._extAdd(A):this._projAdd(A)},t.prototype.mul=function(A){return this._hasDoubles(A)?this.curve._fixedNafMul(this,A):this.curve._wnafMul(this,A)},t.prototype.mulAdd=function(A,I,g){return this.curve._wnafMulAdd(1,[this,I],[A,g],2,!1)},t.prototype.jmulAdd=function(A,I,g){return this.curve._wnafMulAdd(1,[this,I],[A,g],2,!0)},t.prototype.normalize=function(){if(this.zOne)return this;var A=this.z.redInvm();return this.x=this.x.redMul(A),this.y=this.y.redMul(A),this.t&&(this.t=this.t.redMul(A)),this.z=this.curve.one,this.zOne=!0,this},t.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},t.prototype.getX=function(){return this.normalize(),this.x.fromRed()},t.prototype.getY=function(){return this.normalize(),this.y.fromRed()},t.prototype.eq=function(A){return this===A||0===this.getX().cmp(A.getX())&&0===this.getY().cmp(A.getY())},t.prototype.eqXToP=function(A){var I=A.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(I))return!0;for(var g=A.clone(),B=this.curve.redN.redMul(this.z);;){if(g.iadd(this.curve.n),g.cmp(this.curve.p)>=0)return!1;if(I.redIAdd(B),0===this.x.cmp(I))return!0}},t.prototype.toP=t.prototype.normalize,t.prototype.mixedAdd=t.prototype.add},function(A,I,g){"use strict";I.sha1=g(149),I.sha224=g(150),I.sha256=g(76),I.sha384=g(151),I.sha512=g(77)},function(A,I,g){"use strict";var B=g(12),C=g(24),Q=g(75),E=B.rotl32,i=B.sum32,o=B.sum32_5,t=Q.ft_1,e=C.BlockHash,a=[1518500249,1859775393,2400959708,3395469782];function r(){if(!(this instanceof r))return new r;e.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}B.inherits(r,e),A.exports=r,r.blockSize=512,r.outSize=160,r.hmacStrength=80,r.padLength=64,r.prototype._update=function(A,I){for(var g=this.W,B=0;B<16;B++)g[B]=A[I+B];for(;B<g.length;B++)g[B]=E(g[B-3]^g[B-8]^g[B-14]^g[B-16],1);var C=this.h[0],Q=this.h[1],e=this.h[2],r=this.h[3],n=this.h[4];for(B=0;B<g.length;B++){var s=~~(B/20),h=o(E(C,5),t(s,Q,e,r),n,g[B],a[s]);n=r,r=e,e=E(Q,30),Q=C,C=h}this.h[0]=i(this.h[0],C),this.h[1]=i(this.h[1],Q),this.h[2]=i(this.h[2],e),this.h[3]=i(this.h[3],r),this.h[4]=i(this.h[4],n)},r.prototype._digest=function(A){return"hex"===A?B.toHex32(this.h,"big"):B.split32(this.h,"big")}},function(A,I,g){"use strict";var B=g(12),C=g(76);function Q(){if(!(this instanceof Q))return new Q;C.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}B.inherits(Q,C),A.exports=Q,Q.blockSize=512,Q.outSize=224,Q.hmacStrength=192,Q.padLength=64,Q.prototype._digest=function(A){return"hex"===A?B.toHex32(this.h.slice(0,7),"big"):B.split32(this.h.slice(0,7),"big")}},function(A,I,g){"use strict";var B=g(12),C=g(77);function Q(){if(!(this instanceof Q))return new Q;C.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}B.inherits(Q,C),A.exports=Q,Q.blockSize=1024,Q.outSize=384,Q.hmacStrength=192,Q.padLength=128,Q.prototype._digest=function(A){return"hex"===A?B.toHex32(this.h.slice(0,12),"big"):B.split32(this.h.slice(0,12),"big")}},function(A,I,g){"use strict";var B=g(12),C=g(24),Q=B.rotl32,E=B.sum32,i=B.sum32_3,o=B.sum32_4,t=C.BlockHash;function e(){if(!(this instanceof e))return new e;t.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function a(A,I,g,B){return A<=15?I^g^B:A<=31?I&g|~I&B:A<=47?(I|~g)^B:A<=63?I&B|g&~B:I^(g|~B)}function r(A){return A<=15?0:A<=31?1518500249:A<=47?1859775393:A<=63?2400959708:2840853838}function n(A){return A<=15?1352829926:A<=31?1548603684:A<=47?1836072691:A<=63?2053994217:0}B.inherits(e,t),I.ripemd160=e,e.blockSize=512,e.outSize=160,e.hmacStrength=192,e.padLength=64,e.prototype._update=function(A,I){for(var g=this.h[0],B=this.h[1],C=this.h[2],t=this.h[3],e=this.h[4],w=g,f=B,d=C,F=t,G=e,y=0;y<80;y++){var R=E(Q(o(g,a(y,B,C,t),A[s[y]+I],r(y)),D[y]),e);g=e,e=t,t=Q(C,10),C=B,B=R,R=E(Q(o(w,a(79-y,f,d,F),A[h[y]+I],n(y)),c[y]),G),w=G,G=F,F=Q(d,10),d=f,f=R}R=i(this.h[1],C,F),this.h[1]=i(this.h[2],t,G),this.h[2]=i(this.h[3],e,w),this.h[3]=i(this.h[4],g,f),this.h[4]=i(this.h[0],B,d),this.h[0]=R},e.prototype._digest=function(A){return"hex"===A?B.toHex32(this.h,"little"):B.split32(this.h,"little")};var s=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],h=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],D=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],c=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},function(A,I,g){"use strict";var B=g(12),C=g(7);function Q(A,I,g){if(!(this instanceof Q))return new Q(A,I,g);this.Hash=A,this.blockSize=A.blockSize/8,this.outSize=A.outSize/8,this.inner=null,this.outer=null,this._init(B.toArray(I,g))}A.exports=Q,Q.prototype._init=function(A){A.length>this.blockSize&&(A=(new this.Hash).update(A).digest()),C(A.length<=this.blockSize);for(var I=A.length;I<this.blockSize;I++)A.push(0);for(I=0;I<A.length;I++)A[I]^=54;for(this.inner=(new this.Hash).update(A),I=0;I<A.length;I++)A[I]^=106;this.outer=(new this.Hash).update(A)},Q.prototype.update=function(A,I){return this.inner.update(A,I),this},Q.prototype.digest=function(A){return this.outer.update(this.inner.digest()),this.outer.digest(A)}},function(A,I){A.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},function(A,I,g){"use strict";var B=g(3),C=g(156),Q=g(8),E=g(46),i=g(43),o=Q.assert,t=g(157),e=g(158);function a(A){if(!(this instanceof a))return new a(A);"string"==typeof A&&(o(E.hasOwnProperty(A),"Unknown curve "+A),A=E[A]),A instanceof E.PresetCurve&&(A={curve:A}),this.curve=A.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=A.curve.g,this.g.precompute(A.curve.n.bitLength()+1),this.hash=A.hash||A.curve.hash}A.exports=a,a.prototype.keyPair=function(A){return new t(this,A)},a.prototype.keyFromPrivate=function(A,I){return t.fromPrivate(this,A,I)},a.prototype.keyFromPublic=function(A,I){return t.fromPublic(this,A,I)},a.prototype.genKeyPair=function(A){A||(A={});for(var I=new C({hash:this.hash,pers:A.pers,persEnc:A.persEnc||"utf8",entropy:A.entropy||i(this.hash.hmacStrength),entropyEnc:A.entropy&&A.entropyEnc||"utf8",nonce:this.n.toArray()}),g=this.n.byteLength(),Q=this.n.sub(new B(2));;){var E=new B(I.generate(g));if(!(E.cmp(Q)>0))return E.iaddn(1),this.keyFromPrivate(E)}},a.prototype._truncateToN=function(A,I){var g=8*A.byteLength()-this.n.bitLength();return g>0&&(A=A.ushrn(g)),!I&&A.cmp(this.n)>=0?A.sub(this.n):A},a.prototype.sign=function(A,I,g,Q){"object"==typeof g&&(Q=g,g=null),Q||(Q={}),I=this.keyFromPrivate(I,g),A=this._truncateToN(new B(A,16));for(var E=this.n.byteLength(),i=I.getPrivate().toArray("be",E),o=A.toArray("be",E),t=new C({hash:this.hash,entropy:i,nonce:o,pers:Q.pers,persEnc:Q.persEnc||"utf8"}),a=this.n.sub(new B(1)),r=0;;r++){var n=Q.k?Q.k(r):new B(t.generate(this.n.byteLength()));if(!((n=this._truncateToN(n,!0)).cmpn(1)<=0||n.cmp(a)>=0)){var s=this.g.mul(n);if(!s.isInfinity()){var h=s.getX(),D=h.umod(this.n);if(0!==D.cmpn(0)){var c=n.invm(this.n).mul(D.mul(I.getPrivate()).iadd(A));if(0!==(c=c.umod(this.n)).cmpn(0)){var w=(s.getY().isOdd()?1:0)|(0!==h.cmp(D)?2:0);return Q.canonical&&c.cmp(this.nh)>0&&(c=this.n.sub(c),w^=1),new e({r:D,s:c,recoveryParam:w})}}}}}},a.prototype.verify=function(A,I,g,C){A=this._truncateToN(new B(A,16)),g=this.keyFromPublic(g,C);var Q=(I=new e(I,"hex")).r,E=I.s;if(Q.cmpn(1)<0||Q.cmp(this.n)>=0)return!1;if(E.cmpn(1)<0||E.cmp(this.n)>=0)return!1;var i,o=E.invm(this.n),t=o.mul(A).umod(this.n),a=o.mul(Q).umod(this.n);return this.curve._maxwellTrick?!(i=this.g.jmulAdd(t,g.getPublic(),a)).isInfinity()&&i.eqXToP(Q):!(i=this.g.mulAdd(t,g.getPublic(),a)).isInfinity()&&0===i.getX().umod(this.n).cmp(Q)},a.prototype.recoverPubKey=function(A,I,g,C){o((3&g)===g,"The recovery param is more than two bits"),I=new e(I,C);var Q=this.n,E=new B(A),i=I.r,t=I.s,a=1&g,r=g>>1;if(i.cmp(this.curve.p.umod(this.curve.n))>=0&&r)throw new Error("Unable to find sencond key candinate");i=r?this.curve.pointFromX(i.add(this.curve.n),a):this.curve.pointFromX(i,a);var n=I.r.invm(Q),s=Q.sub(E).mul(n).umod(Q),h=t.mul(n).umod(Q);return this.g.mulAdd(s,i,h)},a.prototype.getKeyRecoveryParam=function(A,I,g,B){if(null!==(I=new e(I,B)).recoveryParam)return I.recoveryParam;for(var C=0;C<4;C++){var Q;try{Q=this.recoverPubKey(A,I,C)}catch(A){continue}if(Q.eq(g))return C}throw new Error("Unable to find valid recovery factor")}},function(A,I,g){"use strict";var B=g(47),C=g(73),Q=g(7);function E(A){if(!(this instanceof E))return new E(A);this.hash=A.hash,this.predResist=!!A.predResist,this.outLen=this.hash.outSize,this.minEntropy=A.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var I=C.toArray(A.entropy,A.entropyEnc||"hex"),g=C.toArray(A.nonce,A.nonceEnc||"hex"),B=C.toArray(A.pers,A.persEnc||"hex");Q(I.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(I,g,B)}A.exports=E,E.prototype._init=function(A,I,g){var B=A.concat(I).concat(g);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var C=0;C<this.V.length;C++)this.K[C]=0,this.V[C]=1;this._update(B),this._reseed=1,this.reseedInterval=281474976710656},E.prototype._hmac=function(){return new B.hmac(this.hash,this.K)},E.prototype._update=function(A){var I=this._hmac().update(this.V).update([0]);A&&(I=I.update(A)),this.K=I.digest(),this.V=this._hmac().update(this.V).digest(),A&&(this.K=this._hmac().update(this.V).update([1]).update(A).digest(),this.V=this._hmac().update(this.V).digest())},E.prototype.reseed=function(A,I,g,B){"string"!=typeof I&&(B=g,g=I,I=null),A=C.toArray(A,I),g=C.toArray(g,B),Q(A.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(A.concat(g||[])),this._reseed=1},E.prototype.generate=function(A,I,g,B){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof I&&(B=g,g=I,I=null),g&&(g=C.toArray(g,B||"hex"),this._update(g));for(var Q=[];Q.length<A;)this.V=this._hmac().update(this.V).digest(),Q=Q.concat(this.V);var E=Q.slice(0,A);return this._update(g),this._reseed++,C.encode(E,I)}},function(A,I,g){"use strict";var B=g(3),C=g(8).assert;function Q(A,I){this.ec=A,this.priv=null,this.pub=null,I.priv&&this._importPrivate(I.priv,I.privEnc),I.pub&&this._importPublic(I.pub,I.pubEnc)}A.exports=Q,Q.fromPublic=function(A,I,g){return I instanceof Q?I:new Q(A,{pub:I,pubEnc:g})},Q.fromPrivate=function(A,I,g){return I instanceof Q?I:new Q(A,{priv:I,privEnc:g})},Q.prototype.validate=function(){var A=this.getPublic();return A.isInfinity()?{result:!1,reason:"Invalid public key"}:A.validate()?A.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},Q.prototype.getPublic=function(A,I){return"string"==typeof A&&(I=A,A=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),I?this.pub.encode(I,A):this.pub},Q.prototype.getPrivate=function(A){return"hex"===A?this.priv.toString(16,2):this.priv},Q.prototype._importPrivate=function(A,I){this.priv=new B(A,I||16),this.priv=this.priv.umod(this.ec.curve.n)},Q.prototype._importPublic=function(A,I){if(A.x||A.y)return"mont"===this.ec.curve.type?C(A.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||C(A.x&&A.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(A.x,A.y));this.pub=this.ec.curve.decodePoint(A,I)},Q.prototype.derive=function(A){return A.mul(this.priv).getX()},Q.prototype.sign=function(A,I,g){return this.ec.sign(A,this,I,g)},Q.prototype.verify=function(A,I){return this.ec.verify(A,I,this)},Q.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},function(A,I,g){"use strict";var B=g(3),C=g(8),Q=C.assert;function E(A,I){if(A instanceof E)return A;this._importDER(A,I)||(Q(A.r&&A.s,"Signature without r or s"),this.r=new B(A.r,16),this.s=new B(A.s,16),void 0===A.recoveryParam?this.recoveryParam=null:this.recoveryParam=A.recoveryParam)}function i(){this.place=0}function o(A,I){var g=A[I.place++];if(!(128&g))return g;for(var B=15&g,C=0,Q=0,E=I.place;Q<B;Q++,E++)C<<=8,C|=A[E];return I.place=E,C}function t(A){for(var I=0,g=A.length-1;!A[I]&&!(128&A[I+1])&&I<g;)I++;return 0===I?A:A.slice(I)}function e(A,I){if(I<128)A.push(I);else{var g=1+(Math.log(I)/Math.LN2>>>3);for(A.push(128|g);--g;)A.push(I>>>(g<<3)&255);A.push(I)}}A.exports=E,E.prototype._importDER=function(A,I){A=C.toArray(A,I);var g=new i;if(48!==A[g.place++])return!1;if(o(A,g)+g.place!==A.length)return!1;if(2!==A[g.place++])return!1;var Q=o(A,g),E=A.slice(g.place,Q+g.place);if(g.place+=Q,2!==A[g.place++])return!1;var t=o(A,g);if(A.length!==t+g.place)return!1;var e=A.slice(g.place,t+g.place);return 0===E[0]&&128&E[1]&&(E=E.slice(1)),0===e[0]&&128&e[1]&&(e=e.slice(1)),this.r=new B(E),this.s=new B(e),this.recoveryParam=null,!0},E.prototype.toDER=function(A){var I=this.r.toArray(),g=this.s.toArray();for(128&I[0]&&(I=[0].concat(I)),128&g[0]&&(g=[0].concat(g)),I=t(I),g=t(g);!(g[0]||128&g[1]);)g=g.slice(1);var B=[2];e(B,I.length),(B=B.concat(I)).push(2),e(B,g.length);var Q=B.concat(g),E=[48];return e(E,Q.length),E=E.concat(Q),C.encode(E,A)}},function(A,I,g){"use strict";var B=g(47),C=g(46),Q=g(8),E=Q.assert,i=Q.parseBytes,o=g(160),t=g(161);function e(A){if(E("ed25519"===A,"only tested with ed25519 so far"),!(this instanceof e))return new e(A);A=C[A].curve;this.curve=A,this.g=A.g,this.g.precompute(A.n.bitLength()+1),this.pointClass=A.point().constructor,this.encodingLength=Math.ceil(A.n.bitLength()/8),this.hash=B.sha512}A.exports=e,e.prototype.sign=function(A,I){A=i(A);var g=this.keyFromSecret(I),B=this.hashInt(g.messagePrefix(),A),C=this.g.mul(B),Q=this.encodePoint(C),E=this.hashInt(Q,g.pubBytes(),A).mul(g.priv()),o=B.add(E).umod(this.curve.n);return this.makeSignature({R:C,S:o,Rencoded:Q})},e.prototype.verify=function(A,I,g){A=i(A),I=this.makeSignature(I);var B=this.keyFromPublic(g),C=this.hashInt(I.Rencoded(),B.pubBytes(),A),Q=this.g.mul(I.S());return I.R().add(B.pub().mul(C)).eq(Q)},e.prototype.hashInt=function(){for(var A=this.hash(),I=0;I<arguments.length;I++)A.update(arguments[I]);return Q.intFromLE(A.digest()).umod(this.curve.n)},e.prototype.keyFromPublic=function(A){return o.fromPublic(this,A)},e.prototype.keyFromSecret=function(A){return o.fromSecret(this,A)},e.prototype.makeSignature=function(A){return A instanceof t?A:new t(this,A)},e.prototype.encodePoint=function(A){var I=A.getY().toArray("le",this.encodingLength);return I[this.encodingLength-1]|=A.getX().isOdd()?128:0,I},e.prototype.decodePoint=function(A){var I=(A=Q.parseBytes(A)).length-1,g=A.slice(0,I).concat(-129&A[I]),B=0!=(128&A[I]),C=Q.intFromLE(g);return this.curve.pointFromY(C,B)},e.prototype.encodeInt=function(A){return A.toArray("le",this.encodingLength)},e.prototype.decodeInt=function(A){return Q.intFromLE(A)},e.prototype.isPoint=function(A){return A instanceof this.pointClass}},function(A,I,g){"use strict";var B=g(8),C=B.assert,Q=B.parseBytes,E=B.cachedProperty;function i(A,I){this.eddsa=A,this._secret=Q(I.secret),A.isPoint(I.pub)?this._pub=I.pub:this._pubBytes=Q(I.pub)}i.fromPublic=function(A,I){return I instanceof i?I:new i(A,{pub:I})},i.fromSecret=function(A,I){return I instanceof i?I:new i(A,{secret:I})},i.prototype.secret=function(){return this._secret},E(i,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),E(i,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),E(i,"privBytes",(function(){var A=this.eddsa,I=this.hash(),g=A.encodingLength-1,B=I.slice(0,A.encodingLength);return B[0]&=248,B[g]&=127,B[g]|=64,B})),E(i,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),E(i,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),E(i,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),i.prototype.sign=function(A){return C(this._secret,"KeyPair can only verify"),this.eddsa.sign(A,this)},i.prototype.verify=function(A,I){return this.eddsa.verify(A,I,this)},i.prototype.getSecret=function(A){return C(this._secret,"KeyPair is public only"),B.encode(this.secret(),A)},i.prototype.getPublic=function(A){return B.encode(this.pubBytes(),A)},A.exports=i},function(A,I,g){"use strict";var B=g(3),C=g(8),Q=C.assert,E=C.cachedProperty,i=C.parseBytes;function o(A,I){this.eddsa=A,"object"!=typeof I&&(I=i(I)),Array.isArray(I)&&(I={R:I.slice(0,A.encodingLength),S:I.slice(A.encodingLength)}),Q(I.R&&I.S,"Signature without R or S"),A.isPoint(I.R)&&(this._R=I.R),I.S instanceof B&&(this._S=I.S),this._Rencoded=Array.isArray(I.R)?I.R:I.Rencoded,this._Sencoded=Array.isArray(I.S)?I.S:I.Sencoded}E(o,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),E(o,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),E(o,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),E(o,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),o.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},o.prototype.toHex=function(){return C.encode(this.toBytes(),"hex").toUpperCase()},A.exports=o},function(A,I,g){"use strict";var B=g(25);I.certificate=g(172);var C=B.define("RSAPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("modulus").int(),this.key("publicExponent").int(),this.key("privateExponent").int(),this.key("prime1").int(),this.key("prime2").int(),this.key("exponent1").int(),this.key("exponent2").int(),this.key("coefficient").int())}));I.RSAPrivateKey=C;var Q=B.define("RSAPublicKey",(function(){this.seq().obj(this.key("modulus").int(),this.key("publicExponent").int())}));I.RSAPublicKey=Q;var E=B.define("SubjectPublicKeyInfo",(function(){this.seq().obj(this.key("algorithm").use(i),this.key("subjectPublicKey").bitstr())}));I.PublicKey=E;var i=B.define("AlgorithmIdentifier",(function(){this.seq().obj(this.key("algorithm").objid(),this.key("none").null_().optional(),this.key("curve").objid().optional(),this.key("params").seq().obj(this.key("p").int(),this.key("q").int(),this.key("g").int()).optional())})),o=B.define("PrivateKeyInfo",(function(){this.seq().obj(this.key("version").int(),this.key("algorithm").use(i),this.key("subjectPrivateKey").octstr())}));I.PrivateKey=o;var t=B.define("EncryptedPrivateKeyInfo",(function(){this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(),this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(),this.key("kdeparams").seq().obj(this.key("salt").octstr(),this.key("iters").int())),this.key("cipher").seq().obj(this.key("algo").objid(),this.key("iv").octstr()))),this.key("subjectPrivateKey").octstr())}));I.EncryptedPrivateKey=t;var e=B.define("DSAPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("p").int(),this.key("q").int(),this.key("g").int(),this.key("pub_key").int(),this.key("priv_key").int())}));I.DSAPrivateKey=e,I.DSAparam=B.define("DSAparam",(function(){this.int()}));var a=B.define("ECPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("privateKey").octstr(),this.key("parameters").optional().explicit(0).use(r),this.key("publicKey").optional().explicit(1).bitstr())}));I.ECPrivateKey=a;var r=B.define("ECParameters",(function(){this.choice({namedCurve:this.objid()})}));I.signature=B.define("signature",(function(){this.seq().obj(this.key("r").int(),this.key("s").int())}))},function(A,I,g){var B=g(25),C=g(0);function Q(A,I){this.name=A,this.body=I,this.decoders={},this.encoders={}}I.define=function(A,I){return new Q(A,I)},Q.prototype._createNamed=function(A){var I;try{I=g(164).runInThisContext("(function "+this.name+"(entity) {\n  this._initNamed(entity);\n})")}catch(A){I=function(A){this._initNamed(A)}}return C(I,A),I.prototype._initNamed=function(I){A.call(this,I)},new I(this)},Q.prototype._getDecoder=function(A){return A=A||"der",this.decoders.hasOwnProperty(A)||(this.decoders[A]=this._createNamed(B.decoders[A])),this.decoders[A]},Q.prototype.decode=function(A,I,g){return this._getDecoder(I).decode(A,g)},Q.prototype._getEncoder=function(A){return A=A||"der",this.encoders.hasOwnProperty(A)||(this.encoders[A]=this._createNamed(B.encoders[A])),this.encoders[A]},Q.prototype.encode=function(A,I,g){return this._getEncoder(I).encode(A,g)}},function(module,exports){var indexOf=function(A,I){if(A.indexOf)return A.indexOf(I);for(var g=0;g<A.length;g++)if(A[g]===I)return g;return-1},Object_keys=function(A){if(Object.keys)return Object.keys(A);var I=[];for(var g in A)I.push(g);return I},forEach=function(A,I){if(A.forEach)return A.forEach(I);for(var g=0;g<A.length;g++)I(A[g],g,A)},defineProp=function(){try{return Object.defineProperty({},"_",{}),function(A,I,g){Object.defineProperty(A,I,{writable:!0,enumerable:!1,configurable:!0,value:g})}}catch(A){return function(A,I,g){A[I]=g}}}(),globals=["Array","Boolean","Date","Error","EvalError","Function","Infinity","JSON","Math","NaN","Number","Object","RangeError","ReferenceError","RegExp","String","SyntaxError","TypeError","URIError","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","eval","isFinite","isNaN","parseFloat","parseInt","undefined","unescape"];function Context(){}Context.prototype={};var Script=exports.Script=function(A){if(!(this instanceof Script))return new Script(A);this.code=A};Script.prototype.runInContext=function(A){if(!(A instanceof Context))throw new TypeError("needs a 'context' argument.");var I=document.createElement("iframe");I.style||(I.style={}),I.style.display="none",document.body.appendChild(I);var g=I.contentWindow,B=g.eval,C=g.execScript;!B&&C&&(C.call(g,"null"),B=g.eval),forEach(Object_keys(A),(function(I){g[I]=A[I]})),forEach(globals,(function(I){A[I]&&(g[I]=A[I])}));var Q=Object_keys(g),E=B.call(g,this.code);return forEach(Object_keys(g),(function(I){(I in A||-1===indexOf(Q,I))&&(A[I]=g[I])})),forEach(globals,(function(I){I in A||defineProp(A,I,g[I])})),document.body.removeChild(I),E},Script.prototype.runInThisContext=function(){return eval(this.code)},Script.prototype.runInNewContext=function(A){var I=Script.createContext(A),g=this.runInContext(I);return A&&forEach(Object_keys(I),(function(g){A[g]=I[g]})),g},forEach(Object_keys(Script.prototype),(function(A){exports[A]=Script[A]=function(I){var g=Script(I);return g[A].apply(g,[].slice.call(arguments,1))}})),exports.isContext=function(A){return A instanceof Context},exports.createScript=function(A){return exports.Script(A)},exports.createContext=Script.createContext=function(A){var I=new Context;return"object"==typeof A&&forEach(Object_keys(A),(function(g){I[g]=A[g]})),I}},function(A,I,g){var B=g(0);function C(A){this._reporterState={obj:null,path:[],options:A||{},errors:[]}}function Q(A,I){this.path=A,this.rethrow(I)}I.Reporter=C,C.prototype.isError=function(A){return A instanceof Q},C.prototype.save=function(){var A=this._reporterState;return{obj:A.obj,pathLen:A.path.length}},C.prototype.restore=function(A){var I=this._reporterState;I.obj=A.obj,I.path=I.path.slice(0,A.pathLen)},C.prototype.enterKey=function(A){return this._reporterState.path.push(A)},C.prototype.exitKey=function(A){var I=this._reporterState;I.path=I.path.slice(0,A-1)},C.prototype.leaveKey=function(A,I,g){var B=this._reporterState;this.exitKey(A),null!==B.obj&&(B.obj[I]=g)},C.prototype.path=function(){return this._reporterState.path.join("/")},C.prototype.enterObject=function(){var A=this._reporterState,I=A.obj;return A.obj={},I},C.prototype.leaveObject=function(A){var I=this._reporterState,g=I.obj;return I.obj=A,g},C.prototype.error=function(A){var I,g=this._reporterState,B=A instanceof Q;if(I=B?A:new Q(g.path.map((function(A){return"["+JSON.stringify(A)+"]"})).join(""),A.message||A,A.stack),!g.options.partial)throw I;return B||g.errors.push(I),I},C.prototype.wrapResult=function(A){var I=this._reporterState;return I.options.partial?{result:this.isError(A)?null:A,errors:I.errors}:A},B(Q,Error),Q.prototype.rethrow=function(A){if(this.message=A+" at: "+(this.path||"(shallow)"),Error.captureStackTrace&&Error.captureStackTrace(this,Q),!this.stack)try{throw new Error(this.message)}catch(A){this.stack=A.stack}return this}},function(A,I,g){var B=g(26).Reporter,C=g(26).EncoderBuffer,Q=g(26).DecoderBuffer,E=g(7),i=["seq","seqof","set","setof","objid","bool","gentime","utctime","null_","enum","int","objDesc","bitstr","bmpstr","charstr","genstr","graphstr","ia5str","iso646str","numstr","octstr","printstr","t61str","unistr","utf8str","videostr"],o=["key","obj","use","optional","explicit","implicit","def","choice","any","contains"].concat(i);function t(A,I){var g={};this._baseState=g,g.enc=A,g.parent=I||null,g.children=null,g.tag=null,g.args=null,g.reverseArgs=null,g.choice=null,g.optional=!1,g.any=!1,g.obj=!1,g.use=null,g.useDecoder=null,g.key=null,g.default=null,g.explicit=null,g.implicit=null,g.contains=null,g.parent||(g.children=[],this._wrap())}A.exports=t;var e=["enc","parent","children","tag","args","reverseArgs","choice","optional","any","obj","use","alteredUse","key","default","explicit","implicit","contains"];t.prototype.clone=function(){var A=this._baseState,I={};e.forEach((function(g){I[g]=A[g]}));var g=new this.constructor(I.parent);return g._baseState=I,g},t.prototype._wrap=function(){var A=this._baseState;o.forEach((function(I){this[I]=function(){var g=new this.constructor(this);return A.children.push(g),g[I].apply(g,arguments)}}),this)},t.prototype._init=function(A){var I=this._baseState;E(null===I.parent),A.call(this),I.children=I.children.filter((function(A){return A._baseState.parent===this}),this),E.equal(I.children.length,1,"Root node can have only one child")},t.prototype._useArgs=function(A){var I=this._baseState,g=A.filter((function(A){return A instanceof this.constructor}),this);A=A.filter((function(A){return!(A instanceof this.constructor)}),this),0!==g.length&&(E(null===I.children),I.children=g,g.forEach((function(A){A._baseState.parent=this}),this)),0!==A.length&&(E(null===I.args),I.args=A,I.reverseArgs=A.map((function(A){if("object"!=typeof A||A.constructor!==Object)return A;var I={};return Object.keys(A).forEach((function(g){g==(0|g)&&(g|=0);var B=A[g];I[B]=g})),I})))},["_peekTag","_decodeTag","_use","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeInt","_decodeBool","_decodeList","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool"].forEach((function(A){t.prototype[A]=function(){var I=this._baseState;throw new Error(A+" not implemented for encoding: "+I.enc)}})),i.forEach((function(A){t.prototype[A]=function(){var I=this._baseState,g=Array.prototype.slice.call(arguments);return E(null===I.tag),I.tag=A,this._useArgs(g),this}})),t.prototype.use=function(A){E(A);var I=this._baseState;return E(null===I.use),I.use=A,this},t.prototype.optional=function(){return this._baseState.optional=!0,this},t.prototype.def=function(A){var I=this._baseState;return E(null===I.default),I.default=A,I.optional=!0,this},t.prototype.explicit=function(A){var I=this._baseState;return E(null===I.explicit&&null===I.implicit),I.explicit=A,this},t.prototype.implicit=function(A){var I=this._baseState;return E(null===I.explicit&&null===I.implicit),I.implicit=A,this},t.prototype.obj=function(){var A=this._baseState,I=Array.prototype.slice.call(arguments);return A.obj=!0,0!==I.length&&this._useArgs(I),this},t.prototype.key=function(A){var I=this._baseState;return E(null===I.key),I.key=A,this},t.prototype.any=function(){return this._baseState.any=!0,this},t.prototype.choice=function(A){var I=this._baseState;return E(null===I.choice),I.choice=A,this._useArgs(Object.keys(A).map((function(I){return A[I]}))),this},t.prototype.contains=function(A){var I=this._baseState;return E(null===I.use),I.contains=A,this},t.prototype._decode=function(A,I){var g=this._baseState;if(null===g.parent)return A.wrapResult(g.children[0]._decode(A,I));var B,C=g.default,E=!0,i=null;if(null!==g.key&&(i=A.enterKey(g.key)),g.optional){var o=null;if(null!==g.explicit?o=g.explicit:null!==g.implicit?o=g.implicit:null!==g.tag&&(o=g.tag),null!==o||g.any){if(E=this._peekTag(A,o,g.any),A.isError(E))return E}else{var t=A.save();try{null===g.choice?this._decodeGeneric(g.tag,A,I):this._decodeChoice(A,I),E=!0}catch(A){E=!1}A.restore(t)}}if(g.obj&&E&&(B=A.enterObject()),E){if(null!==g.explicit){var e=this._decodeTag(A,g.explicit);if(A.isError(e))return e;A=e}var a=A.offset;if(null===g.use&&null===g.choice){if(g.any)t=A.save();var r=this._decodeTag(A,null!==g.implicit?g.implicit:g.tag,g.any);if(A.isError(r))return r;g.any?C=A.raw(t):A=r}if(I&&I.track&&null!==g.tag&&I.track(A.path(),a,A.length,"tagged"),I&&I.track&&null!==g.tag&&I.track(A.path(),A.offset,A.length,"content"),C=g.any?C:null===g.choice?this._decodeGeneric(g.tag,A,I):this._decodeChoice(A,I),A.isError(C))return C;if(g.any||null!==g.choice||null===g.children||g.children.forEach((function(g){g._decode(A,I)})),g.contains&&("octstr"===g.tag||"bitstr"===g.tag)){var n=new Q(C);C=this._getUse(g.contains,A._reporterState.obj)._decode(n,I)}}return g.obj&&E&&(C=A.leaveObject(B)),null===g.key||null===C&&!0!==E?null!==i&&A.exitKey(i):A.leaveKey(i,g.key,C),C},t.prototype._decodeGeneric=function(A,I,g){var B=this._baseState;return"seq"===A||"set"===A?null:"seqof"===A||"setof"===A?this._decodeList(I,A,B.args[0],g):/str$/.test(A)?this._decodeStr(I,A,g):"objid"===A&&B.args?this._decodeObjid(I,B.args[0],B.args[1],g):"objid"===A?this._decodeObjid(I,null,null,g):"gentime"===A||"utctime"===A?this._decodeTime(I,A,g):"null_"===A?this._decodeNull(I,g):"bool"===A?this._decodeBool(I,g):"objDesc"===A?this._decodeStr(I,A,g):"int"===A||"enum"===A?this._decodeInt(I,B.args&&B.args[0],g):null!==B.use?this._getUse(B.use,I._reporterState.obj)._decode(I,g):I.error("unknown tag: "+A)},t.prototype._getUse=function(A,I){var g=this._baseState;return g.useDecoder=this._use(A,I),E(null===g.useDecoder._baseState.parent),g.useDecoder=g.useDecoder._baseState.children[0],g.implicit!==g.useDecoder._baseState.implicit&&(g.useDecoder=g.useDecoder.clone(),g.useDecoder._baseState.implicit=g.implicit),g.useDecoder},t.prototype._decodeChoice=function(A,I){var g=this._baseState,B=null,C=!1;return Object.keys(g.choice).some((function(Q){var E=A.save(),i=g.choice[Q];try{var o=i._decode(A,I);if(A.isError(o))return!1;B={type:Q,value:o},C=!0}catch(I){return A.restore(E),!1}return!0}),this),C?B:A.error("Choice not matched")},t.prototype._createEncoderBuffer=function(A){return new C(A,this.reporter)},t.prototype._encode=function(A,I,g){var B=this._baseState;if(null===B.default||B.default!==A){var C=this._encodeValue(A,I,g);if(void 0!==C&&!this._skipDefault(C,I,g))return C}},t.prototype._encodeValue=function(A,I,g){var C=this._baseState;if(null===C.parent)return C.children[0]._encode(A,I||new B);var Q=null;if(this.reporter=I,C.optional&&void 0===A){if(null===C.default)return;A=C.default}var E=null,i=!1;if(C.any)Q=this._createEncoderBuffer(A);else if(C.choice)Q=this._encodeChoice(A,I);else if(C.contains)E=this._getUse(C.contains,g)._encode(A,I),i=!0;else if(C.children)E=C.children.map((function(g){if("null_"===g._baseState.tag)return g._encode(null,I,A);if(null===g._baseState.key)return I.error("Child should have a key");var B=I.enterKey(g._baseState.key);if("object"!=typeof A)return I.error("Child expected, but input is not object");var C=g._encode(A[g._baseState.key],I,A);return I.leaveKey(B),C}),this).filter((function(A){return A})),E=this._createEncoderBuffer(E);else if("seqof"===C.tag||"setof"===C.tag){if(!C.args||1!==C.args.length)return I.error("Too many args for : "+C.tag);if(!Array.isArray(A))return I.error("seqof/setof, but data is not Array");var o=this.clone();o._baseState.implicit=null,E=this._createEncoderBuffer(A.map((function(g){var B=this._baseState;return this._getUse(B.args[0],A)._encode(g,I)}),o))}else null!==C.use?Q=this._getUse(C.use,g)._encode(A,I):(E=this._encodePrimitive(C.tag,A),i=!0);if(!C.any&&null===C.choice){var t=null!==C.implicit?C.implicit:C.tag,e=null===C.implicit?"universal":"context";null===t?null===C.use&&I.error("Tag could be omitted only for .use()"):null===C.use&&(Q=this._encodeComposite(t,i,e,E))}return null!==C.explicit&&(Q=this._encodeComposite(C.explicit,!1,"context",Q)),Q},t.prototype._encodeChoice=function(A,I){var g=this._baseState,B=g.choice[A.type];return B||E(!1,A.type+" not found in "+JSON.stringify(Object.keys(g.choice))),B._encode(A.value,I)},t.prototype._encodePrimitive=function(A,I){var g=this._baseState;if(/str$/.test(A))return this._encodeStr(I,A);if("objid"===A&&g.args)return this._encodeObjid(I,g.reverseArgs[0],g.args[1]);if("objid"===A)return this._encodeObjid(I,null,null);if("gentime"===A||"utctime"===A)return this._encodeTime(I,A);if("null_"===A)return this._encodeNull();if("int"===A||"enum"===A)return this._encodeInt(I,g.args&&g.reverseArgs[0]);if("bool"===A)return this._encodeBool(I);if("objDesc"===A)return this._encodeStr(I,A);throw new Error("Unsupported tag: "+A)},t.prototype._isNumstr=function(A){return/^[0-9 ]*$/.test(A)},t.prototype._isPrintstr=function(A){return/^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(A)}},function(A,I,g){var B=g(79);I.tagClass={0:"universal",1:"application",2:"context",3:"private"},I.tagClassByName=B._reverse(I.tagClass),I.tag={0:"end",1:"bool",2:"int",3:"bitstr",4:"octstr",5:"null_",6:"objid",7:"objDesc",8:"external",9:"real",10:"enum",11:"embed",12:"utf8str",13:"relativeOid",16:"seq",17:"set",18:"numstr",19:"printstr",20:"t61str",21:"videostr",22:"ia5str",23:"utctime",24:"gentime",25:"graphstr",26:"iso646str",27:"genstr",28:"unistr",29:"charstr",30:"bmpstr"},I.tagByName=B._reverse(I.tag)},function(A,I,g){var B=I;B.der=g(80),B.pem=g(169)},function(A,I,g){var B=g(0),C=g(4).Buffer,Q=g(80);function E(A){Q.call(this,A),this.enc="pem"}B(E,Q),A.exports=E,E.prototype.decode=function(A,I){for(var g=A.toString().split(/[\r\n]+/g),B=I.label.toUpperCase(),E=/^-----(BEGIN|END) ([^-]+)-----$/,i=-1,o=-1,t=0;t<g.length;t++){var e=g[t].match(E);if(null!==e&&e[2]===B){if(-1!==i){if("END"!==e[1])break;o=t;break}if("BEGIN"!==e[1])break;i=t}}if(-1===i||-1===o)throw new Error("PEM section not found for: "+B);var a=g.slice(i+1,o).join("");a.replace(/[^a-z0-9\+\/=]+/gi,"");var r=new C(a,"base64");return Q.prototype.decode.call(this,r,I)}},function(A,I,g){var B=I;B.der=g(81),B.pem=g(171)},function(A,I,g){var B=g(0),C=g(81);function Q(A){C.call(this,A),this.enc="pem"}B(Q,C),A.exports=Q,Q.prototype.encode=function(A,I){for(var g=C.prototype.encode.call(this,A).toString("base64"),B=["-----BEGIN "+I.label+"-----"],Q=0;Q<g.length;Q+=64)B.push(g.slice(Q,Q+64));return B.push("-----END "+I.label+"-----"),B.join("\n")}},function(A,I,g){"use strict";var B=g(25),C=B.define("Time",(function(){this.choice({utcTime:this.utctime(),generalTime:this.gentime()})})),Q=B.define("AttributeTypeValue",(function(){this.seq().obj(this.key("type").objid(),this.key("value").any())})),E=B.define("AlgorithmIdentifier",(function(){this.seq().obj(this.key("algorithm").objid(),this.key("parameters").optional(),this.key("curve").objid().optional())})),i=B.define("SubjectPublicKeyInfo",(function(){this.seq().obj(this.key("algorithm").use(E),this.key("subjectPublicKey").bitstr())})),o=B.define("RelativeDistinguishedName",(function(){this.setof(Q)})),t=B.define("RDNSequence",(function(){this.seqof(o)})),e=B.define("Name",(function(){this.choice({rdnSequence:this.use(t)})})),a=B.define("Validity",(function(){this.seq().obj(this.key("notBefore").use(C),this.key("notAfter").use(C))})),r=B.define("Extension",(function(){this.seq().obj(this.key("extnID").objid(),this.key("critical").bool().def(!1),this.key("extnValue").octstr())})),n=B.define("TBSCertificate",(function(){this.seq().obj(this.key("version").explicit(0).int().optional(),this.key("serialNumber").int(),this.key("signature").use(E),this.key("issuer").use(e),this.key("validity").use(a),this.key("subject").use(e),this.key("subjectPublicKeyInfo").use(i),this.key("issuerUniqueID").implicit(1).bitstr().optional(),this.key("subjectUniqueID").implicit(2).bitstr().optional(),this.key("extensions").explicit(3).seqof(r).optional())})),s=B.define("X509Certificate",(function(){this.seq().obj(this.key("tbsCertificate").use(n),this.key("signatureAlgorithm").use(E),this.key("signatureValue").bitstr())}));A.exports=s},function(A){A.exports=JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}')},function(A,I,g){var B=/Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m,C=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m,Q=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m,E=g(29),i=g(41),o=g(1).Buffer;A.exports=function(A,I){var g,t=A.toString(),e=t.match(B);if(e){var a="aes"+e[1],r=o.from(e[2],"hex"),n=o.from(e[3].replace(/[\r\n]/g,""),"base64"),s=E(I,r.slice(0,8),parseInt(e[1],10)).key,h=[],D=i.createDecipheriv(a,s,r);h.push(D.update(n)),h.push(D.final()),g=o.concat(h)}else{var c=t.match(Q);g=new o(c[2].replace(/[\r\n]/g,""),"base64")}return{tag:t.match(C)[1],data:g}}},function(A,I,g){(function(I){var B=g(3),C=g(45).ec,Q=g(31),E=g(82);function i(A,I){if(A.cmpn(0)<=0)throw new Error("invalid sig");if(A.cmp(I)>=I)throw new Error("invalid sig")}A.exports=function(A,g,o,t,e){var a=Q(o);if("ec"===a.type){if("ecdsa"!==t&&"ecdsa/rsa"!==t)throw new Error("wrong public key type");return function(A,I,g){var B=E[g.data.algorithm.curve.join(".")];if(!B)throw new Error("unknown curve "+g.data.algorithm.curve.join("."));var Q=new C(B),i=g.data.subjectPrivateKey.data;return Q.verify(I,A,i)}(A,g,a)}if("dsa"===a.type){if("dsa"!==t)throw new Error("wrong public key type");return function(A,I,g){var C=g.data.p,E=g.data.q,o=g.data.g,t=g.data.pub_key,e=Q.signature.decode(A,"der"),a=e.s,r=e.r;i(a,E),i(r,E);var n=B.mont(C),s=a.invm(E);return 0===o.toRed(n).redPow(new B(I).mul(s).mod(E)).fromRed().mul(t.toRed(n).redPow(r.mul(s).mod(E)).fromRed()).mod(C).mod(E).cmp(r)}(A,g,a)}if("rsa"!==t&&"ecdsa/rsa"!==t)throw new Error("wrong public key type");g=I.concat([e,g]);for(var r=a.modulus.byteLength(),n=[1],s=0;g.length+n.length+2<r;)n.push(255),s++;n.push(0);for(var h=-1;++h<g.length;)n.push(g[h]);n=new I(n);var D=B.mont(a.modulus);A=(A=new B(A).toRed(D)).redPow(new B(a.publicExponent)),A=new I(A.fromRed().toArray());var c=s<8?1:0;for(r=Math.min(A.length,n.length),A.length!==n.length&&(c=1),h=-1;++h<r;)c|=A[h]^n[h];return 0===c}}).call(this,g(4).Buffer)},function(A,I,g){(function(I){var B=g(45),C=g(3);A.exports=function(A){return new E(A)};var Q={secp256k1:{name:"secp256k1",byteLength:32},secp224r1:{name:"p224",byteLength:28},prime256v1:{name:"p256",byteLength:32},prime192v1:{name:"p192",byteLength:24},ed25519:{name:"ed25519",byteLength:32},secp384r1:{name:"p384",byteLength:48},secp521r1:{name:"p521",byteLength:66}};function E(A){this.curveType=Q[A],this.curveType||(this.curveType={name:A}),this.curve=new B.ec(this.curveType.name),this.keys=void 0}function i(A,g,B){Array.isArray(A)||(A=A.toArray());var C=new I(A);if(B&&C.length<B){var Q=new I(B-C.length);Q.fill(0),C=I.concat([Q,C])}return g?C.toString(g):C}Q.p224=Q.secp224r1,Q.p256=Q.secp256r1=Q.prime256v1,Q.p192=Q.secp192r1=Q.prime192v1,Q.p384=Q.secp384r1,Q.p521=Q.secp521r1,E.prototype.generateKeys=function(A,I){return this.keys=this.curve.genKeyPair(),this.getPublicKey(A,I)},E.prototype.computeSecret=function(A,g,B){return g=g||"utf8",I.isBuffer(A)||(A=new I(A,g)),i(this.curve.keyFromPublic(A).getPublic().mul(this.keys.getPrivate()).getX(),B,this.curveType.byteLength)},E.prototype.getPublicKey=function(A,I){var g=this.keys.getPublic("compressed"===I,!0);return"hybrid"===I&&(g[g.length-1]%2?g[0]=7:g[0]=6),i(g,A)},E.prototype.getPrivateKey=function(A){return i(this.keys.getPrivate(),A)},E.prototype.setPublicKey=function(A,g){return g=g||"utf8",I.isBuffer(A)||(A=new I(A,g)),this.keys._importPublic(A),this},E.prototype.setPrivateKey=function(A,g){g=g||"utf8",I.isBuffer(A)||(A=new I(A,g));var B=new C(A);return B=B.toString(16),this.keys=this.curve.genKeyPair(),this.keys._importPrivate(B),this}}).call(this,g(4).Buffer)},function(A,I,g){I.publicEncrypt=g(178),I.privateDecrypt=g(179),I.privateEncrypt=function(A,g){return I.publicEncrypt(A,g,!0)},I.publicDecrypt=function(A,g){return I.privateDecrypt(A,g,!0)}},function(A,I,g){var B=g(31),C=g(18),Q=g(21),E=g(83),i=g(84),o=g(3),t=g(85),e=g(44),a=g(1).Buffer;A.exports=function(A,I,g){var r;r=A.padding?A.padding:g?1:4;var n,s=B(A);if(4===r)n=function(A,I){var g=A.modulus.byteLength(),B=I.length,t=Q("sha1").update(a.alloc(0)).digest(),e=t.length,r=2*e;if(B>g-r-2)throw new Error("message too long");var n=a.alloc(g-B-r-2),s=g-e-1,h=C(e),D=i(a.concat([t,n,a.alloc(1,1),I],s),E(h,s)),c=i(h,E(D,e));return new o(a.concat([a.alloc(1),c,D],g))}(s,I);else if(1===r)n=function(A,I,g){var B,Q=I.length,E=A.modulus.byteLength();if(Q>E-11)throw new Error("message too long");B=g?a.alloc(E-Q-3,255):function(A){var I,g=a.allocUnsafe(A),B=0,Q=C(2*A),E=0;for(;B<A;)E===Q.length&&(Q=C(2*A),E=0),(I=Q[E++])&&(g[B++]=I);return g}(E-Q-3);return new o(a.concat([a.from([0,g?1:2]),B,a.alloc(1),I],E))}(s,I,g);else{if(3!==r)throw new Error("unknown padding");if((n=new o(I)).cmp(s.modulus)>=0)throw new Error("data too long for modulus")}return g?e(n,s):t(n,s)}},function(A,I,g){var B=g(31),C=g(83),Q=g(84),E=g(3),i=g(44),o=g(21),t=g(85),e=g(1).Buffer;A.exports=function(A,I,g){var a;a=A.padding?A.padding:g?1:4;var r,n=B(A),s=n.modulus.byteLength();if(I.length>s||new E(I).cmp(n.modulus)>=0)throw new Error("decryption error");r=g?t(new E(I),n):i(I,n);var h=e.alloc(s-r.length);if(r=e.concat([h,r],s),4===a)return function(A,I){var g=A.modulus.byteLength(),B=o("sha1").update(e.alloc(0)).digest(),E=B.length;if(0!==I[0])throw new Error("decryption error");var i=I.slice(1,E+1),t=I.slice(E+1),a=Q(i,C(t,E)),r=Q(t,C(a,g-E-1));if(function(A,I){A=e.from(A),I=e.from(I);var g=0,B=A.length;A.length!==I.length&&(g++,B=Math.min(A.length,I.length));var C=-1;for(;++C<B;)g+=A[C]^I[C];return g}(B,r.slice(0,E)))throw new Error("decryption error");var n=E;for(;0===r[n];)n++;if(1!==r[n++])throw new Error("decryption error");return r.slice(n)}(n,r);if(1===a)return function(A,I,g){var B=I.slice(0,2),C=2,Q=0;for(;0!==I[C++];)if(C>=I.length){Q++;break}var E=I.slice(2,C-1);("0002"!==B.toString("hex")&&!g||"0001"!==B.toString("hex")&&g)&&Q++;E.length<8&&Q++;if(Q)throw new Error("decryption error");return I.slice(C)}(0,r,g);if(3===a)return r;throw new Error("unknown padding")}},function(A,I,g){"use strict";(function(A,B){function C(){throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11")}var Q=g(1),E=g(18),i=Q.Buffer,o=Q.kMaxLength,t=A.crypto||A.msCrypto,e=Math.pow(2,32)-1;function a(A,I){if("number"!=typeof A||A!=A)throw new TypeError("offset must be a number");if(A>e||A<0)throw new TypeError("offset must be a uint32");if(A>o||A>I)throw new RangeError("offset out of range")}function r(A,I,g){if("number"!=typeof A||A!=A)throw new TypeError("size must be a number");if(A>e||A<0)throw new TypeError("size must be a uint32");if(A+I>g||A>o)throw new RangeError("buffer too small")}function n(A,I,g,C){if(B.browser){var Q=A.buffer,i=new Uint8Array(Q,I,g);return t.getRandomValues(i),C?void B.nextTick((function(){C(null,A)})):A}if(!C)return E(g).copy(A,I),A;E(g,(function(g,B){if(g)return C(g);B.copy(A,I),C(null,A)}))}t&&t.getRandomValues||!B.browser?(I.randomFill=function(I,g,B,C){if(!(i.isBuffer(I)||I instanceof A.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');if("function"==typeof g)C=g,g=0,B=I.length;else if("function"==typeof B)C=B,B=I.length-g;else if("function"!=typeof C)throw new TypeError('"cb" argument must be a function');return a(g,I.length),r(B,g,I.length),n(I,g,B,C)},I.randomFillSync=function(I,g,B){void 0===g&&(g=0);if(!(i.isBuffer(I)||I instanceof A.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');a(g,I.length),void 0===B&&(B=I.length-g);return r(B,g,I.length),n(I,g,B)}):(I.randomFill=C,I.randomFillSync=C)}).call(this,g(11),g(9))},function(A,I,g){"use strict";var B=g(6),C=g(86),Q=g(182),E=g(92);function i(A){var I=new Q(A),g=C(Q.prototype.request,I);return B.extend(g,Q.prototype,I),B.extend(g,I),g}var o=i(g(89));o.Axios=Q,o.create=function(A){return i(E(o.defaults,A))},o.Cancel=g(93),o.CancelToken=g(195),o.isCancel=g(88),o.all=function(A){return Promise.all(A)},o.spread=g(196),A.exports=o,A.exports.default=o},function(A,I,g){"use strict";var B=g(6),C=g(87),Q=g(183),E=g(184),i=g(92);function o(A){this.defaults=A,this.interceptors={request:new Q,response:new Q}}o.prototype.request=function(A){"string"==typeof A?(A=arguments[1]||{}).url=arguments[0]:A=A||{},(A=i(this.defaults,A)).method?A.method=A.method.toLowerCase():this.defaults.method?A.method=this.defaults.method.toLowerCase():A.method="get";var I=[E,void 0],g=Promise.resolve(A);for(this.interceptors.request.forEach((function(A){I.unshift(A.fulfilled,A.rejected)})),this.interceptors.response.forEach((function(A){I.push(A.fulfilled,A.rejected)}));I.length;)g=g.then(I.shift(),I.shift());return g},o.prototype.getUri=function(A){return A=i(this.defaults,A),C(A.url,A.params,A.paramsSerializer).replace(/^\?/,"")},B.forEach(["delete","get","head","options"],(function(A){o.prototype[A]=function(I,g){return this.request(B.merge(g||{},{method:A,url:I}))}})),B.forEach(["post","put","patch"],(function(A){o.prototype[A]=function(I,g,C){return this.request(B.merge(C||{},{method:A,url:I,data:g}))}})),A.exports=o},function(A,I,g){"use strict";var B=g(6);function C(){this.handlers=[]}C.prototype.use=function(A,I){return this.handlers.push({fulfilled:A,rejected:I}),this.handlers.length-1},C.prototype.eject=function(A){this.handlers[A]&&(this.handlers[A]=null)},C.prototype.forEach=function(A){B.forEach(this.handlers,(function(I){null!==I&&A(I)}))},A.exports=C},function(A,I,g){"use strict";var B=g(6),C=g(185),Q=g(88),E=g(89);function i(A){A.cancelToken&&A.cancelToken.throwIfRequested()}A.exports=function(A){return i(A),A.headers=A.headers||{},A.data=C(A.data,A.headers,A.transformRequest),A.headers=B.merge(A.headers.common||{},A.headers[A.method]||{},A.headers),B.forEach(["delete","get","head","post","put","patch","common"],(function(I){delete A.headers[I]})),(A.adapter||E.adapter)(A).then((function(I){return i(A),I.data=C(I.data,I.headers,A.transformResponse),I}),(function(I){return Q(I)||(i(A),I&&I.response&&(I.response.data=C(I.response.data,I.response.headers,A.transformResponse))),Promise.reject(I)}))}},function(A,I,g){"use strict";var B=g(6);A.exports=function(A,I,g){return B.forEach(g,(function(g){A=g(A,I)})),A}},function(A,I,g){"use strict";var B=g(6);A.exports=function(A,I){B.forEach(A,(function(g,B){B!==I&&B.toUpperCase()===I.toUpperCase()&&(A[I]=g,delete A[B])}))}},function(A,I,g){"use strict";var B=g(91);A.exports=function(A,I,g){var C=g.config.validateStatus;!C||C(g.status)?A(g):I(B("Request failed with status code "+g.status,g.config,null,g.request,g))}},function(A,I,g){"use strict";A.exports=function(A,I,g,B,C){return A.config=I,g&&(A.code=g),A.request=B,A.response=C,A.isAxiosError=!0,A.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},A}},function(A,I,g){"use strict";var B=g(190),C=g(191);A.exports=function(A,I){return A&&!B(I)?C(A,I):I}},function(A,I,g){"use strict";A.exports=function(A){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(A)}},function(A,I,g){"use strict";A.exports=function(A,I){return I?A.replace(/\/+$/,"")+"/"+I.replace(/^\/+/,""):A}},function(A,I,g){"use strict";var B=g(6),C=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];A.exports=function(A){var I,g,Q,E={};return A?(B.forEach(A.split("\n"),(function(A){if(Q=A.indexOf(":"),I=B.trim(A.substr(0,Q)).toLowerCase(),g=B.trim(A.substr(Q+1)),I){if(E[I]&&C.indexOf(I)>=0)return;E[I]="set-cookie"===I?(E[I]?E[I]:[]).concat([g]):E[I]?E[I]+", "+g:g}})),E):E}},function(A,I,g){"use strict";var B=g(6);A.exports=B.isStandardBrowserEnv()?function(){var A,I=/(msie|trident)/i.test(navigator.userAgent),g=document.createElement("a");function C(A){var B=A;return I&&(g.setAttribute("href",B),B=g.href),g.setAttribute("href",B),{href:g.href,protocol:g.protocol?g.protocol.replace(/:$/,""):"",host:g.host,search:g.search?g.search.replace(/^\?/,""):"",hash:g.hash?g.hash.replace(/^#/,""):"",hostname:g.hostname,port:g.port,pathname:"/"===g.pathname.charAt(0)?g.pathname:"/"+g.pathname}}return A=C(window.location.href),function(I){var g=B.isString(I)?C(I):I;return g.protocol===A.protocol&&g.host===A.host}}():function(){return!0}},function(A,I,g){"use strict";var B=g(6);A.exports=B.isStandardBrowserEnv()?{write:function(A,I,g,C,Q,E){var i=[];i.push(A+"="+encodeURIComponent(I)),B.isNumber(g)&&i.push("expires="+new Date(g).toGMTString()),B.isString(C)&&i.push("path="+C),B.isString(Q)&&i.push("domain="+Q),!0===E&&i.push("secure"),document.cookie=i.join("; ")},read:function(A){var I=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(A,I,g){"use strict";var B=g(93);function C(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");var I;this.promise=new Promise((function(A){I=A}));var g=this;A((function(A){g.reason||(g.reason=new B(A),I(g.reason))}))}C.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},C.source=function(){var A;return{token:new C((function(I){A=I})),cancel:A}},A.exports=C},function(A,I,g){"use strict";A.exports=function(A){return function(I){return A.apply(null,I)}}},function(A,I,g){"use strict";g.r(I);var B=g(13),C=g(2),Q=g.n(C),E=g(5),i=g.n(E),o=g(97),t=g.n(o),e=g(20),a=g.n(e),r=g(17),n=g.n(r);function s(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}var h=function(){function A(I,g,B,C){a()(this,A),this.options=function(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?s(Object(g),!0).forEach((function(I){t()(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):s(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}({},{canvas:null,orientation:"landscape"},{},C),this.id=-1,this.width=I,this.height=g,this.image,this.orientation=this.options.orientation,this.cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkit,this.listeners={},this.defaultMarkerWidth=1,this.patternMarkers={},this.barcodeMarkers={},this.nftMarkers={},this.transform_mat=new Float32Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framepointer=null,this.framesize=null,this.dataHeap=null,this.videoLuma=null,this.camera_mat=null,this.marker_transform_mat=null,this.videoLumaPointer=null,this.options.canvas?this.canvas=this.options.canvas:"undefined"!=typeof document&&(this.canvas=document.createElement("canvas")),this.canvas?(this.canvas.width=I,this.canvas.height=g,this.ctx=this.canvas.getContext("2d")):console.warn("No canvas available"),this.nftMarkerFound=!1,this.nftMarkerFoundTime=!1,this.nftMarkerCount=0,this._bwpointer=!1}var I,g,C,E,o,e;return n()(A,[{key:"dispose",value:function(){for(var A in this.cameraId=-1,this.cameraParam="",this.cameraLoaded=!1,this.id>-1&&this.artoolkit.teardown(this.id),this.image&&this.image.srcObject,this)this[A]=null}},{key:"process",value:function(A){var I=this.detectMarker(A);0!=I&&console.error("[ARController]","detectMarker error:",I);var g,C,Q=this.getMarkerNum();for(g in this.patternMarkers)(C=this.patternMarkers[g]).inPrevious=C.inCurrent,C.inCurrent=!1;for(g in this.barcodeMarkers)(C=this.barcodeMarkers[g]).inPrevious=C.inCurrent,C.inCurrent=!1;for(g in this.nftMarkers)(C=this.nftMarkers[g]).inPrevious=C.inCurrent,C.inCurrent=!1;for(var E=0;E<Q;E++){var i=this.getMarker(E),o=B.a.UNKNOWN_MARKER,t=this.trackPatternMarkerId(-1);i.idPatt>-1&&(i.id===i.idPatt||-1===i.idMatrix)?(t=this.trackPatternMarkerId(i.idPatt),o=B.a.PATTERN_MARKER,i.dir!==i.dirPatt&&this.setMarkerInfoDir(E,i.dirPatt)):i.idMatrix>-1&&(t=this.trackBarcodeMarkerId(i.idMatrix),o=B.a.BARCODE_MARKER,i.dir!==i.dirMatrix&&this.setMarkerInfoDir(E,i.dirMatrix)),o!==B.a.UNKNOWN_MARKER&&t.inPrevious?this.getTransMatSquareCont(E,t.markerWidth,t.matrix,t.matrix):this.getTransMatSquare(E,t.markerWidth,t.matrix),t.inCurrent=!0,this.transMatToGLMat(t.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getMarker",target:this,data:{index:E,type:o,marker:i,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}var e=this.nftMarkerCount;this.detectNFTMarker();for(var a=0;a<e;a++){var r=this.getNFTMarker(a),n=B.a.NFT_MARKER;if(r.found){this.nftMarkerFound=a,this.nftMarkerFoundTime=Date.now();var s=this.trackNFTMarkerId(a);s.matrix.set(r.pose),s.inCurrent=!0,this.transMatToGLMat(s.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getNFTMarker",target:this,data:{index:a,type:n,marker:r,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else self.nftMarkerFound===a&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:"lostNFTMarker",target:this,data:{index:a,type:n,marker:r,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}for(var h=this.getMultiMarkerCount(),D=0;D<h;D++){var c=this.getMultiMarkerPatternCount(D),w=!1;this.artoolkit.getTransMatMultiSquareRobust(this.id,D),this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat);for(var f=0;f<c;f++){if((F=this.getMultiEachMarker(D,f)).visible>=0){w=!0,this.dispatchEvent({name:"getMultiMarker",target:this,data:{multiMarkerId:D,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}});break}}if(w)for(var d=0;d<c;d++){var F=this.getMultiEachMarker(D,d);this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getMultiMarkerSub",target:this,data:{multiMarkerId:D,markerIndex:d,marker:F,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}}this._bwpointer&&this.debugDraw()}},{key:"detectNFTMarker",value:function(){this.artoolkit.detectNFTMarker(this.id)}},{key:"trackPatternMarkerId",value:function(A,I){var g=this.patternMarkers[A];return g||(this.patternMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"trackBarcodeMarkerId",value:function(A,I){var g=this.barcodeMarkers[A];return g||(this.barcodeMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"trackNFTMarkerId",value:function(A,I){var g=this.nftMarkers[A];return g||(this.nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"getMultiMarkerCount",value:function(){return this.artoolkit.getMultiMarkerCount(this.id)}},{key:"getMultiMarkerPatternCount",value:function(A){return this.artoolkit.getMultiMarkerNum(this.id,A)}},{key:"addEventListener",value:function(A,I){this.listeners[A]||(this.listeners[A]=[]),this.listeners[A].push(I)}},{key:"removeEventListener",value:function(A,I){if(this.listeners[A]){var g=this.listeners[A].indexOf(I);g>-1&&this.listeners[A].splice(g,1)}}},{key:"dispatchEvent",value:function(A){var I=this.listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:"debugSetup",value:function(){"undefined"!=typeof document?(document.body.appendChild(this.canvas),this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()):console.log("debugSetup() currently only supports Browser environments")}},{key:"debugDraw",value:function(){for(var A=new Uint8ClampedArray(this.artoolkit.instance.HEAPU8.buffer,this._bwpointer,this.framesize),I=new ImageData(new Uint8ClampedArray(this.canvas.width*this.canvas.height*4),this.canvas.width,this.canvas.height),g=0,B=0;g<A.length;g++,B+=4){var C=A[g];I.data[B+0]=C,I.data[B+1]=C,I.data[B+2]=C,I.data[B+3]=255}this.ctx.putImageData(I,0,0);for(var Q=this.getMarkerNum(),E=0;E<Q;E++)this.drawDebugMarker(this.getMarker(E))}},{key:"drawDebugMarker",value:function(A){var I=A.vertex,g=A.pos,B=this.ctx;B.lineWidth=5,B.strokeStyle="red",B.beginPath(),B.moveTo(I[0][0],I[0][1]),B.lineTo(I[1][0],I[1][1]),B.stroke(),B.beginPath(),B.moveTo(I[2][0],I[2][1]),B.lineTo(I[3][0],I[3][1]),B.stroke(),B.strokeStyle="green",B.beginPath(),B.lineTo(I[1][0],I[1][1]),B.lineTo(I[2][0],I[2][1]),B.stroke(),B.beginPath(),B.moveTo(I[3][0],I[3][1]),B.lineTo(I[0][0],I[0][1]),B.stroke(),B.beginPath(),B.arc(g[0],g[1],8,0,2*Math.PI),B.fillStyle="red",B.fill()}},{key:"loadMarker",value:(e=i()(Q.a.mark((function A(I){return Q.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMarker(this.id,I);case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A,this)}))),function(A){return e.apply(this,arguments)})},{key:"loadMultiMarker",value:(o=i()(Q.a.mark((function A(I){return Q.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMultiMarker(this.id,I);case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A,this)}))),function(A){return o.apply(this,arguments)})},{key:"loadNFTMarker",value:(E=i()(Q.a.mark((function A(I){var g;return Q.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addNFTMarker(this.id,I);case 2:return g=A.sent,this.nftMarkerCount=g+1,A.abrupt("return",g);case 5:case"end":return A.stop()}}),A,this)}))),function(A){return E.apply(this,arguments)})},{key:"getTransMatSquare",value:function(A,I,g){return this.artoolkit.getTransMatSquare(this.id,A,I),g.set(this.marker_transform_mat),g}},{key:"getTransMatSquareCont",value:function(A,I,g,B){return this.marker_transform_mat.set(g),this.artoolkit.getTransMatSquareCont(this.id,A,I),B.set(this.marker_transform_mat),B}},{key:"getTransMatMultiSquare",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:"getTransMatMultiSquareRobust",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:"transMatToGLMat",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:"arglCameraViewRHf",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),I=B}},{key:"detectMarker",value:function(A){return this._copyImageToHeap(A)?this.artoolkit.detectMarker(this.id):-99}},{key:"getMarkerNum",value:function(){return this.artoolkit.getMarkerNum(this.id)}},{key:"getMarker",value:function(A){if(0===this.artoolkit.getMarker(this.id,A))return this.artoolkit.markerInfo}},{key:"getNFTMarker",value:function(A){if(0===this.artoolkit.getNFTMarker(this.id,A))return this.artoolkit.NFTMarkerInfo}},{key:"setMarkerInfoVertex",value:function(A,I){for(var g=0;g<I.length;g++)this.marker_transform_mat[2*g+0]=I[g][0],this.marker_transform_mat[2*g+1]=I[g][1];return this.artoolkit.setMarkerInfoVertex(this.id,A)}},{key:"cloneMarkerInfo",value:function(A){return JSON.parse(JSON.stringify(A))}},{key:"getMultiEachMarker",value:function(A,I){if(0===this.artoolkit.getMultiEachMarker(this.id,A,I))return this.artoolkit.multiEachMarkerInfo}},{key:"getTransformationMatrix",value:function(){return this.transform_mat}},{key:"getCameraMatrix",value:function(){return this.camera_mat}},{key:"getMarkerTransformationMatrix",value:function(){return this.marker_transform_mat}},{key:"setDebugMode",value:function(A){return this.artoolkit.setDebugMode(this.id,A)}},{key:"getDebugMode",value:function(){return this.artoolkit.getDebugMode(this.id)}},{key:"getProcessingImage",value:function(){return this.artoolkit.getProcessingImage(this.id)}},{key:"setLogLevel",value:function(A){return this.artoolkit.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.artoolkit.getLogLevel()}},{key:"setMarkerInfoDir",value:function(A,I){return this.artoolkit.setMarkerInfoDir(this.id,A,I)}},{key:"setProjectionNearPlane",value:function(A){return this.artoolkit.setProjectionNearPlane(this.id,A)}},{key:"getProjectionNearPlane",value:function(){return this.artoolkit.getProjectionNearPlane(this.id)}},{key:"setProjectionFarPlane",value:function(A){return this.artoolkit.setProjectionFarPlane(this.id,A)}},{key:"getProjectionFarPlane",value:function(){return this.artoolkit.getProjectionFarPlane(this.id)}},{key:"setThresholdMode",value:function(A){return this.artoolkit.setThresholdMode(this.id,A)}},{key:"getThresholdMode",value:function(){return this.artoolkit.getThresholdMode(this.id)}},{key:"setThreshold",value:function(A){return this.artoolkit.setThreshold(this.id,A)}},{key:"getThreshold",value:function(){return this.artoolkit.getThreshold(this.id)}},{key:"setPatternDetectionMode",value:function(A){return this.artoolkit.setPatternDetectionMode(this.id,A)}},{key:"getPatternDetectionMode",value:function(){return this.artoolkit.getPatternDetectionMode(this.id)}},{key:"setMatrixCodeType",value:function(A){return this.artoolkit.setMatrixCodeType(this.id,A)}},{key:"getMatrixCodeType",value:function(){return this.artoolkit.getMatrixCodeType(this.id)}},{key:"setLabelingMode",value:function(A){return this.artoolkit.setLabelingMode(this.id,A)}},{key:"getLabelingMode",value:function(){return this.artoolkit.getLabelingMode(this.id)}},{key:"setPattRatio",value:function(A){return this.artoolkit.setPattRatio(this.id,A)}},{key:"getPattRatio",value:function(){return this.artoolkit.getPattRatio(this.id)}},{key:"setImageProcMode",value:function(A){return this.artoolkit.setImageProcMode(this.id,A)}},{key:"getImageProcMode",value:function(){return this.artoolkit.getImageProcMode(this.id)}},{key:"_initialize",value:(C=i()(Q.a.mark((function A(){var I,g=this;return Q.a.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new B.a).init();case 2:return this.artoolkit=A.sent,console.log("[ARController]","ARToolkit initialized"),A.next=6,this.artoolkit.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log("[ARController]","Camera params loaded with ID",this.cameraId),this.id=this.artoolkit.setup(this.width,this.height,this.cameraId),console.log("[ARController]","Got ID from setup",this.id),this._initNFT(),I=artoolkit.frameMalloc,this.framepointer=I.framepointer,this.framesize=I.framesize,this.videoLumaPointer=I.videoLumaPointer,this.dataHeap=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.framepointer,this.framesize),this.videoLuma=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.videoLumaPointer,this.framesize/4),this.camera_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.camera,16),this.marker_transform_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.transform,12),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){g.dispatchEvent({name:"load",target:g})}),1),A.abrupt("return",this);case 23:case"end":return A.stop()}}),A,this)}))),function(){return C.apply(this,arguments)})},{key:"_initNFT",value:function(){this.artoolkit.setupAR2(this.id)}},{key:"_copyImageToHeap",value:function(A){var I;(A||(A=this.image),A.data)?I=A.data:(this.ctx.save(),"portrait"===this.orientation?(this.ctx.translate(this.canvas.width,0),this.ctx.rotate(Math.PI/2),this.ctx.drawImage(A,0,0,this.canvas.height,this.canvas.width)):this.ctx.drawImage(A,0,0,this.canvas.width,this.canvas.height),this.ctx.restore(),I=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data);if(this.videoLuma)for(var g=0,B=0;B<this.videoSize;B++){var C=I[g+0],Q=I[g+1],E=I[g+2];this.videoLuma[B]=C+C+C+E+Q+Q+Q+Q>>3,g+=4}return!!this.dataHeap&&(this.dataHeap.set(I),!0)}}],[{key:"initWithDimensions",value:(g=i()(Q.a.mark((function I(g,B,C,E){var i;return Q.a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return i=new A(g,B,C,E),I.next=3,i._initialize();case 3:return I.abrupt("return",I.sent);case 4:case"end":return I.stop()}}),I)}))),function(A,I,B,C){return g.apply(this,arguments)})},{key:"initWithImage",value:(I=i()(Q.a.mark((function I(g,B,C){var E,i,o;return Q.a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return E=g.videoWidth||g.width,i=g.videoHeight||g.height,I.next=4,A.initWithDimensions(E,i,B,C);case 4:return(o=I.sent).image=g,I.abrupt("return",o);case 7:case"end":return I.stop()}}),I)}))),function(A,g,B){return I.apply(this,arguments)})}]),A}();I.default={ARToolkit:B.a,ARController:h}}]).default}));

/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersareacontrols.js":
/*!***************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersareacontrols.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");
/* harmony import */ var _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../threex/arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");





const MarkersAreaControls = function(arToolkitContext, object3d, parameters){
	var _this = this
	_threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__.default.call(this, object3d)

	if( arguments.length > 3 )	console.assert('wrong api for', MarkersAreaControls)

	// have a parameters in argument
	this.parameters = {
		// list of controls for each subMarker
		subMarkersControls: parameters.subMarkersControls,
		// list of pose for each subMarker relative to the origin
		subMarkerPoses: parameters.subMarkerPoses,
		// change matrix mode - [modelViewMatrix, cameraTransformMatrix]
		changeMatrixMode : parameters.changeMatrixMode !== undefined ? parameters.changeMatrixMode : 'modelViewMatrix',
	}
	
	this.object3d.visible = false
	// honor obsolete stuff - add a warning to use
	this.subMarkersControls = this.parameters.subMarkersControls
	this.subMarkerPoses = this.parameters.subMarkerPoses

	// listen to arToolkitContext event 'sourceProcessed'
	// - after we fully processed one image, aka when we know all detected poses in it
	arToolkitContext.addEventListener('sourceProcessed', function(){
		_this._onSourceProcessed()
	})
}

MarkersAreaControls.prototype = Object.create( _threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__.default.prototype );
MarkersAreaControls.prototype.constructor = MarkersAreaControls;

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////


/**
 * What to do when a image source is fully processed
 */
MarkersAreaControls.prototype._onSourceProcessed = function(){
	var _this = this
	var stats = {
		count: 0,
		position : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
		},
		quaternion : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0,0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0,0,0,0),
		},
		scale : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
		},
	}

	var firstQuaternion = _this.parameters.subMarkersControls[0].object3d.quaternion

	this.parameters.subMarkersControls.forEach(function(markerControls, markerIndex){
		
		var markerObject3d = markerControls.object3d
		// if this marker is not visible, ignore it
		if( markerObject3d.visible === false )	return

		// transformation matrix of this.object3d according to this sub-markers
		var matrix = markerObject3d.matrix.clone()
		var markerPose = _this.parameters.subMarkerPoses[markerIndex]
		matrix.multiply(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().getInverse(markerPose))

		// decompose the matrix into .position, .quaternion, .scale
		var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion()
		var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		matrix.decompose(position, quaternion, scale)

		// http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
		stats.count++

		MarkersAreaControls.averageVector3(stats.position.sum, position, stats.count, stats.position.average)
		MarkersAreaControls.averageQuaternion(stats.quaternion.sum, quaternion, firstQuaternion, stats.count, stats.quaternion.average)
		MarkersAreaControls.averageVector3(stats.scale.sum, scale, stats.count, stats.scale.average)
	})

	// honor _this.object3d.visible
	if( stats.count > 0 ){
		_this.object3d.visible = true
	}else{
		_this.object3d.visible = false			
	}

	// if at least one sub-marker has been detected, make the average of all detected markers
	if( stats.count > 0 ){
		// compute modelViewMatrix
		var modelViewMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4()
		modelViewMatrix.compose(stats.position.average, stats.quaternion.average, stats.scale.average)

		// change _this.object3d.matrix based on parameters.changeMatrixMode
		if( this.parameters.changeMatrixMode === 'modelViewMatrix' ){
			_this.object3d.matrix.copy(modelViewMatrix)
		}else if( this.parameters.changeMatrixMode === 'cameraTransformMatrix' ){
			_this.object3d.matrix.getInverse( modelViewMatrix )
		}else {
			console.assert(false)
		}

		// decompose - the matrix into .position, .quaternion, .scale
		_this.object3d.matrix.decompose(_this.object3d.position, _this.object3d.quaternion, _this.object3d.scale)
	}

}

//////////////////////////////////////////////////////////////////////////////
//		Utility functions
//////////////////////////////////////////////////////////////////////////////

/**
 * from http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
 */
MarkersAreaControls.averageQuaternion = function(quaternionSum, newQuaternion, firstQuaternion, count, quaternionAverage){
	quaternionAverage = quaternionAverage || new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion()
	// sanity check
	console.assert(firstQuaternion instanceof three__WEBPACK_IMPORTED_MODULE_0__.Quaternion === true)
	
	// from http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
	if( newQuaternion.dot(firstQuaternion) > 0 ){
		newQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(-newQuaternion.x, -newQuaternion.y, -newQuaternion.z, -newQuaternion.w)
	}

	quaternionSum.x += newQuaternion.x
	quaternionSum.y += newQuaternion.y
	quaternionSum.z += newQuaternion.z
	quaternionSum.w += newQuaternion.w
	
	quaternionAverage.x = quaternionSum.x/count
	quaternionAverage.y = quaternionSum.y/count
	quaternionAverage.z = quaternionSum.z/count
	quaternionAverage.w = quaternionSum.w/count
	
	quaternionAverage.normalize()

	return quaternionAverage
}


MarkersAreaControls.averageVector3 = function(vector3Sum, vector3, count, vector3Average){
	vector3Average = vector3Average || new three__WEBPACK_IMPORTED_MODULE_0__.Vector3()
	
	vector3Sum.x += vector3.x
	vector3Sum.y += vector3.y
	vector3Sum.z += vector3.z
	
	vector3Average.x = vector3Sum.x / count
	vector3Average.y = vector3Sum.y / count
	vector3Average.z = vector3Sum.z / count
	
	return vector3Average
}

//////////////////////////////////////////////////////////////////////////////
//		Utility function
//////////////////////////////////////////////////////////////////////////////

/**
 * compute the center of this multimarker file
 */
MarkersAreaControls.computeCenter = function(jsonData){
	var multiMarkerFile = JSON.parse(jsonData)
	var stats = {
		count : 0,
		position : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),						
		},
		quaternion : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0,0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0,0,0,0),						
		},
		scale : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),						
		},
	}
	var firstQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion() // FIXME ???
	
	multiMarkerFile.subMarkersControls.forEach(function(item){
		var poseMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix)
		
		var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion
		var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		poseMatrix.decompose(position, quaternion, scale)
		
		// http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
		stats.count++

		MarkersAreaControls.averageVector3(stats.position.sum, position, stats.count, stats.position.average)
		MarkersAreaControls.averageQuaternion(stats.quaternion.sum, quaternion, firstQuaternion, stats.count, stats.quaternion.average)
		MarkersAreaControls.averageVector3(stats.scale.sum, scale, stats.count, stats.scale.average)
	})
	
	var averageMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4()
	averageMatrix.compose(stats.position.average, stats.quaternion.average, stats.scale.average)

	return averageMatrix
}

MarkersAreaControls.computeBoundingBox = function(jsonData){
	var multiMarkerFile = JSON.parse(jsonData)
	var boundingBox = new three__WEBPACK_IMPORTED_MODULE_0__.Box3()

	multiMarkerFile.subMarkersControls.forEach(function(item){
		var poseMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix)
		
		var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion
		var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		poseMatrix.decompose(position, quaternion, scale)

		boundingBox.expandByPoint(position)
	})

	return boundingBox
}
//////////////////////////////////////////////////////////////////////////////
//		updateSmoothedControls
//////////////////////////////////////////////////////////////////////////////

MarkersAreaControls.prototype.updateSmoothedControls = function(smoothedControls, lerpsValues){
	// handle default values
	if( lerpsValues === undefined ){
		// FIXME this parameter format is uselessly cryptic
		// lerpValues = [
		// {lerpPosition: 0.5, lerpQuaternion: 0.2, lerpQuaternion: 0.7}
		// ]
		lerpsValues = [
			[0.3+.1, 0.1, 0.3],
			[0.4+.1, 0.1, 0.4],
			[0.4+.1, 0.2, 0.5],
			[0.5+.1, 0.2, 0.7],
			[0.5+.1, 0.2, 0.7],
		]
	}
	// count how many subMarkersControls are visible
	var nVisible = 0
	this.parameters.subMarkersControls.forEach(function(markerControls, markerIndex){
		var markerObject3d = markerControls.object3d
		if( markerObject3d.visible === true )	nVisible ++
	})

	// find the good lerpValues
	if( lerpsValues[nVisible-1] !== undefined ){
		var lerpValues = lerpsValues[nVisible-1]
	}else{
		var lerpValues = lerpsValues[lerpsValues.length-1]
	}

	// modify lerpValues in smoothedControls
	smoothedControls.parameters.lerpPosition = lerpValues[0]
	smoothedControls.parameters.lerpQuaternion = lerpValues[1]
	smoothedControls.parameters.lerpScale = lerpValues[2]
}


//////////////////////////////////////////////////////////////////////////////
//		Create ArMultiMarkerControls from JSON
//////////////////////////////////////////////////////////////////////////////

MarkersAreaControls.fromJSON = function(arToolkitContext, parent3D, markerRoot, jsonData, parameters){
	var multiMarkerFile = JSON.parse(jsonData)
	// declare variables
	var subMarkersControls = []
	var subMarkerPoses = []
	// handle default arguments
	parameters = parameters || {}

	// prepare the parameters
	multiMarkerFile.subMarkersControls.forEach(function(item){
		// create a markerRoot
		var markerRoot = new three__WEBPACK_IMPORTED_MODULE_0__.Object3D()
		parent3D.add(markerRoot)

		// create markerControls for our markerRoot
		var subMarkerControls = new _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_2__.default(arToolkitContext, markerRoot, item.parameters)

// if( true ){
		// store it in the parameters
		subMarkersControls.push(subMarkerControls)
		subMarkerPoses.push(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix))	
// }else{
// 		// build a smoothedControls
// 		var smoothedRoot = new THREE.Group()
// 		parent3D.add(smoothedRoot)
// 		var smoothedControls = new THREEx.ArSmoothedControls(smoothedRoot, {
// 			lerpPosition : 0.1,
// 			lerpQuaternion : 0.1, 
// 			lerpScale : 0.1,
// 			minVisibleDelay: 0,
// 			minUnvisibleDelay: 0,
// 		})
// 		onRenderFcts.push(function(delta){
// 			smoothedControls.update(markerRoot)	// TODO this is a global
// 		})
// 	
// 
// 		// store it in the parameters
// 		subMarkersControls.push(smoothedControls)
// 		subMarkerPoses.push(new THREE.Matrix4().fromArray(item.poseMatrix))
// }
	})
	
	parameters.subMarkersControls = subMarkersControls
	parameters.subMarkerPoses = subMarkerPoses
	// create a new ArMultiMarkerControls
	var multiMarkerControls = new _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_3__.default(arToolkitContext, markerRoot, parameters)

	// return it
	return multiMarkerControls	
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaControls);

/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersarealearning.js":
/*!***************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersarealearning.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");


const MarkersAreaLearning = function(arToolkitContext, subMarkersControls){
	var _this = this
	this._arToolkitContext = arToolkitContext

	// Init variables
	this.subMarkersControls = subMarkersControls
	this.enabled = true
		
	// listen to arToolkitContext event 'sourceProcessed'
	// - after we fully processed one image, aka when we know all detected poses in it
	arToolkitContext.addEventListener('sourceProcessed', function(){
		_this._onSourceProcessed()
	})
}

//////////////////////////////////////////////////////////////////////////////
//		statistic collection
//////////////////////////////////////////////////////////////////////////////

/**
 * What to do when a image source is fully processed
 */
MarkersAreaLearning.prototype._onSourceProcessed = function(){
	var originQuaternion = this.subMarkersControls[0].object3d.quaternion
	// here collect the statistic on relative positioning 
	
	// honor this.enabled
	if( this.enabled === false )	return

	// keep only the visible markers
	var visibleMarkerControls = this.subMarkersControls.filter(function(markerControls){
		return markerControls.object3d.visible === true
	})

	var count = Object.keys(visibleMarkerControls).length

	var positionDelta = new THREE.Vector3()
	var quaternionDelta = new THREE.Quaternion()
	var scaleDelta = new THREE.Vector3()
	var tmpMatrix = new THREE.Matrix4()
	
	// go thru all the visibleMarkerControls
	for(var i = 0; i < count; i++){
		var markerControls1 = visibleMarkerControls[i]
		for(var j = 0; j < count; j++){
			var markerControls2 = visibleMarkerControls[j]

			// if markerControls1 is markerControls2, then skip it
			if( i === j )	continue


			//////////////////////////////////////////////////////////////////////////////
			//		create data in markerControls1.object3d.userData if needed
			//////////////////////////////////////////////////////////////////////////////
			// create seenCouples for markerControls1 if needed
			if( markerControls1.object3d.userData.seenCouples === undefined ){
				markerControls1.object3d.userData.seenCouples = {}
			}
			var seenCouples = markerControls1.object3d.userData.seenCouples
			// create the multiMarkerPosition average if needed`
			if( seenCouples[markerControls2.id] === undefined ){
				// console.log('create seenCouples between', markerControls1.id, 'and', markerControls2.id)
				seenCouples[markerControls2.id] = {
					count : 0,
					position : {
						sum: new THREE.Vector3(0,0,0),
						average: new THREE.Vector3(0,0,0),						
					},
					quaternion : {
						sum: new THREE.Quaternion(0,0,0,0),
						average: new THREE.Quaternion(0,0,0,0),						
					},
					scale : {
						sum: new THREE.Vector3(0,0,0),
						average: new THREE.Vector3(0,0,0),						
					},
				}
			}

			
			//////////////////////////////////////////////////////////////////////////////
			//		Compute markerControls2 position relative to markerControls1
			//////////////////////////////////////////////////////////////////////////////
			
			// compute markerControls2 position/quaternion/scale in relation with markerControls1
			tmpMatrix.getInverse(markerControls1.object3d.matrix)
			tmpMatrix.multiply(markerControls2.object3d.matrix)
			tmpMatrix.decompose(positionDelta, quaternionDelta, scaleDelta)
			
			//////////////////////////////////////////////////////////////////////////////
			//		update statistics
			//////////////////////////////////////////////////////////////////////////////
			var stats = seenCouples[markerControls2.id]
			// update the count
			stats.count++

			// update the average of position/rotation/scale
			_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__.default.averageVector3(stats.position.sum, positionDelta, stats.count, stats.position.average)
			_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__.default.averageQuaternion(stats.quaternion.sum, quaternionDelta, originQuaternion, stats.count, stats.quaternion.average)
			_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__.default.averageVector3(stats.scale.sum, scaleDelta, stats.count, stats.scale.average)
		}
	}
}

//////////////////////////////////////////////////////////////////////////////
//		Compute markers transformation matrix from current stats
//////////////////////////////////////////////////////////////////////////////

MarkersAreaLearning.prototype.computeResult = function(){
	var _this = this
	var originSubControls = this.subMarkersControls[0]

	this.deleteResult()

	// special case of originSubControls averageMatrix
	originSubControls.object3d.userData.result = {
		averageMatrix : new THREE.Matrix4(),
		confidenceFactor: 1,
	}
	// TODO here check if the originSubControls has been seen at least once!!
	
	
	/**
	 * ALGO in pseudo code
	 *
	 * - Set confidenceFactor of origin sub markers as 1
	 *
	 * Start Looping
	 * - For a given sub marker, skip it if it already has a result.
	 * - if no result, check all seen couple and find n ones which has a progress of 1 or more.
	 * - So the other seen sub markers, got a valid transformation matrix. 
	 * - So take local averages position/orientation/scale, compose a transformation matrix. 
	 *   - aka transformation matrix from parent matrix * transf matrix pos/orientation/scale
	 * - Multiple it by the other seen marker matrix. 
	 * - Loop on the array until one pass could not compute any new sub marker
	 */
	
	do{
		var resultChanged = false
		// loop over each subMarkerControls
		this.subMarkersControls.forEach(function(subMarkerControls){

			// if subMarkerControls already has a result, do nothing
			var result = subMarkerControls.object3d.userData.result
			var isLearned = (result !== undefined && result.confidenceFactor >= 1) ? true : false
			if( isLearned === true )	return
			
			// console.log('compute subMarkerControls', subMarkerControls.name())
			var otherSubControlsID = _this._getLearnedCoupleStats(subMarkerControls)
			if( otherSubControlsID === null ){
				// console.log('no learnedCoupleStats')
				return
			}
			
			var otherSubControls = _this._getSubMarkerControlsByID(otherSubControlsID)

			var seenCoupleStats = subMarkerControls.object3d.userData.seenCouples[otherSubControlsID]
			
			var averageMatrix = new THREE.Matrix4()
			averageMatrix.compose(seenCoupleStats.position.average, seenCoupleStats.quaternion.average, seenCoupleStats.scale.average)
				
			var otherAverageMatrix = otherSubControls.object3d.userData.result.averageMatrix

			var matrix = new THREE.Matrix4().getInverse(otherAverageMatrix).multiply(averageMatrix)
			matrix = new THREE.Matrix4().getInverse(matrix)

			console.assert( subMarkerControls.object3d.userData.result === undefined )
			subMarkerControls.object3d.userData.result = {
				averageMatrix: matrix,
				confidenceFactor: 1
			}
			
			resultChanged = true
		})
		// console.log('loop')
	}while(resultChanged === true)
	
	// debugger
	// console.log('json:', this.toJSON())
	// this.subMarkersControls.forEach(function(subMarkerControls){
	// 	var hasResult = subMarkerControls.object3d.userData.result !== undefined
	// 	console.log('marker', subMarkerControls.name(), hasResult ? 'has' : 'has NO', 'result')
	// })
}

//////////////////////////////////////////////////////////////////////////////
//		Utility function
//////////////////////////////////////////////////////////////////////////////

/** 
 * get a _this.subMarkersControls id based on markerControls.id
 */
MarkersAreaLearning.prototype._getLearnedCoupleStats	= function(subMarkerControls){

	// if this subMarkerControls has never been seen with another subMarkerControls
	if( subMarkerControls.object3d.userData.seenCouples === undefined )	return null
	
	var seenCouples = subMarkerControls.object3d.userData.seenCouples
	var coupleControlsIDs = Object.keys(seenCouples).map(Number)

	for(var i = 0; i < coupleControlsIDs.length; i++){
		var otherSubControlsID = coupleControlsIDs[i]
		// get otherSubControls
		var otherSubControls = this._getSubMarkerControlsByID(otherSubControlsID)
			
		// if otherSubControls isnt learned, skip it
		var result = otherSubControls.object3d.userData.result
		var isLearned = (result !== undefined && result.confidenceFactor >= 1) ? true : false
		if( isLearned === false )	continue

		// return this seenCouplesStats
		return otherSubControlsID
	}
	
	// if none is found, return null
	return null
}

/** 
 * get a _this.subMarkersControls based on markerControls.id
 */
MarkersAreaLearning.prototype._getSubMarkerControlsByID	= function(controlsID){

	for(var i = 0; i < this.subMarkersControls.length; i++){
		var subMarkerControls = this.subMarkersControls[i]
		if( subMarkerControls.id === controlsID ){
			return subMarkerControls
		}
	}

	return null
}
 //////////////////////////////////////////////////////////////////////////////
//		JSON file building
//////////////////////////////////////////////////////////////////////////////

MarkersAreaLearning.prototype.toJSON = function(){

	// compute the average matrix before generating the file
	this.computeResult()

	//////////////////////////////////////////////////////////////////////////////
	//		actually build the json
	//////////////////////////////////////////////////////////////////////////////
	var data = {
		meta : {
			createdBy : "Area Learning - AR.js "+THREEx.ArToolkitContext.REVISION, // TODO: ArToolkitContext depending on build
			createdAt : new Date().toJSON(),
			
		},
		trackingBackend: this._arToolkitContext.parameters.trackingBackend,
		subMarkersControls : [],
	}

	var originSubControls = this.subMarkersControls[0]
	var originMatrixInverse = new THREE.Matrix4().getInverse(originSubControls.object3d.matrix)
	this.subMarkersControls.forEach(function(subMarkerControls, index){
		
		// if a subMarkerControls has no result, ignore it
		if( subMarkerControls.object3d.userData.result === undefined )	return

		var poseMatrix = subMarkerControls.object3d.userData.result.averageMatrix
		console.assert(poseMatrix instanceof THREE.Matrix4)
		

		// build the info
		var info = {
			parameters : {
				// to fill ...
			},
			poseMatrix : poseMatrix.toArray(),
		}
		if( subMarkerControls.parameters.type === 'pattern' ){
			info.parameters.type = subMarkerControls.parameters.type
			info.parameters.patternUrl = subMarkerControls.parameters.patternUrl
		}else if( subMarkerControls.parameters.type === 'barcode' ){
			info.parameters.type = subMarkerControls.parameters.type
			info.parameters.barcodeValue = subMarkerControls.parameters.barcodeValue
		}else console.assert(false)

		data.subMarkersControls.push(info)
	})

	var strJSON = JSON.stringify(data, null, '\t');
	
	
	//////////////////////////////////////////////////////////////////////////////
	//		round matrix elements to ease readability - for debug
	//////////////////////////////////////////////////////////////////////////////
	var humanReadable = false
	if( humanReadable === true ){
		var tmp = JSON.parse(strJSON)
		tmp.subMarkersControls.forEach(function(markerControls){
			markerControls.poseMatrix = markerControls.poseMatrix.map(function(value){
				var roundingFactor = 100
				return Math.round(value*roundingFactor)/roundingFactor
			})
		})
		strJSON = JSON.stringify(tmp, null, '\t');
	}
	
	return strJSON;	
}

//////////////////////////////////////////////////////////////////////////////
//		utility function
//////////////////////////////////////////////////////////////////////////////

/**
 * reset all collected statistics
 */
MarkersAreaLearning.prototype.resetStats = function(){
	this.deleteResult()
	
	this.subMarkersControls.forEach(function(markerControls){
		delete markerControls.object3d.userData.seenCouples
	})
}
/**
 * reset all collected statistics
 */
MarkersAreaLearning.prototype.deleteResult = function(){
	this.subMarkersControls.forEach(function(markerControls){
		delete markerControls.object3d.userData.result
	})
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaLearning);


/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersareautils.js":
/*!************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersareautils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

const MarkersAreaUtils = {};

//////////////////////////////////////////////////////////////////////////////
//		navigateToLearnerPage
//////////////////////////////////////////////////////////////////////////////

/**
 * Navigate to the multi-marker learner page
 *
 * @param {String} learnerBaseURL  - the base url for the learner
 * @param {String} trackingBackend - the tracking backend to use
 */
MarkersAreaUtils.navigateToLearnerPage = function(learnerBaseURL, trackingBackend){
	var learnerParameters = {
		backURL : location.href,
		trackingBackend: trackingBackend,
		markersControlsParameters: MarkersAreaUtils.createDefaultMarkersControlsParameters(trackingBackend),
	}
	location.href = learnerBaseURL + '?' + encodeURIComponent(JSON.stringify(learnerParameters))
}

//////////////////////////////////////////////////////////////////////////////
//		DefaultMultiMarkerFile
//////////////////////////////////////////////////////////////////////////////

/**
 * Create and store a default multi-marker file
 *
 * @param {String} trackingBackend - the tracking backend to use
 */
MarkersAreaUtils.storeDefaultMultiMarkerFile = function(trackingBackend){
	var file = MarkersAreaUtils.createDefaultMultiMarkerFile(trackingBackend)
	// json.strinfy the value and store it in localStorage
	localStorage.setItem('ARjsMultiMarkerFile', JSON.stringify(file))
}



/**
 * Create a default multi-marker file
 * @param {String} trackingBackend - the tracking backend to use
 * @return {Object} - json object of the multi-marker file
 */
MarkersAreaUtils.createDefaultMultiMarkerFile = function(trackingBackend){
	console.assert(trackingBackend)
	if( trackingBackend === undefined )	debugger

	// create absoluteBaseURL
	var link = document.createElement('a')
	link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL
	var absoluteBaseURL = link.href

	// create the base file
	var file = {
		meta : {
			createdBy : 'AR.js ' + _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.REVISION + ' - Default Marker',
			createdAt : new Date().toJSON(),
		},
		trackingBackend : trackingBackend,
		subMarkersControls : [
			// empty for now... being filled
		]
	}
	// add a subMarkersControls
	file.subMarkersControls[0] = {
		parameters: {},
		poseMatrix: new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeTranslation(0,0, 0).toArray(),
	}
	if( trackingBackend === 'artoolkit' ){
		file.subMarkersControls[0].parameters.type = 'pattern'
		file.subMarkersControls[0].parameters.patternUrl = absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-hiro.patt'
	}else console.assert(false)

	// json.strinfy the value and store it in localStorage
	return file
}

//////////////////////////////////////////////////////////////////////////////
//		createDefaultMarkersControlsParameters
//////////////////////////////////////////////////////////////////////////////

/**
 * Create a default controls parameters for the multi-marker learner
 *
 * @param {String} trackingBackend - the tracking backend to use
 * @return {Object} - json object containing the controls parameters
 */
MarkersAreaUtils.createDefaultMarkersControlsParameters = function(trackingBackend){
	// create absoluteBaseURL
	var link = document.createElement('a')
	link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL
	var absoluteBaseURL = link.href


	if( trackingBackend === 'artoolkit' ){
		// pattern hiro/kanji/a/b/c/f
		var markersControlsParameters = [
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-hiro.patt',
			},
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-kanji.patt',
			},
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterA.patt',
			},
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterB.patt',
			},
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterC.patt',
			},
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterF.patt',
			},
		]
	}else console.assert(false)
	return markersControlsParameters
}


//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////
/**
 * generate areaFile
 */
MarkersAreaUtils.storeMarkersAreaFileFromResolution = function (trackingBackend, resolutionW, resolutionH) {
	// generate areaFile
	var areaFile = this.buildMarkersAreaFileFromResolution(trackingBackend, resolutionW, resolutionH)
	// store areaFile in localStorage
	localStorage.setItem('ARjsMultiMarkerFile', JSON.stringify(areaFile))
}


//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

MarkersAreaUtils.buildMarkersAreaFileFromResolution = function(trackingBackend, resolutionW, resolutionH){
	// create the base file
	var file = {
		meta : {
			createdBy : 'AR.js - Augmented Website',
			createdAt : new Date().toJSON(),
		},
		trackingBackend : trackingBackend,
		subMarkersControls : [
			// empty for now...
		]
	}

	var whiteMargin = 0.1
	if( resolutionW > resolutionH ){
		var markerImageSize = 0.4 * resolutionH
	}else if( resolutionW < resolutionH ){
		var markerImageSize = 0.4 * resolutionW
	}else if( resolutionW === resolutionH ){
		// specific for twitter player - https://dev.twitter.com/cards/types/player
		var markerImageSize = 0.33 * resolutionW
	}else console.assert(false)

	// console.warn('using new markerImageSize computation')
	var actualMarkerSize = markerImageSize * (1 - 2*whiteMargin)

	var deltaX = (resolutionW - markerImageSize)/2 / actualMarkerSize
	var deltaZ = (resolutionH - markerImageSize)/2 / actualMarkerSize

	var subMarkerControls = buildSubMarkerControls('center', 0, 0)
	file.subMarkersControls.push(subMarkerControls)

	var subMarkerControls = buildSubMarkerControls('topleft', -deltaX, -deltaZ)
	file.subMarkersControls.push(subMarkerControls)

	var subMarkerControls = buildSubMarkerControls('topright', +deltaX, -deltaZ)
	file.subMarkersControls.push(subMarkerControls)

	var subMarkerControls = buildSubMarkerControls('bottomleft', -deltaX, +deltaZ)
	file.subMarkersControls.push(subMarkerControls)

	var subMarkerControls = buildSubMarkerControls('bottomright', +deltaX, +deltaZ)
	file.subMarkersControls.push(subMarkerControls)

	return file

	//////////////////////////////////////////////////////////////////////////////
	//		Code Separator
	//////////////////////////////////////////////////////////////////////////////

	function buildSubMarkerControls(layout, positionX, positionZ){
		console.log('buildSubMarkerControls', layout, positionX, positionZ)
		// create subMarkersControls
		var subMarkersControls = {
			parameters: {},
			poseMatrix: new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeTranslation(positionX,0, positionZ).toArray(),
		}
		// fill the parameters
		if( trackingBackend === 'artoolkit' ){
			layout2MarkerParametersArtoolkit(subMarkersControls.parameters, layout)
		}else console.assert(false)
		// return subMarkersControls
		return subMarkersControls
	}

	function layout2MarkerParametersArtoolkit(parameters, layout){
		// create absoluteBaseURL
		var link = document.createElement('a')
		link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL
		var absoluteBaseURL = link.href

		var layout2PatternUrl = {
			'center' : convertRelativeUrlToAbsolute(absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-hiro.patt'),
			'topleft' : convertRelativeUrlToAbsolute(absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterA.patt'),
			'topright' : convertRelativeUrlToAbsolute(absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterB.patt'),
			'bottomleft' : convertRelativeUrlToAbsolute(absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterC.patt'),
			'bottomright' : convertRelativeUrlToAbsolute(absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterF.patt'),
		}
		console.assert(layout2PatternUrl[layout] !== undefined )
		parameters.type = 'pattern'
		parameters.patternUrl = layout2PatternUrl[layout]
		return
		function convertRelativeUrlToAbsolute(relativeUrl){
			var tmpLink = document.createElement('a');
			tmpLink.href = relativeUrl
			return tmpLink.href
		}
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaUtils);


/***/ }),

/***/ "./three.js/src/new-api/arjs-utils.js":
/*!********************************************!*\
  !*** ./three.js/src/new-api/arjs-utils.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const Utils = {};

/**
 * Create a default rendering camera for this trackingBackend. They may be modified later. to fit physical camera parameters
 *
 * @param {string} trackingBackend - the tracking to user
 * @return {THREE.Camera} the created camera
 */
Utils.createDefaultCamera = function (trackingMethod) {
    var trackingBackend = this.parseTrackingMethod(trackingMethod).trackingBackend
    // Create a camera
    if (trackingBackend === 'artoolkit') {
        var camera = new three__WEBPACK_IMPORTED_MODULE_0__.Camera();
    } else console.assert(false, 'unknown trackingBackend: ' + trackingBackend)

    return camera
}

/**
 * parse tracking method
 *
 * @param {String} trackingMethod - the tracking method to parse
 * @return {Object} - various field of the tracking method
 */
Utils.parseTrackingMethod = function (trackingMethod) {

    if (trackingMethod === 'best') {
        trackingMethod = 'area-artoolkit';
    }

    if (trackingMethod.startsWith('area-')) {
        return {
            trackingBackend: trackingMethod.replace('area-', ''),
            markersAreaEnabled: true,
        }
    } else {
        return {
            trackingBackend: trackingMethod,
            markersAreaEnabled: false,
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Utils);


/***/ }),

/***/ "./three.js/src/threex/arjs-context.js":
/*!*********************************************!*\
  !*** ./three.js/src/threex/arjs-context.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! threexArmarkercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsartoolkit */ "./node_modules/artoolkit5-js/dist/ARToolkit.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_2__);

 // Alias for dynamic importing
 // TODO comment explanation
const { ARToolkit, ARController } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default());
const artoolkit = new ARToolkit();

const Context = function (parameters) {
    var _this = this

    _this._updatedAt = null

    // handle default parameters
    this.parameters = {
        // AR backend - ['artoolkit']
        trackingBackend: 'artoolkit',
        // debug - true if one should display artoolkit debug canvas, false otherwise
        debug: false,
        // the mode of detection - ['color', 'color_and_matrix', 'mono', 'mono_and_matrix']
        detectionMode: 'mono',
        // type of matrix code - valid iif detectionMode end with 'matrix' - [3x3, 3x3_HAMMING63, 3x3_PARITY65, 4x4, 4x4_BCH_13_9_3, 4x4_BCH_13_5_5]
        matrixCodeType: '3x3',

        // url of the camera parameters
        cameraParametersUrl: Context.baseURL + '../data/data/camera_para.dat',

        // tune the maximum rate of pose detection in the source image
        maxDetectionRate: 60,
        // resolution of at which we detect pose in the source image
        canvasWidth: 640,
        canvasHeight: 480,

        // the patternRatio inside the artoolkit marker - artoolkit only
        patternRatio: 0.5,

        // enable image smoothing or not for canvas copy - default to true
        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled
        imageSmoothingEnabled: false,
    }
    // parameters sanity check
    console.assert(['artoolkit'].indexOf(this.parameters.trackingBackend) !== -1, 'invalid parameter trackingBackend', this.parameters.trackingBackend)
    console.assert(['color', 'color_and_matrix', 'mono', 'mono_and_matrix'].indexOf(this.parameters.detectionMode) !== -1, 'invalid parameter detectionMode', this.parameters.detectionMode)

    this.arController = null;

    _this.initialized = false


    this._arMarkersControls = []

    //////////////////////////////////////////////////////////////////////////////
    //		setParameters
    //////////////////////////////////////////////////////////////////////////////
    setParameters(parameters)
    function setParameters(parameters) {
        if (parameters === undefined) return
        for (var key in parameters) {
            var newValue = parameters[key]

            if (newValue === undefined) {
                console.warn("Context: '" + key + "' parameter is undefined.")
                continue
            }

            var currentValue = _this.parameters[key]

            if (currentValue === undefined) {
                console.warn("Context: '" + key + "' is not a property of this material.")
                continue
            }

            _this.parameters[key] = newValue
        }
    }
}

Object.assign(Context.prototype, three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype);

// default to github page
Context.baseURL = 'https://ar-js-org.github.io/AR.js/three.js/'
Context.REVISION = '3.3.1'
/**
 * Create a default camera for this trackingBackend
 * @param {string} trackingBackend - the tracking to user
 * @return {THREE.Camera} the created camera
 */
Context.createDefaultCamera = function (trackingBackend) {
    console.assert(false, 'use ARjs.Utils.createDefaultCamera instead')
    // Create a camera
    if (trackingBackend === 'artoolkit') {
        var camera = new three__WEBPACK_IMPORTED_MODULE_0__.Camera();
    } else console.assert(false);
    return camera
}


//////////////////////////////////////////////////////////////////////////////
//		init functions
//////////////////////////////////////////////////////////////////////////////
Context.prototype.init = function (onCompleted) {
    var _this = this
    if (this.parameters.trackingBackend === 'artoolkit') {
        this._initArtoolkit(done);
    } else console.assert(false);
    return

    function done() {
        // dispatch event
        _this.dispatchEvent({
            type: 'initialized'
        });

        _this.initialized = true

        onCompleted && onCompleted()
    }

}
////////////////////////////////////////////////////////////////////////////////
//          update function
////////////////////////////////////////////////////////////////////////////////
Context.prototype.update = function (srcElement) {

    // be sure arController is fully initialized
    if (this.parameters.trackingBackend === 'artoolkit' && this.arController === null) return false;

    // honor this.parameters.maxDetectionRate
    var present = performance.now()
    if (this._updatedAt !== null && present - this._updatedAt < 1000 / this.parameters.maxDetectionRate) {
        return false
    }
    this._updatedAt = present

    var prevVisibleMarkers = []

    // mark all markers to invisible before processing this frame
    this._arMarkersControls.forEach(function (markerControls) {
        if (markerControls.object3d.visible) {
            prevVisibleMarkers.push(markerControls)
        }
        markerControls.object3d.visible = false
    })

    // process this frame
    if (this.parameters.trackingBackend === 'artoolkit') {
        this._updateArtoolkit(srcElement);
    }  else {
        console.assert(false);
    }

    // dispatch event
    this.dispatchEvent({
        type: 'sourceProcessed'
    });

    // After frame is processed, check visibility of each marker to determine if it was found or lost
    this._arMarkersControls.forEach(function (markerControls) {
        var wasVisible = prevVisibleMarkers.includes(markerControls);
        var isVisible = markerControls.object3d.visible;
    
        if (isVisible === true && wasVisible === false) {
            window.dispatchEvent(new CustomEvent('markerFound', {
                detail: markerControls,
            }))
        } else if (isVisible === false && wasVisible === true) {
            window.dispatchEvent(new CustomEvent('markerLost', {
                detail: markerControls,
            }))
        }
    })


    // return true as we processed the frame
    return true;
}

////////////////////////////////////////////////////////////////////////////////
//          Add/Remove markerControls
////////////////////////////////////////////////////////////////////////////////
Context.prototype.addMarker = function (arMarkerControls) {
    console.assert(arMarkerControls instanceof threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__.default)
    this._arMarkersControls.push(arMarkerControls)
}

Context.prototype.removeMarker = function (arMarkerControls) {
    console.assert(arMarkerControls instanceof threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__.default)
    // console.log('remove marker for', arMarkerControls)
    var index = this.arMarkerControlss.indexOf(artoolkitMarker);
    console.assert(index !== index)
    this._arMarkersControls.splice(index, 1)
}

//////////////////////////////////////////////////////////////////////////////
//		artoolkit specific
//////////////////////////////////////////////////////////////////////////////
Context.prototype._initArtoolkit = function (onCompleted) {
    var _this = this

    // set this._artoolkitProjectionAxisTransformMatrix to change artoolkit projection matrix axis to match usual webgl one
    this._artoolkitProjectionAxisTransformMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4()
    this._artoolkitProjectionAxisTransformMatrix.multiply(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationY(Math.PI))
    this._artoolkitProjectionAxisTransformMatrix.multiply(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationZ(Math.PI))

    // init ARToolkit
    artoolkit.init().then(_ => {
        // init controller
        ARController.initWithDimensions(_this.parameters.canvasWidth, _this.parameters.canvasHeight, _this.parameters.cameraParametersUrl).then((arController) => {
            _this.arController = arController

            // honor this.parameters.imageSmoothingEnabled
            arController.ctx.mozImageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;
            arController.ctx.webkitImageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;
            arController.ctx.msImageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;
            arController.ctx.imageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;

            // honor this.parameters.debug
            if (_this.parameters.debug === true) {
                arController.debugSetup();
                arController.canvas.style.position = 'absolute'
                arController.canvas.style.top = '0px'
                arController.canvas.style.opacity = '0.6'
                arController.canvas.style.pointerEvents = 'none'
                arController.canvas.style.zIndex = '-1'
            }

            // setPatternDetectionMode
            var detectionModes = {
                'color': artoolkit.AR_TEMPLATE_MATCHING_COLOR,
                'color_and_matrix': artoolkit.AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX,
                'mono': artoolkit.AR_TEMPLATE_MATCHING_MONO,
                'mono_and_matrix': artoolkit.AR_TEMPLATE_MATCHING_MONO_AND_MATRIX,
            }
            var detectionMode = detectionModes[_this.parameters.detectionMode]
            console.assert(detectionMode !== undefined)
            arController.setPatternDetectionMode(detectionMode);

            // setMatrixCodeType
            var matrixCodeTypes = {
                '3x3': artoolkit.AR_MATRIX_CODE_3x3,
                '3x3_HAMMING63': artoolkit.AR_MATRIX_CODE_3x3_HAMMING63,
                '3x3_PARITY65': artoolkit.AR_MATRIX_CODE_3x3_PARITY65,
                '4x4': artoolkit.AR_MATRIX_CODE_4x4,
                '4x4_BCH_13_9_3': artoolkit.AR_MATRIX_CODE_4x4_BCH_13_9_3,
                '4x4_BCH_13_5_5': artoolkit.AR_MATRIX_CODE_4x4_BCH_13_5_5,
            }
            var matrixCodeType = matrixCodeTypes[_this.parameters.matrixCodeType]
            console.assert(matrixCodeType !== undefined)
            arController.setMatrixCodeType(matrixCodeType);

            // set the patternRatio for artoolkit
            arController.setPattRatio(_this.parameters.patternRatio);

            // set thresholding in artoolkit
            // this seems to be the default
            // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_MANUAL)
            // adatative consume a LOT of cpu...
            // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE)
            // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_OTSU)

            // notify
            onCompleted()
        });
    });
    return this
}

/**
 * return the projection matrix
 */
Context.prototype.getProjectionMatrix = function (srcElement) {


    // FIXME rename this function to say it is artoolkit specific - getArtoolkitProjectMatrix
    // keep a backward compatibility with a console.warn

    console.assert(this.parameters.trackingBackend === 'artoolkit')
    console.assert(this.arController, 'arController MUST be initialized to call this function')
    // get projectionMatrixArr from artoolkit
    var projectionMatrixArr = this.arController.getCameraMatrix();
    var projectionMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(projectionMatrixArr)

    // return the result
    return projectionMatrix
}

Context.prototype._updateArtoolkit = function (srcElement) {
    this.arController.process(srcElement)
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Context);

/***/ }),

/***/ "./three.js/src/threex/arjs-markercontrols.js":
/*!****************************************************!*\
  !*** ./three.js/src/threex/arjs-markercontrols.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsartoolkit */ "./node_modules/artoolkit5-js/dist/ARToolkit.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_2__);


 // TODO comment explanation
const { ARToolkit } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default());

const MarkerControls = function(context, object3d, parameters){
	var _this = this

	_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__.default.call(this, object3d)

	this.context = context
	// handle default parameters
	this.parameters = {
		// size of the marker in meter
		size : 1,
		// type of marker - ['pattern', 'barcode', 'unknown' ]
		type : 'unknown',
		// url of the pattern - IIF type='pattern'
		patternUrl : null,
		// value of the barcode - IIF type='barcode'
		barcodeValue : null,
		// change matrix mode - [modelViewMatrix, cameraTransformMatrix]
		changeMatrixMode : 'modelViewMatrix',
		// minimal confidence in the marke recognition - between [0, 1] - default to 1
		minConfidence: 0.6,
		// turn on/off camera smoothing
		smooth: false,
		// number of matrices to smooth tracking over, more = smoother but slower follow
		smoothCount: 5,
		// distance tolerance for smoothing, if smoothThreshold # of matrices are under tolerance, tracking will stay still
		smoothTolerance: 0.01,
		// threshold for smoothing, will keep still unless enough matrices are over tolerance
		smoothThreshold: 2,
	}

	// sanity check
	var possibleValues = ['pattern', 'barcode', 'unknown']
	console.assert(possibleValues.indexOf(this.parameters.type) !== -1, 'illegal value', this.parameters.type)
	var possibleValues = ['modelViewMatrix', 'cameraTransformMatrix' ]
	console.assert(possibleValues.indexOf(this.parameters.changeMatrixMode) !== -1, 'illegal value', this.parameters.changeMatrixMode)


        // create the marker Root
	this.object3d = object3d
	this.object3d.matrixAutoUpdate = false;
	this.object3d.visible = false

	//////////////////////////////////////////////////////////////////////////////
	//		setParameters
	//////////////////////////////////////////////////////////////////////////////
	setParameters(parameters)
	function setParameters(parameters){
		if( parameters === undefined )	return
		for( var key in parameters ){
			var newValue = parameters[ key ]

			if( newValue === undefined ){
				console.warn( "ArMarkerControls: '" + key + "' parameter is undefined." )
				continue
			}

			var currentValue = _this.parameters[ key ]

			if( currentValue === undefined ){
				console.warn( "ArMarkerControls: '" + key + "' is not a property of this material." )
				continue
			}

			_this.parameters[ key ] = newValue
		}
	}

	if (this.parameters.smooth) {
		this.smoothMatrices = []; // last DEBOUNCE_COUNT modelViewMatrix
	}

	//////////////////////////////////////////////////////////////////////////////
	//		Code Separator
	//////////////////////////////////////////////////////////////////////////////
	// add this marker to artoolkitsystem
	// TODO rename that .addMarkerControls
	context.addMarker(this)

	if( _this.context.parameters.trackingBackend === 'artoolkit' ){
		this._initArtoolkit()
	}else console.assert(false)
}

MarkerControls.prototype = Object.create( _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__.default.prototype );
MarkerControls.prototype.constructor = MarkerControls;

MarkerControls.prototype.dispose = function(){
	this.context.removeMarker(this)

	// TODO remove the event listener if needed
	// unloadMaker ???
}

//////////////////////////////////////////////////////////////////////////////
//		update controls with new modelViewMatrix
//////////////////////////////////////////////////////////////////////////////

/**
 * When you actually got a new modelViewMatrix, you need to perfom a whole bunch
 * of things. it is done here.
 */
MarkerControls.prototype.updateWithModelViewMatrix = function(modelViewMatrix){
	var markerObject3D = this.object3d;

	// mark object as visible
	markerObject3D.visible = true

	if( this.context.parameters.trackingBackend === 'artoolkit' ){
		// apply context._axisTransformMatrix - change artoolkit axis to match usual webgl one
		var tmpMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().copy(this.context._artoolkitProjectionAxisTransformMatrix)
		tmpMatrix.multiply(modelViewMatrix)

		modelViewMatrix.copy(tmpMatrix)
	}else console.assert(false)

	// change axis orientation on marker - artoolkit say Z is normal to the marker - ar.js say Y is normal to the marker
	var markerAxisTransformMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationX(Math.PI/2)
	modelViewMatrix.multiply(markerAxisTransformMatrix)

	var renderReqd = false;

	// change markerObject3D.matrix based on parameters.changeMatrixMode
	if( this.parameters.changeMatrixMode === 'modelViewMatrix' ){
		if (this.parameters.smooth) {
			var sum,
					i, j,
					averages, // average values for matrix over last smoothCount
					exceedsAverageTolerance = 0;

			this.smoothMatrices.push(modelViewMatrix.elements.slice()); // add latest

			if (this.smoothMatrices.length < (this.parameters.smoothCount + 1)) {
				markerObject3D.matrix.copy(modelViewMatrix); // not enough for average
			} else {
				this.smoothMatrices.shift(); // remove oldest entry
				averages = [];

				for (i in modelViewMatrix.elements) { // loop over entries in matrix
					sum = 0;
					for (j in this.smoothMatrices) { // calculate average for this entry
						sum += this.smoothMatrices[j][i];
					}
					averages[i] = sum / this.parameters.smoothCount;
					// check how many elements vary from the average by at least AVERAGE_MATRIX_TOLERANCE
					if (Math.abs(averages[i] - modelViewMatrix.elements[i]) >= this.parameters.smoothTolerance) {
						exceedsAverageTolerance++;
					}
				}

				// if moving (i.e. at least AVERAGE_MATRIX_THRESHOLD entries are over AVERAGE_MATRIX_TOLERANCE)
				if (exceedsAverageTolerance >= this.parameters.smoothThreshold) {
					// then update matrix values to average, otherwise, don't render to minimize jitter
					for (i in modelViewMatrix.elements) {
						modelViewMatrix.elements[i] = averages[i];
					}
					markerObject3D.matrix.copy(modelViewMatrix);
					renderReqd = true; // render required in animation loop
				}
			}
		} else {
			markerObject3D.matrix.copy(modelViewMatrix)
		}
	}else if( this.parameters.changeMatrixMode === 'cameraTransformMatrix' ){
		markerObject3D.matrix.getInverse( modelViewMatrix )
	}else {
		console.assert(false)
	}

	// decompose - the matrix into .position, .quaternion, .scale
	markerObject3D.matrix.decompose(markerObject3D.position, markerObject3D.quaternion, markerObject3D.scale)

	// dispatchEvent
	this.dispatchEvent( { type: 'markerFound' } );

	return renderReqd;
}

//////////////////////////////////////////////////////////////////////////////
//		utility functions
//////////////////////////////////////////////////////////////////////////////

/**
 * provide a name for a marker
 * - silly heuristic for now
 * - should be improved
 */
MarkerControls.prototype.name = function(){
	var name = ''
	name += this.parameters.type;
	if( this.parameters.type === 'pattern' ){
		var url = this.parameters.patternUrl
		var basename = url.replace(/^.*\//g, '')
		name += ' - ' + basename
	}else if( this.parameters.type === 'barcode' ){
		name += ' - ' + this.parameters.barcodeValue
	}else{
		console.assert(false, 'no .name() implemented for this marker controls')
	}
	return name
}

//////////////////////////////////////////////////////////////////////////////
//		init for Artoolkit
//////////////////////////////////////////////////////////////////////////////
MarkerControls.prototype._initArtoolkit = function(){
	var _this = this

	var artoolkitMarkerId = null

	var delayedInitTimerId = setInterval(function(){
		// check if arController is init
		var arController = _this.context.arController
		if( arController === null )	return
		// stop looping if it is init
		clearInterval(delayedInitTimerId)
		delayedInitTimerId = null
		// launch the _postInitArtoolkit
		postInit()
	}, 1000/50)

	return

	function postInit(){
		// check if arController is init
		var arController = _this.context.arController
		console.assert(arController !== null )

		// start tracking this pattern
		if( _this.parameters.type === 'pattern' ){
	                arController.loadMarker(_this.parameters.patternUrl).then(function(markerId) {
				artoolkitMarkerId = markerId
	                        arController.trackPatternMarkerId(artoolkitMarkerId, _this.parameters.size);
	                });
		}else if( _this.parameters.type === 'barcode' ){
			artoolkitMarkerId = _this.parameters.barcodeValue
			arController.trackBarcodeMarkerId(artoolkitMarkerId, _this.parameters.size);
		}else if( _this.parameters.type === 'unknown' ){
			artoolkitMarkerId = null
		}else{
			console.log(false, 'invalid marker type', _this.parameters.type)
		}

		// listen to the event
		arController.addEventListener('getMarker', function(event){
			if( event.data.type === ARToolkit.PATTERN_MARKER && _this.parameters.type === 'pattern' ){
				if( artoolkitMarkerId === null )	return
				if( event.data.marker.idPatt === artoolkitMarkerId ) onMarkerFound(event)
			}else if( event.data.type === ARToolkit.BARCODE_MARKER && _this.parameters.type === 'barcode' ){
				// console.log('BARCODE_MARKER idMatrix', event.data.marker.idMatrix, artoolkitMarkerId )
				if( artoolkitMarkerId === null )	return
				if( event.data.marker.idMatrix === artoolkitMarkerId )  onMarkerFound(event)
			}else if( event.data.type === ARToolkit.UNKNOWN_MARKER && _this.parameters.type === 'unknown'){
				onMarkerFound(event)
			}
		})

	}

	function onMarkerFound(event){
		// honor his.parameters.minConfidence
		if( event.data.type === ARToolkit.PATTERN_MARKER && event.data.marker.cfPatt < _this.parameters.minConfidence )	return
		if( event.data.type === ARToolkit.BARCODE_MARKER && event.data.marker.cfMatrix < _this.parameters.minConfidence )	return

		var modelViewMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(event.data.matrix)
		_this.updateWithModelViewMatrix(modelViewMatrix)
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkerControls);


/***/ }),

/***/ "./three.js/src/threex/arjs-profile.js":
/*!*********************************************!*\
  !*** ./three.js/src/threex/arjs-profile.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../new-api/arjs-utils */ "./three.js/src/new-api/arjs-utils.js");
/* harmony import */ var _arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

/**
 * ArToolkitProfile helps you build parameters for artoolkit
 * - it is fully independent of the rest of the code
 * - all the other classes are still expecting normal parameters
 * - you can use this class to understand how to tune your specific usecase
 * - it is made to help people to build parameters without understanding all the underlying details.
 */
const Profile = function () {
    this.reset()

    this.performance('default')
}

Profile.prototype._guessPerformanceLabel = function () {
    var isMobile = navigator.userAgent.match(/Android/i)
        || navigator.userAgent.match(/webOS/i)
        || navigator.userAgent.match(/iPhone/i)
        || navigator.userAgent.match(/iPad/i)
        || navigator.userAgent.match(/iPod/i)
        || navigator.userAgent.match(/BlackBerry/i)
        || navigator.userAgent.match(/Windows Phone/i)
        ? true : false
    if (isMobile === true) {
        return 'phone-normal'
    }
    return 'desktop-normal'
}

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

/**
 * reset all parameters
 */
Profile.prototype.reset = function () {
    this.sourceParameters = {
        // to read from the webcam
        sourceType: 'webcam',
    }

    this.contextParameters = {
        cameraParametersUrl: _arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL + '../data/data/camera_para.dat', // TODO dependent of build?
        detectionMode: 'mono',
    }
    this.defaultMarkerParameters = {
        type: 'pattern',
        patternUrl: _arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL + '../data/data/patt.hiro', // TODO dependent of build?
        changeMatrixMode: 'modelViewMatrix',
    }
    return this
};

//////////////////////////////////////////////////////////////////////////////
//		Performance
//////////////////////////////////////////////////////////////////////////////



Profile.prototype.performance = function (label) {

    if (label === 'default') {
        label = this._guessPerformanceLabel()
    }

    if (label === 'desktop-fast') {
        this.contextParameters.canvasWidth = 640 * 3
        this.contextParameters.canvasHeight = 480 * 3

        this.contextParameters.maxDetectionRate = 30
    } else if (label === 'desktop-normal') {
        this.contextParameters.canvasWidth = 640
        this.contextParameters.canvasHeight = 480

        this.contextParameters.maxDetectionRate = 60
    } else if (label === 'phone-normal') {
        this.contextParameters.canvasWidth = 80 * 4
        this.contextParameters.canvasHeight = 60 * 4

        this.contextParameters.maxDetectionRate = 30
    } else if (label === 'phone-slow') {
        this.contextParameters.canvasWidth = 80 * 3
        this.contextParameters.canvasHeight = 60 * 3

        this.contextParameters.maxDetectionRate = 30
    } else {
        console.assert(false, 'unknonwn label ' + label)
    }
    return this
}

//////////////////////////////////////////////////////////////////////////////
//		Marker
//////////////////////////////////////////////////////////////////////////////


Profile.prototype.defaultMarker = function (trackingBackend) {
    trackingBackend = trackingBackend || this.contextParameters.trackingBackend

    if (trackingBackend === 'artoolkit') {
        this.contextParameters.detectionMode = 'mono'
        this.defaultMarkerParameters.type = 'pattern'
        this.defaultMarkerParameters.patternUrl = _arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL + '../data/data/patt.hiro' // TODO dependent of build?
    } else console.assert(false)

    return this
}
//////////////////////////////////////////////////////////////////////////////
//		Source
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.sourceWebcam = function () {
    this.sourceParameters.sourceType = 'webcam'
    delete this.sourceParameters.sourceUrl
    return this
}

Profile.prototype.sourceVideo = function (url) {
    this.sourceParameters.sourceType = 'video'
    this.sourceParameters.sourceUrl = url
    return this
}

Profile.prototype.sourceImage = function (url) {
    this.sourceParameters.sourceType = 'image'
    this.sourceParameters.sourceUrl = url
    return this
}

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.trackingBackend = function (trackingBackend) {
    console.warn('stop profile.trackingBackend() obsolete function. use .trackingMethod instead')
    this.contextParameters.trackingBackend = trackingBackend
    return this
}

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.changeMatrixMode = function (changeMatrixMode) {
    this.defaultMarkerParameters.changeMatrixMode = changeMatrixMode
    return this
}

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.trackingMethod = function (trackingMethod) {
    var data = _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_0__.default.parseTrackingMethod(trackingMethod)
    this.defaultMarkerParameters.markersAreaEnabled = data.markersAreaEnabled
    this.contextParameters.trackingBackend = data.trackingBackend
    return this
}

/**
 * check if the profile is valid. Throw an exception is not valid
 */
Profile.prototype.checkIfValid = function () {
    return this
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Profile);


/***/ }),

/***/ "./three.js/src/threex/arjs-source.js":
/*!********************************************!*\
  !*** ./three.js/src/threex/arjs-source.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const Source = function (parameters) {
    var _this = this

    this.ready = false
    this.domElement = null

    // handle default parameters
    this.parameters = {
        // type of source - ['webcam', 'image', 'video']
        sourceType: 'webcam',
        // url of the source - valid if sourceType = image|video
        sourceUrl: null,

        // Device id of the camera to use (optional)
        deviceId: null,

        // resolution of at which we initialize in the source image
        sourceWidth: 640,
        sourceHeight: 480,
        // resolution displayed for the source
        displayWidth: 640,
        displayHeight: 480,
    }
    //////////////////////////////////////////////////////////////////////////////
    //		setParameters
    //////////////////////////////////////////////////////////////////////////////
    setParameters(parameters)
    function setParameters(parameters) {
        if (parameters === undefined) return
        for (var key in parameters) {
            var newValue = parameters[key]

            if (newValue === undefined) {
                console.warn("ArToolkitSource: '" + key + "' parameter is undefined.")
                continue
            }

            var currentValue = _this.parameters[key]

            if (currentValue === undefined) {
                console.warn("ArToolkitSource: '" + key + "' is not a property of this material.")
                continue
            }

            _this.parameters[key] = newValue
        }
    }
}

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////
Source.prototype.init = function (onReady, onError) {
    var _this = this

    if (this.parameters.sourceType === 'image') {
        var domElement = this._initSourceImage(onSourceReady, onError)
    } else if (this.parameters.sourceType === 'video') {
        var domElement = this._initSourceVideo(onSourceReady, onError)
    } else if (this.parameters.sourceType === 'webcam') {
        // var domElement = this._initSourceWebcamOld(onSourceReady)
        var domElement = this._initSourceWebcam(onSourceReady, onError)
    } else {
        console.assert(false)
    }

    // attach
    this.domElement = domElement
    this.domElement.style.position = 'absolute'
    this.domElement.style.top = '0px'
    this.domElement.style.left = '0px'
    this.domElement.style.zIndex = '-2'
    this.domElement.setAttribute('id', 'arjs-video');

    return this
    function onSourceReady() {
        document.body.appendChild(_this.domElement);
        window.dispatchEvent(new CustomEvent('arjs-video-loaded', {
            detail: {
                component: document.querySelector('#arjs-video'),
            },
        }));

        _this.ready = true

        onReady && onReady()
    }
}

////////////////////////////////////////////////////////////////////////////////
//          init image source
////////////////////////////////////////////////////////////////////////////////


Source.prototype._initSourceImage = function (onReady) {
    // TODO make it static
    var domElement = document.createElement('img');
    domElement.src = this.parameters.sourceUrl;

    domElement.width = this.parameters.sourceWidth;
    domElement.height = this.parameters.sourceHeight;
    domElement.style.width = this.parameters.displayWidth + 'px';
    domElement.style.height = this.parameters.displayHeight + 'px';

    domElement.onload = onReady;
    return domElement
}

////////////////////////////////////////////////////////////////////////////////
//          init video source
////////////////////////////////////////////////////////////////////////////////


Source.prototype._initSourceVideo = function (onReady) {
    // TODO make it static
    var domElement = document.createElement('video');
    domElement.src = this.parameters.sourceUrl;

    domElement.style.objectFit = 'initial';

    domElement.autoplay = true;
    domElement.webkitPlaysinline = true;
    domElement.controls = false;
    domElement.loop = true;
    domElement.muted = true;

    // trick to trigger the video on android
    document.body.addEventListener('click', function onClick() {
        document.body.removeEventListener('click', onClick);
        domElement.play()
    });

    domElement.width = this.parameters.sourceWidth;
    domElement.height = this.parameters.sourceHeight;
    domElement.style.width = this.parameters.displayWidth + 'px';
    domElement.style.height = this.parameters.displayHeight + 'px';

    domElement.onloadeddata = onReady;
    return domElement
}

////////////////////////////////////////////////////////////////////////////////
//          handle webcam source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceWebcam = function (onReady, onError) {
    var _this = this

    // init default value
    onError = onError || function (error) {
        alert('Webcam Error\nName: ' + error.name + '\nMessage: ' + error.message)
        var event = new CustomEvent('camera-error', { error: error });
        window.dispatchEvent(event);

        setTimeout(() => {
            alert('Webcam Error\nName: ' + error.name + '\nMessage: ' + error.message)
        }, 1000);
    }

    var domElement = document.createElement('video');
    domElement.setAttribute('autoplay', '');
    domElement.setAttribute('muted', '');
    domElement.setAttribute('playsinline', '');
    domElement.style.width = this.parameters.displayWidth + 'px'
    domElement.style.height = this.parameters.displayHeight + 'px'

    // check API is available
    if (navigator.mediaDevices === undefined
        || navigator.mediaDevices.enumerateDevices === undefined
        || navigator.mediaDevices.getUserMedia === undefined) {
        if (navigator.mediaDevices === undefined) var fctName = 'navigator.mediaDevices'
        else if (navigator.mediaDevices.enumerateDevices === undefined) var fctName = 'navigator.mediaDevices.enumerateDevices'
        else if (navigator.mediaDevices.getUserMedia === undefined) var fctName = 'navigator.mediaDevices.getUserMedia'
        else console.assert(false)
        onError({
            name: '',
            message: 'WebRTC issue-! ' + fctName + ' not present in your browser'
        });
        return null
    }

    // get available devices
    navigator.mediaDevices.enumerateDevices().then(function (devices) {
        var userMediaConstraints = {
            audio: false,
            video: {
                facingMode: 'environment',
                width: {
                    ideal: _this.parameters.sourceWidth,
                    // min: 1024,
                    // max: 1920
                },
                height: {
                    ideal: _this.parameters.sourceHeight,
                    // min: 776,
                    // max: 1080
                }
            }
        };

        if (null !== _this.parameters.deviceId) {
            userMediaConstraints.video.deviceId = {
                exact: _this.parameters.deviceId
            };
        }

        // get a device which satisfy the constraints
        navigator.mediaDevices.getUserMedia(userMediaConstraints).then(function success(stream) {
            // set the .src of the domElement
            domElement.srcObject = stream;

            var event = new CustomEvent('camera-init', { stream: stream });
            window.dispatchEvent(event);
            // to start the video, when it is possible to start it only on userevent. like in android
            document.body.addEventListener('click', function () {
                domElement.play();
            });
            // domElement.play();

            onReady();
        }).catch(function (error) {
            onError({
                name: error.name,
                message: error.message
            });
        });
    }).catch(function (error) {
        onError({
            message: error.message
        });
    });

    return domElement
}

//////////////////////////////////////////////////////////////////////////////
//		Handle Mobile Torch
//////////////////////////////////////////////////////////////////////////////
Source.prototype.hasMobileTorch = function () {
    var stream = arToolkitSource.domElement.srcObject
    if (stream instanceof MediaStream === false) return false

    if (this._currentTorchStatus === undefined) {
        this._currentTorchStatus = false
    }

    var videoTrack = stream.getVideoTracks()[0];

    // if videoTrack.getCapabilities() doesnt exist, return false now
    if (videoTrack.getCapabilities === undefined) return false

    var capabilities = videoTrack.getCapabilities()

    return capabilities.torch ? true : false
}

/**
 * toggle the flash/torch of the mobile fun if applicable.
 * Great post about it https://www.oberhofer.co/mediastreamtrack-and-its-capabilities/
 */
Source.prototype.toggleMobileTorch = function () {
    // sanity check
    console.assert(this.hasMobileTorch() === true)

    var stream = arToolkitSource.domElement.srcObject
    if (stream instanceof MediaStream === false) {
        alert('enabling mobile torch is available only on webcam')
        return
    }

    if (this._currentTorchStatus === undefined) {
        this._currentTorchStatus = false
    }

    var videoTrack = stream.getVideoTracks()[0];
    var capabilities = videoTrack.getCapabilities()

    if (!capabilities.torch) {
        alert('no mobile torch is available on your camera')
        return
    }

    this._currentTorchStatus = this._currentTorchStatus === false ? true : false
    videoTrack.applyConstraints({
        advanced: [{
            torch: this._currentTorchStatus
        }]
    }).catch(function (error) {
        console.log(error)
    });
}

Source.prototype.domElementWidth = function () {
    return parseInt(this.domElement.style.width)
}
Source.prototype.domElementHeight = function () {
    return parseInt(this.domElement.style.height)
}

////////////////////////////////////////////////////////////////////////////////
//          handle resize
////////////////////////////////////////////////////////////////////////////////

Source.prototype.onResizeElement = function () {
    var _this = this
    var screenWidth = window.innerWidth
    var screenHeight = window.innerHeight

    // sanity check
    console.assert(arguments.length === 0)

    // compute sourceWidth, sourceHeight
    if (this.domElement.nodeName === "IMG") {
        var sourceWidth = this.domElement.naturalWidth
        var sourceHeight = this.domElement.naturalHeight
    } else if (this.domElement.nodeName === "VIDEO") {
        var sourceWidth = this.domElement.videoWidth
        var sourceHeight = this.domElement.videoHeight
    } else {
        console.assert(false)
    }

    // compute sourceAspect
    var sourceAspect = sourceWidth / sourceHeight
    // compute screenAspect
    var screenAspect = screenWidth / screenHeight

    // if screenAspect < sourceAspect, then change the width, else change the height
    if (screenAspect < sourceAspect) {
        // compute newWidth and set .width/.marginLeft
        var newWidth = sourceAspect * screenHeight
        this.domElement.style.width = newWidth + 'px'
        this.domElement.style.marginLeft = -(newWidth - screenWidth) / 2 + 'px'

        // init style.height/.marginTop to normal value
        this.domElement.style.height = screenHeight + 'px'
        this.domElement.style.marginTop = '0px'
    } else {
        // compute newHeight and set .height/.marginTop
        var newHeight = 1 / (sourceAspect / screenWidth)
        this.domElement.style.height = newHeight + 'px'
        this.domElement.style.marginTop = -(newHeight - screenHeight) / 2 + 'px'

        // init style.width/.marginLeft to normal value
        this.domElement.style.width = screenWidth + 'px'
        this.domElement.style.marginLeft = '0px'
    }
}
/*
Source.prototype.copyElementSizeTo = function(otherElement){
	otherElement.style.width = this.domElement.style.width
	otherElement.style.height = this.domElement.style.height
	otherElement.style.marginLeft = this.domElement.style.marginLeft
	otherElement.style.marginTop = this.domElement.style.marginTop
}
*/

Source.prototype.copyElementSizeTo = function (otherElement) {

    if (window.innerWidth > window.innerHeight) {
        //landscape
        otherElement.style.width = this.domElement.style.width
        otherElement.style.height = this.domElement.style.height
        otherElement.style.marginLeft = this.domElement.style.marginLeft
        otherElement.style.marginTop = this.domElement.style.marginTop
    }
    else {
        //portrait
        otherElement.style.height = this.domElement.style.height
        otherElement.style.width = (parseInt(otherElement.style.height) * 4 / 3) + "px";
        otherElement.style.marginLeft = ((window.innerWidth - parseInt(otherElement.style.width)) / 2) + "px";
        otherElement.style.marginTop = 0;
    }

}

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

Source.prototype.copySizeTo = function () {
    console.warn('obsolete function arToolkitSource.copySizeTo. Use arToolkitSource.copyElementSizeTo')
    this.copyElementSizeTo.apply(this, arguments)
}

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

Source.prototype.onResize = function (arToolkitContext, renderer, camera) {
    if (arguments.length !== 3) {
        console.warn('obsolete function arToolkitSource.onResize. Use arToolkitSource.onResizeElement')
        return this.onResizeElement.apply(this, arguments)
    }

    var trackingBackend = arToolkitContext.parameters.trackingBackend


    // RESIZE DOMELEMENT
    if (trackingBackend === 'artoolkit') {

        this.onResizeElement()

        var isAframe = renderer.domElement.dataset.aframeCanvas ? true : false
        if (isAframe === false) {
            this.copyElementSizeTo(renderer.domElement)
        } else {

        }

        if (arToolkitContext.arController !== null) {
            this.copyElementSizeTo(arToolkitContext.arController.canvas)
        }
    } else console.assert(false, 'unhandled trackingBackend ' + trackingBackend)


    // UPDATE CAMERA
    if (trackingBackend === 'artoolkit') {
        if (arToolkitContext.arController !== null) {
            camera.projectionMatrix.copy(arToolkitContext.getProjectionMatrix());
        }
    } else console.assert(false, 'unhandled trackingBackend ' + trackingBackend)
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Source);

/***/ }),

/***/ "./three.js/src/threex/threex-arbasecontrols.js":
/*!******************************************************!*\
  !*** ./three.js/src/threex/threex-arbasecontrols.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const ArBaseControls = function(object3d) {
	this.id = ArBaseControls.id++

	this.object3d = object3d
	this.object3d.matrixAutoUpdate = false;
	this.object3d.visible = false

	// Events to honor
	// this.dispatchEvent({ type: 'becameVisible' })
	// this.dispatchEvent({ type: 'markerVisible' })	// replace markerFound
	// this.dispatchEvent({ type: 'becameUnVisible' })
}

ArBaseControls.id = 0

ArBaseControls.prototype = Object.create(three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype);

//////////////////////////////////////////////////////////////////////////////
//		Functions
//////////////////////////////////////////////////////////////////////////////
/**
 * error catching function for update()
 */
ArBaseControls.prototype.update = function(){
	console.assert(false, 'you need to implement your own update')
}

/**
 * error catching function for name()
 */
ArBaseControls.prototype.name = function(){
	console.assert(false, 'you need to implement your own .name()')
	return 'Not yet implemented - name()'
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArBaseControls);


/***/ }),

/***/ "./three.js/src/threex/threex-armarkerhelper.js":
/*!******************************************************!*\
  !*** ./three.js/src/threex/threex-armarkerhelper.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const ArMarkerHelper = function(markerControls){
	this.object3d = new three__WEBPACK_IMPORTED_MODULE_0__.Group

	var mesh = new three__WEBPACK_IMPORTED_MODULE_0__.AxesHelper()
	this.object3d.add(mesh)

	var text = markerControls.id
	// debugger
	// var text = markerControls.parameters.patternUrl.slice(-1).toUpperCase();

	var canvas = document.createElement( 'canvas' );
	canvas.width =  64;
	canvas.height = 64;

	var context = canvas.getContext( '2d' );
	var texture = new three__WEBPACK_IMPORTED_MODULE_0__.CanvasTexture( canvas );

	// put the text in the sprite
	context.font = '48px monospace';
	context.fillStyle = 'rgba(192,192,255, 0.5)';
	context.fillRect( 0, 0, canvas.width, canvas.height );
	context.fillStyle = 'darkblue';
	context.fillText(text, canvas.width/4, 3*canvas.height/4 )
	texture.needsUpdate = true

	// var geometry = new THREE.CubeGeometry(1, 1, 1)
	var geometry = new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(1, 1)
	var material = new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({
		map: texture,
		transparent: true
	});
	var mesh = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(geometry, material)
	mesh.rotation.x = -Math.PI/2

	this.object3d.add(mesh)

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArMarkerHelper);


/***/ }),

/***/ "./three.js/src/threex/threex-arsmoothedcontrols.js":
/*!**********************************************************!*\
  !*** ./three.js/src/threex/threex-arsmoothedcontrols.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");


/**
 * - lerp position/quaternino/scale
 * - minDelayDetected
 * - minDelayUndetected
 * @param {[type]} object3d   [description]
 * @param {[type]} parameters [description]
 */
const ArSmoothedControls = function(object3d, parameters){
	var _this = this
	
	_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__.default.call(this, object3d)
	
	// copy parameters
	this.object3d.visible = false
	
	this._lastLerpStepAt = null
	this._visibleStartedAt = null
	this._unvisibleStartedAt = null

	// handle default parameters
	parameters = parameters || {}
	this.parameters = {
		// lerp coeficient for the position - between [0,1] - default to 1
		lerpPosition: 0.8,
		// lerp coeficient for the quaternion - between [0,1] - default to 1
		lerpQuaternion: 0.2,
		// lerp coeficient for the scale - between [0,1] - default to 1
		lerpScale: 0.7,
		// delay for lerp fixed steps - in seconds - default to 1/120
		lerpStepDelay: 1/60,
		// minimum delay the sub-control must be visible before this controls become visible - default to 0 seconds
		minVisibleDelay: 0.0,
		// minimum delay the sub-control must be unvisible before this controls become unvisible - default to 0 seconds
		minUnvisibleDelay: 0.2,
	}
	
	//////////////////////////////////////////////////////////////////////////////
	//		setParameters
	//////////////////////////////////////////////////////////////////////////////
	setParameters(parameters)
	function setParameters(parameters){
		if( parameters === undefined )	return
		for( var key in parameters ){
			var newValue = parameters[ key ]

			if( newValue === undefined ){
				console.warn( "ArSmoothedControls: '" + key + "' parameter is undefined." )
				continue
			}

			var currentValue = _this.parameters[ key ]

			if( currentValue === undefined ){
				console.warn( "ArSmoothedControls: '" + key + "' is not a property of this material." )
				continue
			}

			_this.parameters[ key ] = newValue
		}
	}
}
	
ArSmoothedControls.prototype = Object.create( _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__.default.prototype );
ArSmoothedControls.prototype.constructor = ArSmoothedControls;

//////////////////////////////////////////////////////////////////////////////
//		update function
//////////////////////////////////////////////////////////////////////////////

ArSmoothedControls.prototype.update = function(targetObject3d){
	var object3d = this.object3d
	var parameters = this.parameters
	var wasVisible = object3d.visible
	var present = performance.now()/1000


	//////////////////////////////////////////////////////////////////////////////
	//		handle object3d.visible with minVisibleDelay/minUnvisibleDelay
	//////////////////////////////////////////////////////////////////////////////
	if( targetObject3d.visible === false )	this._visibleStartedAt = null
	if( targetObject3d.visible === true )	this._unvisibleStartedAt = null

	if( targetObject3d.visible === true && this._visibleStartedAt === null )	this._visibleStartedAt = present
	if( targetObject3d.visible === false && this._unvisibleStartedAt === null )	this._unvisibleStartedAt = present

	if( wasVisible === false && targetObject3d.visible === true ){
		var visibleFor = present - this._visibleStartedAt
		if( visibleFor >= this.parameters.minVisibleDelay ){
			object3d.visible = true
			snapDirectlyToTarget()
		}
		// console.log('visibleFor', visibleFor)
	}

	if( wasVisible === true && targetObject3d.visible === false ){
		var unvisibleFor = present - this._unvisibleStartedAt
		if( unvisibleFor >= this.parameters.minUnvisibleDelay ){
			object3d.visible = false			
		}
	}
	
	//////////////////////////////////////////////////////////////////////////////
	//		apply lerp on positon/quaternion/scale
	//////////////////////////////////////////////////////////////////////////////

	// apply lerp steps - require fix time steps to behave the same no matter the fps
	if( this._lastLerpStepAt === null ){
		applyOneSlerpStep()
		this._lastLerpStepAt = present
	}else{
		var nStepsToDo = Math.floor( (present - this._lastLerpStepAt)/this.parameters.lerpStepDelay )
		for(var i = 0; i < nStepsToDo; i++){
			applyOneSlerpStep()
			this._lastLerpStepAt += this.parameters.lerpStepDelay
		}
	}

	// disable the lerp by directly copying targetObject3d position/quaternion/scale
	if( false ){}

	// update the matrix
	this.object3d.updateMatrix()

	//////////////////////////////////////////////////////////////////////////////
	//		honor becameVisible/becameUnVisible event
	//////////////////////////////////////////////////////////////////////////////
	// honor becameVisible event
	if( wasVisible === false && object3d.visible === true ){
		this.dispatchEvent({ type: 'becameVisible' })
	}
	// honor becameUnVisible event
	if( wasVisible === true && object3d.visible === false ){
		this.dispatchEvent({ type: 'becameUnVisible' })
	}
	return

	function snapDirectlyToTarget(){
		object3d.position.copy( targetObject3d.position )
		object3d.quaternion.copy( targetObject3d.quaternion )
		object3d.scale.copy( targetObject3d.scale )
	}	
	
	function applyOneSlerpStep(){
		object3d.position.lerp(targetObject3d.position, parameters.lerpPosition)
		object3d.quaternion.slerp(targetObject3d.quaternion, parameters.lerpQuaternion)
		object3d.scale.lerp(targetObject3d.scale, parameters.lerpScale)
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArSmoothedControls);


/***/ }),

/***/ "three":
/*!**************************************************************************************!*\
  !*** external {"commonjs":"three","commonjs2":"three","amd":"three","root":"THREE"} ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_three__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**************************************!*\
  !*** ./three.js/src/index-threex.js ***!
  \**************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ArMarkerControls": () => (/* reexport safe */ _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "ArMarkerHelper": () => (/* reexport safe */ _threex_threex_armarkerhelper__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "ArSmoothedControls": () => (/* reexport safe */ _threex_threex_arsmoothedcontrols__WEBPACK_IMPORTED_MODULE_2__.default),
/* harmony export */   "ArToolkitContext": () => (/* reexport safe */ _threex_arjs_context__WEBPACK_IMPORTED_MODULE_3__.default),
/* harmony export */   "ArToolkitProfile": () => (/* reexport safe */ _threex_arjs_profile__WEBPACK_IMPORTED_MODULE_4__.default),
/* harmony export */   "ArToolkitSource": () => (/* reexport safe */ _threex_arjs_source__WEBPACK_IMPORTED_MODULE_5__.default),
/* harmony export */   "ArMultiMarkerControls": () => (/* reexport safe */ _markers_area_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_6__.default),
/* harmony export */   "ArMultiMakersLearning": () => (/* reexport safe */ _markers_area_arjs_markersarealearning__WEBPACK_IMPORTED_MODULE_7__.default),
/* harmony export */   "ArMultiMarkerUtils": () => (/* reexport safe */ _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_8__.default)
/* harmony export */ });
/* harmony import */ var _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./threex/arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var _threex_threex_armarkerhelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./threex/threex-armarkerhelper */ "./three.js/src/threex/threex-armarkerhelper.js");
/* harmony import */ var _threex_threex_arsmoothedcontrols__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./threex/threex-arsmoothedcontrols */ "./three.js/src/threex/threex-arsmoothedcontrols.js");
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./threex/arjs-context */ "./three.js/src/threex/arjs-context.js");
/* harmony import */ var _threex_arjs_profile__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./threex/arjs-profile */ "./three.js/src/threex/arjs-profile.js");
/* harmony import */ var _threex_arjs_source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./threex/arjs-source */ "./three.js/src/threex/arjs-source.js");
/* harmony import */ var _markers_area_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./markers-area/arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");
/* harmony import */ var _markers_area_arjs_markersarealearning__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./markers-area/arjs-markersarealearning */ "./three.js/src/markers-area/arjs-markersarealearning.js");
/* harmony import */ var _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./markers-area/arjs-markersareautils */ "./three.js/src/markers-area/arjs-markersareautils.js");







 // typo is spread over codebase




})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,